{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Home \u8fd9\u91cc\u662f Zerokei \uff0c\u6b22\u8fce\u6765\u5230\u6211\u7684\u5b66\u4e60\u6587\u6863 :) \u672c\u7b14\u8bb0\u672c\u53c2\u8003\u4e86 TonyCrane \u63d0\u4f9b\u7684\u6a21\u677f","title":"Home"},{"location":"#home","text":"\u8fd9\u91cc\u662f Zerokei \uff0c\u6b22\u8fce\u6765\u5230\u6211\u7684\u5b66\u4e60\u6587\u6863 :) \u672c\u7b14\u8bb0\u672c\u53c2\u8003\u4e86 TonyCrane \u63d0\u4f9b\u7684\u6a21\u677f","title":"Home"},{"location":"course/","text":"Introduction \u8fd9\u91cc\u4f1a\u653e\u4e00\u4e9b\u6574\u7406\u597d\u7684\u8bfe\u7a0b\u7b14\u8bb0","title":"Introduction"},{"location":"course/#introduction","text":"\u8fd9\u91cc\u4f1a\u653e\u4e00\u4e9b\u6574\u7406\u597d\u7684\u8bfe\u7a0b\u7b14\u8bb0","title":"Introduction"},{"location":"course/crypto/","text":"\u5bc6\u7801\u5b66(2021-2022\u6625\u590f) Introduction \u4e0a\u7684\u662f\u767d\u6d2a\u6b22\u8001\u5e08\u7684\u5bc6\u7801\u5b66\u8bfe\u7a0b\u3002 \u8bfe\u4e0a\u4e3b\u8981\u4ecb\u7ecd\u4e86\u53e4\u5178\u5bc6\u7801\u5b66\uff0c\u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5\u548c\u975e\u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5\u3002 \u8bfe\u7a0b\u504f\u5411\u5de5\u7a0b\u5b9e\u8df5\uff0c\u6570\u5b66\u76f8\u5173\u7684\u8bc1\u660e\u8f83\u5c11\u3002 \u7b14\u8bb0\u4ec5\u4f9b\u53c2\u8003\uff0c\u5982\u679c\u6709\u7eb0\u6f0f\uff0c\u6b22\u8fce\u90ae\u4ef6\u8054\u7cfb\u3002 References \u5f80\u5e74\u7684\u8003\u5bdf\u77e5\u8bc6\u70b9 \u4e00\u4f4d\u5b66\u957fNotion\u7b14\u8bb0","title":"\u5bc6\u7801\u5b66(2021-2022\u6625\u590f)"},{"location":"course/crypto/#2021-2022","text":"","title":"\u5bc6\u7801\u5b66(2021-2022\u6625\u590f)"},{"location":"course/crypto/#introduction","text":"\u4e0a\u7684\u662f\u767d\u6d2a\u6b22\u8001\u5e08\u7684\u5bc6\u7801\u5b66\u8bfe\u7a0b\u3002 \u8bfe\u4e0a\u4e3b\u8981\u4ecb\u7ecd\u4e86\u53e4\u5178\u5bc6\u7801\u5b66\uff0c\u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5\u548c\u975e\u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5\u3002 \u8bfe\u7a0b\u504f\u5411\u5de5\u7a0b\u5b9e\u8df5\uff0c\u6570\u5b66\u76f8\u5173\u7684\u8bc1\u660e\u8f83\u5c11\u3002 \u7b14\u8bb0\u4ec5\u4f9b\u53c2\u8003\uff0c\u5982\u679c\u6709\u7eb0\u6f0f\uff0c\u6b22\u8fce\u90ae\u4ef6\u8054\u7cfb\u3002","title":"Introduction"},{"location":"course/crypto/#references","text":"\u5f80\u5e74\u7684\u8003\u5bdf\u77e5\u8bc6\u70b9 \u4e00\u4f4d\u5b66\u957fNotion\u7b14\u8bb0","title":"References"},{"location":"course/crypto/AES/","text":"AES Introduction \u6700\u4e3a\u201c\u53ef\u9760\u201d\u7684\u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5 WinRAR\uff0c7-zip\u52a0\u5bc6\u6587\u4ef6\u65f6\u7528\u7684\u5c31\u662fAES \u52d2\u7d22\u8f6f\u4ef6\u7528\u7684\u4e5f\u662fAES\u7b97\u6cd5\u52a0\u5bc6\uff08\u4f7f\u7528RSA\u4f20\u9012\u5bc6\u94a5\uff09 Format \u660e\u6587\u957f\u5ea6=16byte\uff0c\u5bc6\u6587\u957f\u5ea6=16byte AES\u7684key\u6709\u4e09\u79cd\u89c4\u683c\uff0c\u5206\u522b\u4e3a(16byte\uff0c24byte,32byte) Encryption unsigned char a [ 4 ] = { 0x03 , 0x01 , 0x01 , 0x02 }; AddRoundKey ( p , k ); // \u5708\u5bc6\u94a5\u52a0\u6cd5\u8fd0\u7b97 result = p ^ k // (\u5728GF(2^8)\u4e2d\u52a0\u6cd5\u7b49\u4ef7\u4e8e\u5f02\u6216) for ( i = 1 ; i <= 10 ; i ++ ) { ByteSub ( p , 16 ); // sbox\u5b57\u8282\u66ff\u6362 p[i] = sbox[p[i]]; // \u5728ShiftRow\u4e4b\u524d\uff0cp\u8981\u8fdb\u884c\u884c\u5217\u53d8\u6362 ShiftRow ( p ); // \u9010\u884c\u8fdb\u884c\u5faa\u73af\u4f4d\u79fb if ( i != 10 ) // MixColumn\uff0c\u591a\u9879\u5f0f\u4e58\u6cd5 MixColumn ( p , a , 1 ); /* do mul */ else MixColumn ( p , a , 0 ); /* don't mul */ AddRoundKey ( p , k + i * ( 4 * 4 )); } \u5728ShiftRow\u4e4b\u524d\u8fdb\u884c\u884c\u5217\u8868\u6362\u4e3b\u8981\u662f\u4e3a\u4e86\u65b9\u4fbf\u540e\u7eed\u7684MixColumn\u8fd0\u7b97(ShfitRow\u672c\u8eab\u8981\u548cMixColumn\u7ed3\u5408) \u5982\u679c\u4e0d\u5728ShiftRow\u4e4b\u524d\u8fdb\u884c\u884c\u5217\u8f6c\u6362\uff0c\u5728MixColumn\u4e2d\u8ba1\u7b97\u4f1a\u6bd4\u8f83\u590d\u6742 MixColumn \u591a\u9879\u5f0f\u4e58\u6cd5(\u4e00\u6b21\u52a0\u5bc64byte\uff0c1byte\u8868\u793a\u4e00\u4e2a\u591a\u9879\u5f0f\u7cfb\u6570) \u4f8b\uff1a \\((3x^3+x^2+x+2)*(a_3x^3+a_2x^2+a_1x^1+a_0x^0)\\mod (x^4+1)\\) \u88ab\u4e58\u6570 \\(3x^3+x^2+x+2\\) \u7ed9\u5b9a\uff0c\u5728 \\(x^4+1\\) \u4e0b\u4e0d\u53ef\u7ea6\uff0c\u5176\u4e58\u6cd5\u9006\u5143\u4e3a \\(Bx^3+Dx^2+9x+E\\) \uff08\u82e5 \\(3x^3+x^2+x+2\\) \u4e0d\u53ef\u7ea6\uff0c\u5219 \\(x^4+1\\) (\u53ef\u62c6\u5206\u4e3a \\((x^2+1)^2\\) ), \\(3x^3+x^2+x+2\\) \u53ef\u80fd\u4e0d\u4e92\u7d20\uff09 \u672c\u8eab\u7684\u4e58\u6cd5 \u603b\u6d41\u7a0b \u9ad8\u6b21\u7cfb\u6570\u5728\u4e0b\uff0c\u4f4e\u6b21\u7cfb\u6570\u5728\u4e0a\uff0c\u8fdb\u884c\u77e9\u9635\u4e58\u6cd5 \u5de6\u4e58\u7684\u77e9\u9635\uff0c\u56e0\u4e3a\u539f\u591a\u9879\u5f0f \\((3x^3+x^2+x+2)\\) \u7ed9\u5b9a\uff0c\u6240\u4ee5\u8be5\u77e9\u9635\u4e5f\u56fa\u5b9a\u4e0d\u53d8 \u7cfb\u6570\u7684\u8fd0\u7b97 \u52a0\u6cd5\u4f7f\u7528\u5f02\u6216 \u4e58\u6cd5\u4f7f\u7528\u519c\u592b\u7b97\u6cd5(\u4f7f\u5f97\u7ed3\u679c\u4ecd\u4e3a1byte) \u519c\u592b\u7b97\u6cd5 target: \\(x(8bit)*y(8bit)\\mod 11Bh = z(8bit)\\) int z = 0 ; while ( y ){ // \u7c7b\u4f3c\u5feb\u901f\u5e42 if ( y & 1 ){ z = z ^ x ; } x = x << 1 ; y = y >> 1 ; if ( x & ( 1 << 8 )){ x = x ^ 0x11B // x = x - 11B \u56e0\u4e3a\u5728GF(2^8)\u4e2d\uff0c11B+11B=11B^11B=0 } } Sbox\u751f\u6210 sbox[a] =(( \\(a^{-1}\\) * 0x1F) mod ( \\(X^8\\) + 1)) ^ 0x63; \u8f6e\u5bc6\u94a5\u751f\u6210 \u4ee5\u6700\u521d\u76844byte\u5bc6\u94a5\u4f5c\u4e3a\u79cd\u5b50\u5bc6\u94a5\uff0c\u6bcf\u8f6e\u751f\u62104byte\u65b0\u5bc6\u94a5\uff0c\u5171\u8fdb\u884c10\u8f6e k[4] = k[3] k[4:7]\u5faa\u73af\u5de6\u79fb1byte k[4:7]\u5728sbox\u4e2d\u66ff\u6362 k[4] ^= r (r = \\(2^{(i-4)/4}\\) mod 0x11B) k[4] ^= k[0] k[5] = k[4] ^ k[1]\uff1bk[6] = k[5] ^ k[2]\uff1bk[7] = k[6] ^ k[3]\uff1b Math \\(GF(2)\\) \u52a0\u6cd5\u7b49\u6548\u4e8e\u5f02\u6216 0+1=1,1+0=1,0+0=0,1+1=0 \\(GF(2^8)\\) \u52a0\u6cd5\u6309\u4f4d\u52a0\u6cd5(\u5f02\u6216)\uff0c\u4e0d\u8fdb\u4f4d 00110111+00001111=00111000 \u4efb\u610f\u4e00\u4e2a\u6570\u7684\u76f8\u53cd\u6570\u5c31\u662f\u5b83\u672c\u8eab 00110111+00110111=00000000","title":"AES"},{"location":"course/crypto/AES/#aes","text":"","title":"AES"},{"location":"course/crypto/AES/#introduction","text":"\u6700\u4e3a\u201c\u53ef\u9760\u201d\u7684\u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5 WinRAR\uff0c7-zip\u52a0\u5bc6\u6587\u4ef6\u65f6\u7528\u7684\u5c31\u662fAES \u52d2\u7d22\u8f6f\u4ef6\u7528\u7684\u4e5f\u662fAES\u7b97\u6cd5\u52a0\u5bc6\uff08\u4f7f\u7528RSA\u4f20\u9012\u5bc6\u94a5\uff09","title":"Introduction"},{"location":"course/crypto/AES/#format","text":"\u660e\u6587\u957f\u5ea6=16byte\uff0c\u5bc6\u6587\u957f\u5ea6=16byte AES\u7684key\u6709\u4e09\u79cd\u89c4\u683c\uff0c\u5206\u522b\u4e3a(16byte\uff0c24byte,32byte)","title":"Format"},{"location":"course/crypto/AES/#encryption","text":"unsigned char a [ 4 ] = { 0x03 , 0x01 , 0x01 , 0x02 }; AddRoundKey ( p , k ); // \u5708\u5bc6\u94a5\u52a0\u6cd5\u8fd0\u7b97 result = p ^ k // (\u5728GF(2^8)\u4e2d\u52a0\u6cd5\u7b49\u4ef7\u4e8e\u5f02\u6216) for ( i = 1 ; i <= 10 ; i ++ ) { ByteSub ( p , 16 ); // sbox\u5b57\u8282\u66ff\u6362 p[i] = sbox[p[i]]; // \u5728ShiftRow\u4e4b\u524d\uff0cp\u8981\u8fdb\u884c\u884c\u5217\u53d8\u6362 ShiftRow ( p ); // \u9010\u884c\u8fdb\u884c\u5faa\u73af\u4f4d\u79fb if ( i != 10 ) // MixColumn\uff0c\u591a\u9879\u5f0f\u4e58\u6cd5 MixColumn ( p , a , 1 ); /* do mul */ else MixColumn ( p , a , 0 ); /* don't mul */ AddRoundKey ( p , k + i * ( 4 * 4 )); } \u5728ShiftRow\u4e4b\u524d\u8fdb\u884c\u884c\u5217\u8868\u6362\u4e3b\u8981\u662f\u4e3a\u4e86\u65b9\u4fbf\u540e\u7eed\u7684MixColumn\u8fd0\u7b97(ShfitRow\u672c\u8eab\u8981\u548cMixColumn\u7ed3\u5408) \u5982\u679c\u4e0d\u5728ShiftRow\u4e4b\u524d\u8fdb\u884c\u884c\u5217\u8f6c\u6362\uff0c\u5728MixColumn\u4e2d\u8ba1\u7b97\u4f1a\u6bd4\u8f83\u590d\u6742","title":"Encryption"},{"location":"course/crypto/AES/#mixcolumn","text":"\u591a\u9879\u5f0f\u4e58\u6cd5(\u4e00\u6b21\u52a0\u5bc64byte\uff0c1byte\u8868\u793a\u4e00\u4e2a\u591a\u9879\u5f0f\u7cfb\u6570) \u4f8b\uff1a \\((3x^3+x^2+x+2)*(a_3x^3+a_2x^2+a_1x^1+a_0x^0)\\mod (x^4+1)\\) \u88ab\u4e58\u6570 \\(3x^3+x^2+x+2\\) \u7ed9\u5b9a\uff0c\u5728 \\(x^4+1\\) \u4e0b\u4e0d\u53ef\u7ea6\uff0c\u5176\u4e58\u6cd5\u9006\u5143\u4e3a \\(Bx^3+Dx^2+9x+E\\) \uff08\u82e5 \\(3x^3+x^2+x+2\\) \u4e0d\u53ef\u7ea6\uff0c\u5219 \\(x^4+1\\) (\u53ef\u62c6\u5206\u4e3a \\((x^2+1)^2\\) ), \\(3x^3+x^2+x+2\\) \u53ef\u80fd\u4e0d\u4e92\u7d20\uff09 \u672c\u8eab\u7684\u4e58\u6cd5 \u603b\u6d41\u7a0b \u9ad8\u6b21\u7cfb\u6570\u5728\u4e0b\uff0c\u4f4e\u6b21\u7cfb\u6570\u5728\u4e0a\uff0c\u8fdb\u884c\u77e9\u9635\u4e58\u6cd5 \u5de6\u4e58\u7684\u77e9\u9635\uff0c\u56e0\u4e3a\u539f\u591a\u9879\u5f0f \\((3x^3+x^2+x+2)\\) \u7ed9\u5b9a\uff0c\u6240\u4ee5\u8be5\u77e9\u9635\u4e5f\u56fa\u5b9a\u4e0d\u53d8 \u7cfb\u6570\u7684\u8fd0\u7b97 \u52a0\u6cd5\u4f7f\u7528\u5f02\u6216 \u4e58\u6cd5\u4f7f\u7528\u519c\u592b\u7b97\u6cd5(\u4f7f\u5f97\u7ed3\u679c\u4ecd\u4e3a1byte)","title":"MixColumn"},{"location":"course/crypto/AES/#_1","text":"target: \\(x(8bit)*y(8bit)\\mod 11Bh = z(8bit)\\) int z = 0 ; while ( y ){ // \u7c7b\u4f3c\u5feb\u901f\u5e42 if ( y & 1 ){ z = z ^ x ; } x = x << 1 ; y = y >> 1 ; if ( x & ( 1 << 8 )){ x = x ^ 0x11B // x = x - 11B \u56e0\u4e3a\u5728GF(2^8)\u4e2d\uff0c11B+11B=11B^11B=0 } }","title":"\u519c\u592b\u7b97\u6cd5"},{"location":"course/crypto/AES/#sbox","text":"sbox[a] =(( \\(a^{-1}\\) * 0x1F) mod ( \\(X^8\\) + 1)) ^ 0x63;","title":"Sbox\u751f\u6210"},{"location":"course/crypto/AES/#_2","text":"\u4ee5\u6700\u521d\u76844byte\u5bc6\u94a5\u4f5c\u4e3a\u79cd\u5b50\u5bc6\u94a5\uff0c\u6bcf\u8f6e\u751f\u62104byte\u65b0\u5bc6\u94a5\uff0c\u5171\u8fdb\u884c10\u8f6e k[4] = k[3] k[4:7]\u5faa\u73af\u5de6\u79fb1byte k[4:7]\u5728sbox\u4e2d\u66ff\u6362 k[4] ^= r (r = \\(2^{(i-4)/4}\\) mod 0x11B) k[4] ^= k[0] k[5] = k[4] ^ k[1]\uff1bk[6] = k[5] ^ k[2]\uff1bk[7] = k[6] ^ k[3]\uff1b","title":"\u8f6e\u5bc6\u94a5\u751f\u6210"},{"location":"course/crypto/AES/#math","text":"","title":"Math"},{"location":"course/crypto/AES/#gf2","text":"\u52a0\u6cd5\u7b49\u6548\u4e8e\u5f02\u6216 0+1=1,1+0=1,0+0=0,1+1=0","title":"\\(GF(2)\\)"},{"location":"course/crypto/AES/#gf28","text":"\u52a0\u6cd5\u6309\u4f4d\u52a0\u6cd5(\u5f02\u6216)\uff0c\u4e0d\u8fdb\u4f4d 00110111+00001111=00111000 \u4efb\u610f\u4e00\u4e2a\u6570\u7684\u76f8\u53cd\u6570\u5c31\u662f\u5b83\u672c\u8eab 00110111+00110111=00000000","title":"\\(GF(2^8)\\)"},{"location":"course/crypto/DES/","text":"DES Info 2022/6/14 DES\u52a0\u5bc6\u8fc7\u7a0b\u8865\u5145\uff08R(48)\u548ckey\u5f02\u6216\uff09 Data Encryption Standard \u5bc6\u94a5\u957f\u5ea6\u4e3a64bit \u660e\u6587\u52a0\u5bc6\u53ef\u91c7\u7528ECB\u3001CBC\u3001CFB \u5927\u81f4\u6d41\u7a0b \u5bc6\u94a5\u5904\u7406 key\u5bc6\u94a5 \u5bc6\u94a5\uff0c64bit \u7ecf\u8fc7\u5904\u7406\u751f\u621016\u4e2a48bit\u7684key\uff0c\u7528\u4e8e16\u8f6e\u52a0\u5bc6\u5faa\u73af key\u521d\u59cb\u5316 \u7528\u6237\u6307\u5b9a\u521d\u59cb\u5bc6\u94a5 key_perm_table : \u4ece8\u5b57\u8282\u7684key\u4e2d\u9009\u62e956bit\uff0c\u5e76\u62c6\u5206\u6210\u5de6\u53f3\u4e24\u534a(28bit+28bit) key\u5faa\u73af\u8fc7\u7a0b key_rol_steps \uff0c\u4e24\u4e2a28bit\u5206\u522b\u5faa\u73af\u5de6\u79fb key_56bit_to_48bit_table : \u4ece56bit\u4e2d\u9009\u51fa48\u4e2abit \u7ee7\u7eed\u6267\u884c\u6b65\u9aa4a DES\u52a0\u5bc6 IP(64bit->64bit) \u7f6e\u6362 \u4f7f\u7528perm\u8fdb\u884c\u67e5\u8868\u4f18\u5316 f(R(32),key(48)) (32bit->32bit) \u7ecf\u8fc7\u4f4d\u9009\u62e9\u51fd\u6570E R(32)->R(48) (32bit->48bit) R(48)\u548ckey(48)\u5f02\u6216 S\u76d2 char S[8][64] 8*(a1a2a3a4a5a6) = 8*S[a1a6][a2a3a4a5] (48bit->32bit) \u7f6e\u6362\u51fd\u6570P(32bit->32bit) FP(64bit->64bit) IP-1\uff0cIP\u7684\u9006\u8fd0\u7b97 \u4f7f\u7528perm\u8fdb\u884c\u67e5\u8868\u4f18\u5316 \u4e09\u91cdDES c = E(D(E(p,k1), k2), k3) p = D(E(D(c,k3), k2), k1)","title":"DES"},{"location":"course/crypto/DES/#des","text":"Info 2022/6/14 DES\u52a0\u5bc6\u8fc7\u7a0b\u8865\u5145\uff08R(48)\u548ckey\u5f02\u6216\uff09 Data Encryption Standard \u5bc6\u94a5\u957f\u5ea6\u4e3a64bit \u660e\u6587\u52a0\u5bc6\u53ef\u91c7\u7528ECB\u3001CBC\u3001CFB","title":"DES"},{"location":"course/crypto/DES/#_1","text":"","title":"\u5927\u81f4\u6d41\u7a0b"},{"location":"course/crypto/DES/#_2","text":"key\u5bc6\u94a5 \u5bc6\u94a5\uff0c64bit \u7ecf\u8fc7\u5904\u7406\u751f\u621016\u4e2a48bit\u7684key\uff0c\u7528\u4e8e16\u8f6e\u52a0\u5bc6\u5faa\u73af key\u521d\u59cb\u5316 \u7528\u6237\u6307\u5b9a\u521d\u59cb\u5bc6\u94a5 key_perm_table : \u4ece8\u5b57\u8282\u7684key\u4e2d\u9009\u62e956bit\uff0c\u5e76\u62c6\u5206\u6210\u5de6\u53f3\u4e24\u534a(28bit+28bit) key\u5faa\u73af\u8fc7\u7a0b key_rol_steps \uff0c\u4e24\u4e2a28bit\u5206\u522b\u5faa\u73af\u5de6\u79fb key_56bit_to_48bit_table : \u4ece56bit\u4e2d\u9009\u51fa48\u4e2abit \u7ee7\u7eed\u6267\u884c\u6b65\u9aa4a","title":"\u5bc6\u94a5\u5904\u7406"},{"location":"course/crypto/DES/#des_1","text":"IP(64bit->64bit) \u7f6e\u6362 \u4f7f\u7528perm\u8fdb\u884c\u67e5\u8868\u4f18\u5316 f(R(32),key(48)) (32bit->32bit) \u7ecf\u8fc7\u4f4d\u9009\u62e9\u51fd\u6570E R(32)->R(48) (32bit->48bit) R(48)\u548ckey(48)\u5f02\u6216 S\u76d2 char S[8][64] 8*(a1a2a3a4a5a6) = 8*S[a1a6][a2a3a4a5] (48bit->32bit) \u7f6e\u6362\u51fd\u6570P(32bit->32bit) FP(64bit->64bit) IP-1\uff0cIP\u7684\u9006\u8fd0\u7b97 \u4f7f\u7528perm\u8fdb\u884c\u67e5\u8868\u4f18\u5316","title":"DES\u52a0\u5bc6"},{"location":"course/crypto/DES/#des_2","text":"c = E(D(E(p,k1), k2), k3) p = D(E(D(c,k3), k2), k1)","title":"\u4e09\u91cdDES"},{"location":"course/crypto/ECC/","text":"ECC \u692d\u5706\u66f2\u7ebf\u53ef\u4ee5\u5b9a\u4e49\u4e3a\u6240\u6709\u6ee1\u8db3\u65b9\u7a0b \\(E: y^2=x^3+ax+b\\) \u7684\u70b9(x,y)\u6240\u6784\u6210\u7684\u96c6\u5408\u3002 ECC\u7b97\u6cd5\u7684\u516d\u8981\u7d20 a\uff0cb\uff1a\u692d\u5706\u66f2\u7ebf\u7cfb\u6570 p\uff1a\u6a21\u6570 \u57fa\u70b9G\uff08\u66f2\u7ebf\u4e0a\u7684\u4e00\u4e2a\u70b9\uff09 G\u7684\u9636n (n * G = O) \u4f59\u56e0\u5b50 = \u66f2\u7ebf\u7684\u9636/G\u7684\u9636 ECC\u7b97\u6cd5\u7684\u6570\u5b66\u57fa\u7840 \u692d\u5706\u66f2\u7ebf\u5728\u7d20\u57df \\(Z_p\\) \u4e0a\u7684\u8fd0\u7b97\u89c4\u5219 P+O=O+P=P; \u82e5P( \\(x_1\\) , \\(y_1\\) ), Q( \\(x_2\\) , \\(y_2\\) )\u6ee1\u8db3 \\(x_1=x_2,y_1+y_2=0\\) \uff0c\u5219P+Q=O; \u82e5P( \\(x_1\\) , \\(y_1\\) ), Q( \\(x_2\\) , \\(y_2\\) )\u4e0d\u6ee1\u8db3\u4e0a\u9762\u7684\u6027\u8d28\uff0c\u5219 \\(x_3 = \\lambda^2-x_1-x_2\\) \\(y_3=\\lambda(x_1-x_3)-y_1\\) \u82e5 \\(P\\ne Q\\) \uff0c \\(\\lambda=(y_2-y_1)/(x_2-x_1)\\) ; \u82e5 \\(P=Q\\) \uff0c \\(\\lambda=(3x_1^2+a)/(2y_1)\\) . \u692d\u5706\u66f2\u7ebf\u7684\u4e58\u6cd5\u6027\u8d28 \u82e5 \\(Q=k*P\\) (k<n)\uff0c\u5176\u4e2dk\u662f\u5e38\u6570\uff0cQ\u3001P\u662f\u66f2\u7ebf\u4e0a\u7684\u70b9\uff0c\u5219\u901a\u8fc7k,P\u8ba1\u7b97Q\u7b80\u5355\uff0c\u4f46\u662f\u901a\u8fc7Q\u3001P\u63a8\u7b97k\u8f83\u4e3a\u590d\u6742\u3002 OpenSSL\u4e2d\u7684ECC\u5e93 \u521b\u5efagroup EC_GROUP *group=EC_GROUP_new(EC_GFp_simple_method()); a,b,p\u521d\u59cb\u5316group EC_GROUP_set_curve_GFp(group,p,a,b,ctx); \u521b\u5efa\u57fa\u70b9G\u5e76\u901a\u8fc7tx,ty\u521d\u59cb\u5316 G=EC_POINT_new(group); EC_POINT_set_affine_coordinates_GFp(group,G,tx,ty,ctx); G,n,\u4f59\u56e0\u5b50(1)\u8bbe\u7f6egroup EC_GROUP_set_generator(group, G, n, BN_value_one()); \u83b7\u5f97\u70b9T\u7684\u5750\u6807(tx,ty) EC_POINT_get_affine_coordinates_GFp(group,T,tx,ty,ctx) ECC\u4e0a\u7684\u52a0\u6cd5 T = T + G EC_POINT_add(group,T,T,G,ctx) ECC\u4e0a\u7684\u4e58\u6cd5 T = m * G EC_POINT_mul(group,T,m,NULL,NULL,ctx) T = m * G + n * P EC_POINT_mul(group,T,m,P,n,ctx) ECC\u52a0\u5bc6\u89e3\u5bc6 \u516c\u94a5(\u516c\u94a5\u70b9) R = d * G \u79c1\u94a5 d (d < n) \u52a0\u5bc6(r(x),s) r(x) = (k * G).x mod p, \u5176\u4e2dk < n, r(x)\u7ed3\u679c\u4e0d\u80fd\u5bf9n\u53d6\u6a21\uff0c\u800c\u662f\u5bf9p\u53d6\u6a21 s = m * (k * R).x mod n, \u5176\u4e2dm\u4e3a\u660e\u6587 \u89e3\u5bc6(\u5229\u7528\u79c1\u94a5d) \u901a\u8fc7r(x)\u63a8\u51fa\u70b9r m = s / (r * d).x = (m * (k * R).x) / (k * G * d).x = (m * (kd * G).x) / (kd * G).x = m ECC\u7b97\u6cd5\u7b7e\u540d ecdsa(elliptic curve digital signature) \u7b7e\u540d(r,s) r = k * G s = (m + r * d)/k \u9a8c\u8bc1: (m / s) * G + (r / s) * G == r ecnr \u7b7e\u540d(r,s) r = (k * G).x + m s = k - (r * d).x \u9a8c\u8bc1: r - (s * G + r * R) == m","title":"ECC"},{"location":"course/crypto/ECC/#ecc","text":"\u692d\u5706\u66f2\u7ebf\u53ef\u4ee5\u5b9a\u4e49\u4e3a\u6240\u6709\u6ee1\u8db3\u65b9\u7a0b \\(E: y^2=x^3+ax+b\\) \u7684\u70b9(x,y)\u6240\u6784\u6210\u7684\u96c6\u5408\u3002","title":"ECC"},{"location":"course/crypto/ECC/#ecc_1","text":"a\uff0cb\uff1a\u692d\u5706\u66f2\u7ebf\u7cfb\u6570 p\uff1a\u6a21\u6570 \u57fa\u70b9G\uff08\u66f2\u7ebf\u4e0a\u7684\u4e00\u4e2a\u70b9\uff09 G\u7684\u9636n (n * G = O) \u4f59\u56e0\u5b50 = \u66f2\u7ebf\u7684\u9636/G\u7684\u9636","title":"ECC\u7b97\u6cd5\u7684\u516d\u8981\u7d20"},{"location":"course/crypto/ECC/#ecc_2","text":"\u692d\u5706\u66f2\u7ebf\u5728\u7d20\u57df \\(Z_p\\) \u4e0a\u7684\u8fd0\u7b97\u89c4\u5219 P+O=O+P=P; \u82e5P( \\(x_1\\) , \\(y_1\\) ), Q( \\(x_2\\) , \\(y_2\\) )\u6ee1\u8db3 \\(x_1=x_2,y_1+y_2=0\\) \uff0c\u5219P+Q=O; \u82e5P( \\(x_1\\) , \\(y_1\\) ), Q( \\(x_2\\) , \\(y_2\\) )\u4e0d\u6ee1\u8db3\u4e0a\u9762\u7684\u6027\u8d28\uff0c\u5219 \\(x_3 = \\lambda^2-x_1-x_2\\) \\(y_3=\\lambda(x_1-x_3)-y_1\\) \u82e5 \\(P\\ne Q\\) \uff0c \\(\\lambda=(y_2-y_1)/(x_2-x_1)\\) ; \u82e5 \\(P=Q\\) \uff0c \\(\\lambda=(3x_1^2+a)/(2y_1)\\) . \u692d\u5706\u66f2\u7ebf\u7684\u4e58\u6cd5\u6027\u8d28 \u82e5 \\(Q=k*P\\) (k<n)\uff0c\u5176\u4e2dk\u662f\u5e38\u6570\uff0cQ\u3001P\u662f\u66f2\u7ebf\u4e0a\u7684\u70b9\uff0c\u5219\u901a\u8fc7k,P\u8ba1\u7b97Q\u7b80\u5355\uff0c\u4f46\u662f\u901a\u8fc7Q\u3001P\u63a8\u7b97k\u8f83\u4e3a\u590d\u6742\u3002","title":"ECC\u7b97\u6cd5\u7684\u6570\u5b66\u57fa\u7840"},{"location":"course/crypto/ECC/#opensslecc","text":"\u521b\u5efagroup EC_GROUP *group=EC_GROUP_new(EC_GFp_simple_method()); a,b,p\u521d\u59cb\u5316group EC_GROUP_set_curve_GFp(group,p,a,b,ctx); \u521b\u5efa\u57fa\u70b9G\u5e76\u901a\u8fc7tx,ty\u521d\u59cb\u5316 G=EC_POINT_new(group); EC_POINT_set_affine_coordinates_GFp(group,G,tx,ty,ctx); G,n,\u4f59\u56e0\u5b50(1)\u8bbe\u7f6egroup EC_GROUP_set_generator(group, G, n, BN_value_one()); \u83b7\u5f97\u70b9T\u7684\u5750\u6807(tx,ty) EC_POINT_get_affine_coordinates_GFp(group,T,tx,ty,ctx) ECC\u4e0a\u7684\u52a0\u6cd5 T = T + G EC_POINT_add(group,T,T,G,ctx) ECC\u4e0a\u7684\u4e58\u6cd5 T = m * G EC_POINT_mul(group,T,m,NULL,NULL,ctx) T = m * G + n * P EC_POINT_mul(group,T,m,P,n,ctx)","title":"OpenSSL\u4e2d\u7684ECC\u5e93"},{"location":"course/crypto/ECC/#ecc_3","text":"\u516c\u94a5(\u516c\u94a5\u70b9) R = d * G \u79c1\u94a5 d (d < n) \u52a0\u5bc6(r(x),s) r(x) = (k * G).x mod p, \u5176\u4e2dk < n, r(x)\u7ed3\u679c\u4e0d\u80fd\u5bf9n\u53d6\u6a21\uff0c\u800c\u662f\u5bf9p\u53d6\u6a21 s = m * (k * R).x mod n, \u5176\u4e2dm\u4e3a\u660e\u6587 \u89e3\u5bc6(\u5229\u7528\u79c1\u94a5d) \u901a\u8fc7r(x)\u63a8\u51fa\u70b9r m = s / (r * d).x = (m * (k * R).x) / (k * G * d).x = (m * (kd * G).x) / (kd * G).x = m","title":"ECC\u52a0\u5bc6\u89e3\u5bc6"},{"location":"course/crypto/ECC/#ecc_4","text":"ecdsa(elliptic curve digital signature) \u7b7e\u540d(r,s) r = k * G s = (m + r * d)/k \u9a8c\u8bc1: (m / s) * G + (r / s) * G == r ecnr \u7b7e\u540d(r,s) r = (k * G).x + m s = k - (r * d).x \u9a8c\u8bc1: r - (s * G + r * R) == m","title":"ECC\u7b97\u6cd5\u7b7e\u540d"},{"location":"course/crypto/Math/","text":"\u6570\u5b66\u57fa\u7840 \u6700\u5927\u516c\u7ea6\u6570 \u8bbea\u3001b\u4e3a\u6574\u6570\uff0c\u4e14a\u3001b\u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a\u4e0d\u7b49\u4e8e0\uff0c\u4ee4d=gcd(a,b)\uff0c\u5219\u4e00\u5b9a\u5b58\u5728\u6574\u6570x\u3001y\u4f7f\u5f97\u4e0b\u5f0f\u6210\u7acb\uff1a \\(a\\times x + b\\times y = d\\) \u7d20\u6570\u4e0e\u4e92\u7d20 \u82e5gcd(a, b) = 1\uff0c\u5219\u79f0a\u3001b\u4e92\u7d20 \u6a21\u8fd0\u7b97\u4e0e\u540c\u4f59 \\(a \\equiv b \\mod n\\) \u53ef\u4ee5\u7406\u89e3\u4e3a a%n == b%n \u9006\u5143(inverse) \u52a0\u6cd5\u9006\u5143 \\(a+b=0 \\mod n\\) \\(\u660e\u6587+\u5bc6\u94a5 \\equiv \u5bc6\u6587 \\mod n\\) \uff0c \\(\u5bc6\u6587+\u5bc6\u94a5\u9006\u5143\\equiv \u660e\u6587 \\mod n\\) \u4e58\u6cd5\u9006\u5143 \\(a*b=1 \\mod n\\) \\(\u660e\u6587\\times\u5bc6\u94a5 \\equiv \u5bc6\u6587 \\mod n\\) \uff0c \\(\u5bc6\u6587\\times\u5bc6\u94a5\u9006\u5143\\equiv \u660e\u6587 \\mod n\\) \u5145\u8981\u6761\u4ef6 \\(\\gcd(a,n)=1\\) \u6c42\u6cd5\uff1a\u6269\u5c55\u6b27\u51e0\u91cc\u5f97 \u62d3\u5c55\u6b27\u51e0\u91cc\u5f97 \u62d3\u5c55\u6b27\u51e0\u91cc\u5f97\u53ef\u4ee5\u7528\u6765\u6c42\u4e58\u6cd5\u9006\u5143\uff0c\u4e0b\u9762\u662f\u4e00\u4e2a\u4f8b\u5b50\uff1a \u4f8b\u5982\u6c42 13*x \u2261 1 (mod 35) 35 = 2*13+ 9 13 = 1*9 + 4 9 = 2*4 + 1 1 = 9-(2*4) = (35 - 2*13) - (2*(13-1*9)) = 35 - 2*13 - 2*(13-1*(35-2*13)) = 35 - 2*13 - 2*13 + 2*(35-2*13) = 3*35 - 8*13 \u6240\u4ee5 (-8)*13 \u2261 1 (mod 35) \u53c8\u56e0\u4e3a -8 \u2261 27 (mod 35) \u6240\u4ee5 13*27 \u2261 1 (mod 35) 13\u5728\u6a2135\u7684\u60c5\u51b5\u4e0b\uff0c\u4e58\u6cd5\u9006\u5143\u4e3a27 \u88f4\u8700\u5b9a\u7406 gcd(x,y) = ax + by \u6839\u636e\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5 x = x0 ; y = y0 ; while ( y ){ int q = y / x ; int r = y % x ; y = x ; x = r ; } \u8bc1\u660e\uff0c\u5728\u6bcf\u4e00\u8f6e\u5faa\u73af\u4e2d\uff0c\u90fd\u6709 \\[ \\begin{aligned} &x_i = a_{i1}x_0+b_{i1}y_0\\\\ &y_i = a_{i2}x_0+b_{i2}y_0\\\\ \\end{aligned} \\] \u4f7f\u7528\u6570\u5b66\u5f52\u7eb3\u6cd5 i = 1\u65f6\uff0c \\(x = x_0\\) \uff0c \\(y = y_0\\) \uff0c\u5373 \\(a_{i1}=1,b_{i1}=0,a_{i2}=0,b_{i2}=1\\) i >= 1\u65f6\uff0c\u82e5i\u6ee1\u8db3\u4e0a\u8ff0\u6761\u4ef6\uff0c\u5219 \\(y_{i+1} = x_i = a_{i1}x_0 + b_{i1}y_0\\) \uff0c \\(a_{(i+1)2}=a_{i1},b_{(i+1)2}=b_{i1}\\) \\(x_{i+1}=y_{i}\\%x_{i}=(a_{i2}x_0+b_{i2}y)-k*(a_{i1}x_0+b_{i1}y_0)=(a_{i2}-ka_{i1})x_0+(b_{i2}-kb_{i1})y_0\\) \uff0c \\(a_{(i+1)1}=a_{i2}-ka_{i1}\\) \uff0c \\(b_{(i+1)1}=b_{i2}-kb_{i1}\\) Q.E.D \u4e2d\u56fd\u5269\u4f59\u5b9a\u7406 \u8bbe \\(m_1,m_2,m_3,...,m_r\\) \u4e24\u4e24\u4e92\u7d20\uff0c\u5219\u4ee5\u4e0b\u540c\u4f59\u65b9\u7a0b\u7ec4 \\(x\\equiv a_i\\mod m_i,\\ i=1,2,3,...,r\\) \u6a21 \\(M=m_1m_2m_3...m_r\\) \u7684\u552f\u4e00\u89e3\u4e3a \\(x=\\sum\\limits^{r}_{i=1}a_i*M_i*(M_i^{-1}{\\rm \\ mod\\ }m_i)\\mod M\\) \uff0c\u5176\u4e2d \\(M_i=M/m_i\\) \uff081\uff09\u5148\u8bc1\u660ex\u4e3a\u540c\u4f59\u65b9\u7a0b\u7684\u89e3 \u56e0\u4e3a \\(M_i\\equiv 0\\mod m_j(i\\ne j)\\) \uff0c\u6240\u4ee5 \\(x\\equiv a_j\\mod m_j\\) \uff082\uff09\u518d\u8bc1\u660ex\u662f\u552f\u4e00\u89e3 \u5047\u8bbe\u4e0a\u8ff0\u540c\u4f59\u65b9\u7a0b\u7ec4\u6709\u4e24\u4e2a\u89e3 \\(0\\le x_1,x_2< M\\) \uff0c \u5219 \\[ \\begin{aligned} x_1&\\equiv a_i\\mod m_i\\\\ x_2&\\equiv a_i\\mod m_i\\\\ \\to x_1-x_2&\\equiv 0 \\mod m_i \\end{aligned} \\] \u53c8\u56e0\u4e3a \\(m_1,m_2,m_3,...,m_r\\) \u4e24\u4e24\u4e92\u7d20\uff0c\u6240\u4ee5 \\(x_1 = k*M+x_2\\) \uff0c\u4e0e\u5047\u8bbe\u77db\u76fe Q.E.D Euler\u51c6\u5219 \u5bf9\u4e8e\u6574\u6570x\u548c\u5947\u7d20\u6570p\uff0cx\u662f\u6a21p\u7684\u5e73\u65b9\u5269\u4f59\uff08 \\(y^2\\equiv x \\mod p\\) \uff09 \u7684\u5145\u8981\u6761\u4ef6\u662f \\(x^{(p-1)/2}\\equiv 1 \\mod p\\) \u8bc1\u660e\uff1a \uff081\uff09\u5fc5\u8981\u6027 \u56e0\u4e3agcd(x,p)=1, \\(y^2\\equiv x\\mod p\\) \uff0c \u6240\u4ee5gcd(y,p)=1 \u6839\u636e\u8d39\u9a6c\u5c0f\u5b9a\u7406\uff0c \\(y^{p-1}\\equiv 1 \\mod p\\) \u6240\u4ee5 \\(x^{(p-1)/2}\\equiv 1\\mod p\\) \uff082\uff09\u5145\u5206\u6027 \u4e0d\u59a8\u8bbe \\(x\\in Z_p\\) \uff0c\u56e0\u4e3a \\(Z_p^{*}\\) ={1,2,3,...,p-1}\u5728\u6a21p\u4e58\u6cd5\u4e0b\u662f\u5faa\u73af\u7fa4\uff0c\u6240\u4ee5\u4e00\u5b9a\u5b58\u5728 \\(Z_p^*\\) \u7684\u4e00\u4e2a\u751f\u6210\u5143b\uff0c\u4f7f\u5f97 \\(x\\equiv b^i\\mod p\\) \u56e0\u4e3a \\(x^{(p-1)/2}\\equiv 1\\mod p\\) \u6240\u4ee5 \\(b^{i(p-1)/2}=(b^{p-1})^{i/2}\\equiv 1\\mod p\\) \u53c8\u56e0\u4e3a \\(b^{p-1}\\equiv 1\\mod p\\) \uff0c\u6240\u4ee5i\u4e3a\u5076\u6570 \u6240\u4ee5x\u6a21p\u7684\u5e73\u65b9\u6839\u5fc5\u6709\u6574\u6570\u89e3\uff0c\u5176\u503c\u4e3a \\(\\pm b^{i/2}\\) Q.E.D","title":"\u6570\u5b66\u57fa\u7840"},{"location":"course/crypto/Math/#_1","text":"","title":"\u6570\u5b66\u57fa\u7840"},{"location":"course/crypto/Math/#_2","text":"\u8bbea\u3001b\u4e3a\u6574\u6570\uff0c\u4e14a\u3001b\u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a\u4e0d\u7b49\u4e8e0\uff0c\u4ee4d=gcd(a,b)\uff0c\u5219\u4e00\u5b9a\u5b58\u5728\u6574\u6570x\u3001y\u4f7f\u5f97\u4e0b\u5f0f\u6210\u7acb\uff1a \\(a\\times x + b\\times y = d\\)","title":"\u6700\u5927\u516c\u7ea6\u6570"},{"location":"course/crypto/Math/#_3","text":"\u82e5gcd(a, b) = 1\uff0c\u5219\u79f0a\u3001b\u4e92\u7d20","title":"\u7d20\u6570\u4e0e\u4e92\u7d20"},{"location":"course/crypto/Math/#_4","text":"\\(a \\equiv b \\mod n\\) \u53ef\u4ee5\u7406\u89e3\u4e3a a%n == b%n","title":"\u6a21\u8fd0\u7b97\u4e0e\u540c\u4f59"},{"location":"course/crypto/Math/#inverse","text":"\u52a0\u6cd5\u9006\u5143 \\(a+b=0 \\mod n\\) \\(\u660e\u6587+\u5bc6\u94a5 \\equiv \u5bc6\u6587 \\mod n\\) \uff0c \\(\u5bc6\u6587+\u5bc6\u94a5\u9006\u5143\\equiv \u660e\u6587 \\mod n\\) \u4e58\u6cd5\u9006\u5143 \\(a*b=1 \\mod n\\) \\(\u660e\u6587\\times\u5bc6\u94a5 \\equiv \u5bc6\u6587 \\mod n\\) \uff0c \\(\u5bc6\u6587\\times\u5bc6\u94a5\u9006\u5143\\equiv \u660e\u6587 \\mod n\\) \u5145\u8981\u6761\u4ef6 \\(\\gcd(a,n)=1\\) \u6c42\u6cd5\uff1a\u6269\u5c55\u6b27\u51e0\u91cc\u5f97","title":"\u9006\u5143(inverse)"},{"location":"course/crypto/Math/#_5","text":"\u62d3\u5c55\u6b27\u51e0\u91cc\u5f97\u53ef\u4ee5\u7528\u6765\u6c42\u4e58\u6cd5\u9006\u5143\uff0c\u4e0b\u9762\u662f\u4e00\u4e2a\u4f8b\u5b50\uff1a \u4f8b\u5982\u6c42 13*x \u2261 1 (mod 35) 35 = 2*13+ 9 13 = 1*9 + 4 9 = 2*4 + 1 1 = 9-(2*4) = (35 - 2*13) - (2*(13-1*9)) = 35 - 2*13 - 2*(13-1*(35-2*13)) = 35 - 2*13 - 2*13 + 2*(35-2*13) = 3*35 - 8*13 \u6240\u4ee5 (-8)*13 \u2261 1 (mod 35) \u53c8\u56e0\u4e3a -8 \u2261 27 (mod 35) \u6240\u4ee5 13*27 \u2261 1 (mod 35) 13\u5728\u6a2135\u7684\u60c5\u51b5\u4e0b\uff0c\u4e58\u6cd5\u9006\u5143\u4e3a27","title":"\u62d3\u5c55\u6b27\u51e0\u91cc\u5f97"},{"location":"course/crypto/Math/#gcdxy-ax-by","text":"\u6839\u636e\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5 x = x0 ; y = y0 ; while ( y ){ int q = y / x ; int r = y % x ; y = x ; x = r ; } \u8bc1\u660e\uff0c\u5728\u6bcf\u4e00\u8f6e\u5faa\u73af\u4e2d\uff0c\u90fd\u6709 \\[ \\begin{aligned} &x_i = a_{i1}x_0+b_{i1}y_0\\\\ &y_i = a_{i2}x_0+b_{i2}y_0\\\\ \\end{aligned} \\] \u4f7f\u7528\u6570\u5b66\u5f52\u7eb3\u6cd5 i = 1\u65f6\uff0c \\(x = x_0\\) \uff0c \\(y = y_0\\) \uff0c\u5373 \\(a_{i1}=1,b_{i1}=0,a_{i2}=0,b_{i2}=1\\) i >= 1\u65f6\uff0c\u82e5i\u6ee1\u8db3\u4e0a\u8ff0\u6761\u4ef6\uff0c\u5219 \\(y_{i+1} = x_i = a_{i1}x_0 + b_{i1}y_0\\) \uff0c \\(a_{(i+1)2}=a_{i1},b_{(i+1)2}=b_{i1}\\) \\(x_{i+1}=y_{i}\\%x_{i}=(a_{i2}x_0+b_{i2}y)-k*(a_{i1}x_0+b_{i1}y_0)=(a_{i2}-ka_{i1})x_0+(b_{i2}-kb_{i1})y_0\\) \uff0c \\(a_{(i+1)1}=a_{i2}-ka_{i1}\\) \uff0c \\(b_{(i+1)1}=b_{i2}-kb_{i1}\\) Q.E.D","title":"\u88f4\u8700\u5b9a\u7406 gcd(x,y) = ax + by"},{"location":"course/crypto/Math/#_6","text":"\u8bbe \\(m_1,m_2,m_3,...,m_r\\) \u4e24\u4e24\u4e92\u7d20\uff0c\u5219\u4ee5\u4e0b\u540c\u4f59\u65b9\u7a0b\u7ec4 \\(x\\equiv a_i\\mod m_i,\\ i=1,2,3,...,r\\) \u6a21 \\(M=m_1m_2m_3...m_r\\) \u7684\u552f\u4e00\u89e3\u4e3a \\(x=\\sum\\limits^{r}_{i=1}a_i*M_i*(M_i^{-1}{\\rm \\ mod\\ }m_i)\\mod M\\) \uff0c\u5176\u4e2d \\(M_i=M/m_i\\) \uff081\uff09\u5148\u8bc1\u660ex\u4e3a\u540c\u4f59\u65b9\u7a0b\u7684\u89e3 \u56e0\u4e3a \\(M_i\\equiv 0\\mod m_j(i\\ne j)\\) \uff0c\u6240\u4ee5 \\(x\\equiv a_j\\mod m_j\\) \uff082\uff09\u518d\u8bc1\u660ex\u662f\u552f\u4e00\u89e3 \u5047\u8bbe\u4e0a\u8ff0\u540c\u4f59\u65b9\u7a0b\u7ec4\u6709\u4e24\u4e2a\u89e3 \\(0\\le x_1,x_2< M\\) \uff0c \u5219 \\[ \\begin{aligned} x_1&\\equiv a_i\\mod m_i\\\\ x_2&\\equiv a_i\\mod m_i\\\\ \\to x_1-x_2&\\equiv 0 \\mod m_i \\end{aligned} \\] \u53c8\u56e0\u4e3a \\(m_1,m_2,m_3,...,m_r\\) \u4e24\u4e24\u4e92\u7d20\uff0c\u6240\u4ee5 \\(x_1 = k*M+x_2\\) \uff0c\u4e0e\u5047\u8bbe\u77db\u76fe Q.E.D","title":"\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406"},{"location":"course/crypto/Math/#euler","text":"\u5bf9\u4e8e\u6574\u6570x\u548c\u5947\u7d20\u6570p\uff0cx\u662f\u6a21p\u7684\u5e73\u65b9\u5269\u4f59\uff08 \\(y^2\\equiv x \\mod p\\) \uff09 \u7684\u5145\u8981\u6761\u4ef6\u662f \\(x^{(p-1)/2}\\equiv 1 \\mod p\\) \u8bc1\u660e\uff1a \uff081\uff09\u5fc5\u8981\u6027 \u56e0\u4e3agcd(x,p)=1, \\(y^2\\equiv x\\mod p\\) \uff0c \u6240\u4ee5gcd(y,p)=1 \u6839\u636e\u8d39\u9a6c\u5c0f\u5b9a\u7406\uff0c \\(y^{p-1}\\equiv 1 \\mod p\\) \u6240\u4ee5 \\(x^{(p-1)/2}\\equiv 1\\mod p\\) \uff082\uff09\u5145\u5206\u6027 \u4e0d\u59a8\u8bbe \\(x\\in Z_p\\) \uff0c\u56e0\u4e3a \\(Z_p^{*}\\) ={1,2,3,...,p-1}\u5728\u6a21p\u4e58\u6cd5\u4e0b\u662f\u5faa\u73af\u7fa4\uff0c\u6240\u4ee5\u4e00\u5b9a\u5b58\u5728 \\(Z_p^*\\) \u7684\u4e00\u4e2a\u751f\u6210\u5143b\uff0c\u4f7f\u5f97 \\(x\\equiv b^i\\mod p\\) \u56e0\u4e3a \\(x^{(p-1)/2}\\equiv 1\\mod p\\) \u6240\u4ee5 \\(b^{i(p-1)/2}=(b^{p-1})^{i/2}\\equiv 1\\mod p\\) \u53c8\u56e0\u4e3a \\(b^{p-1}\\equiv 1\\mod p\\) \uff0c\u6240\u4ee5i\u4e3a\u5076\u6570 \u6240\u4ee5x\u6a21p\u7684\u5e73\u65b9\u6839\u5fc5\u6709\u6574\u6570\u89e3\uff0c\u5176\u503c\u4e3a \\(\\pm b^{i/2}\\) Q.E.D","title":"Euler\u51c6\u5219"},{"location":"course/crypto/RSA/","text":"RSA Info 2022/6/14 \u4fee\u6b63\u4e86\u5bf9RSA\u6b63\u786e\u6027\u7684\u8bc1\u660e e: \u52a0\u5bc6\u516c\u94a5 d: \u89e3\u5bc6\u5bc6\u94a5 N/n: \u5927\u6570 p,q: \u4e24\u4e2a\u7d20\u6570 m: \u660e\u6587 c: \u5bc6\u6587 \u6570\u5b66\u524d\u63d0 \u6b27\u62c9\u51fd\u6570 \\(\\phi(n)\\) : \u5c0f\u4e8e \\(n\\) \uff0c\u4e14\u4e0e \\(n\\) \u4e92\u7d20\u7684\u6570\u7684\u4e2a\u6570 \u6b27\u62c9\u5b9a\u7406\uff1a\u82e5 \\(gcd(x,n)=1\\) \uff0c\u5219 \\(X^{\\phi(n)}\\equiv 1\\mod n\\) \u8d39\u9a6c\u5c0f\u5b9a\u7406\uff1a\u82e5p\u4e3a\u7d20\u6570\uff0c\u5219 \\(X^{p-1}\\equiv 1 \\mod p\\) \u6b27\u62c9\u51fd\u6570\u7684\u4e58\u6cd5\u6027\u8d28\uff1a\u82e5 \\(\\gcd(x,y)=1\\) \uff0c \\(\\phi(xy)=\\phi(x)\\phi(y)\\) \u5bc6\u94a5\u751f\u6210\u6d41\u7a0b \u9009\u53d6\u4e24\u4e2a\u5927\u7d20\u6570 p \u548c q \u8ba1\u7b97\u51fa n = p * q \u968f\u673a\u9009\u53d6\u52a0\u5bc6\u5bc6\u94a5e(\u516c\u94a5)\uff0c\u4f7f\u5f97 gcd(e,(p-1)(q-1))=1 \u8ba1\u7b97\u51fae\u5728(p-1)(q-1)\u4e0b\u7684\u4e58\u6cd5\u9006\u5143d\uff0c\u4f5c\u4e3a\u89e3\u5bc6\u5bc6\u94a5(\u79c1\u94a5) \u516c\u5f00(e,n)\u4f5c\u4e3a\u516c\u94a5 \u52a0\u89e3\u5bc6 \u52a0\u5bc6 \\(c=m^e\\ {\\rm mod}\\ N\\) \u89e3\u5bc6 \\(m=c^d\\ {\\rm mod}\\ N\\) RSA\u7b7e\u540d \u52a0\u5bc6\u90ae\u4ef6\u7684\u6b65\u9aa4\uff08\u4fe1\u4ef6L\u7531A\u53d1\u7ed9B\uff09 \u4fe1\u4ef6L\u7528B\u7684\u516c\u94a5\u52a0\u5bc6 \u628a\u5185\u5bb9\u53d1\u7ed9B B\u7528\u79c1\u94a5\u89e3\u5bc6\u4fe1\u4ef6 \u9a8c\u8bc1\u90ae\u4ef6\u7684\u6b65\u9aa4\uff08\u4fe1\u4ef6L\u7531A\u53d1\u7ed9B\uff09 L\u505aMD5\u6458\u8981\uff0cM=MD5(L) \u7528A\u7684\u79c1\u94a5\u8fdb\u884c\u52a0\u5bc6 M'=RSA(M,A\u7684\u79c1\u94a5) \u628aL\u3001M'\u548cA\u7684\u516c\u94a5\u53d1\u9001\u7ed9B B\u7528A\u7684\u79c1\u94a5\u89e3\u5bc6 m=RSA(M',A\u7684\u516c\u94a5) \u5224\u65adMD5(L)\u662f\u5426\u7b49\u4e8em RSA\u6b63\u786e\u6027\u8bc1\u660e \u5df2\u77e5 \\(c=m^e{\\rm\\ mod}\\ N\\) , \\(ed\\equiv 1 \\mod (p-1)(q-1)\\) , p\u3001q\u4e92\u7d20\uff0c \\(N=p*q\\) \u8bc1\u660e \\(m = c^d{\\rm\\ mod}\\ N\\) Step1 \u516c\u5f0f\u5316\u7b80 \\[ \\begin{aligned} &c^d {\\rm\\ mod}\\ N \\\\ =& (m^e)^d {\\rm\\ mod}\\ N\\\\ =& m^{ed} {\\rm\\ mod}\\ N\\\\ =& m^{k(p-1)(q-1)+1} {\\rm\\ mod}\\ N\\\\ =& m*(m^{(p-1)(q-1)})^k {\\rm\\ mod}\\ N\\\\ \\end{aligned} \\] Step2 \u5206\u7c7b\u8ba8\u8bba\u8bc1\u660e \uff081\uff09\u82e5 \\(\\gcd(m,N)=1\\) \uff0c\u5219 \\(m^{\\phi(N)}\\equiv 1\\mod N\\) \\[ \\begin{aligned} &\\because gcb(p,q)=1,\\phi(p)=p-1,\\phi(q)=q-1\\\\ &\\therefore \\phi(pq)=\\phi(p)\\phi(q)=(p-1)(q-1)\\\\ &\\therefore m^{(p-1)(q-1)}=m^{\\phi(pq)}=m^{\\phi(N)} \\equiv 1\\mod N\\\\ &\\therefore m*(m^{(p-1)(q-1)})^k \\equiv m\\mod\\ N \\end{aligned} \\] \uff082\uff09\u82e5 \\(\\gcd(m,N)\\ne 1\\) \\[ \\begin{aligned} &\\because m<N, \\gcd(m,N)\\ne1\\\\ &\u5047\u8bbe gcd(m,M)=p\\ (m = cp), \u5219 m \\equiv 1 \\mod q\\\\ & \\therefore m^{k(p-1)(q-1)} \\equiv (m^{q-1})^{k(p-1)} \\equiv 1\\mod q\\\\ &\u4ee4 m^{k(p-1)(q-1)}=sq+1\\\\ & \\therefore m*m^{k(p-1)(q-1)} = m * (s*q + 1) = c*s*p*q + m =c*s*N+m\\equiv m \\mod N\\\\ \\end{aligned} \\] QED","title":"RSA"},{"location":"course/crypto/RSA/#rsa","text":"Info 2022/6/14 \u4fee\u6b63\u4e86\u5bf9RSA\u6b63\u786e\u6027\u7684\u8bc1\u660e e: \u52a0\u5bc6\u516c\u94a5 d: \u89e3\u5bc6\u5bc6\u94a5 N/n: \u5927\u6570 p,q: \u4e24\u4e2a\u7d20\u6570 m: \u660e\u6587 c: \u5bc6\u6587","title":"RSA"},{"location":"course/crypto/RSA/#_1","text":"\u6b27\u62c9\u51fd\u6570 \\(\\phi(n)\\) : \u5c0f\u4e8e \\(n\\) \uff0c\u4e14\u4e0e \\(n\\) \u4e92\u7d20\u7684\u6570\u7684\u4e2a\u6570 \u6b27\u62c9\u5b9a\u7406\uff1a\u82e5 \\(gcd(x,n)=1\\) \uff0c\u5219 \\(X^{\\phi(n)}\\equiv 1\\mod n\\) \u8d39\u9a6c\u5c0f\u5b9a\u7406\uff1a\u82e5p\u4e3a\u7d20\u6570\uff0c\u5219 \\(X^{p-1}\\equiv 1 \\mod p\\) \u6b27\u62c9\u51fd\u6570\u7684\u4e58\u6cd5\u6027\u8d28\uff1a\u82e5 \\(\\gcd(x,y)=1\\) \uff0c \\(\\phi(xy)=\\phi(x)\\phi(y)\\)","title":"\u6570\u5b66\u524d\u63d0"},{"location":"course/crypto/RSA/#_2","text":"\u9009\u53d6\u4e24\u4e2a\u5927\u7d20\u6570 p \u548c q \u8ba1\u7b97\u51fa n = p * q \u968f\u673a\u9009\u53d6\u52a0\u5bc6\u5bc6\u94a5e(\u516c\u94a5)\uff0c\u4f7f\u5f97 gcd(e,(p-1)(q-1))=1 \u8ba1\u7b97\u51fae\u5728(p-1)(q-1)\u4e0b\u7684\u4e58\u6cd5\u9006\u5143d\uff0c\u4f5c\u4e3a\u89e3\u5bc6\u5bc6\u94a5(\u79c1\u94a5) \u516c\u5f00(e,n)\u4f5c\u4e3a\u516c\u94a5","title":"\u5bc6\u94a5\u751f\u6210\u6d41\u7a0b"},{"location":"course/crypto/RSA/#_3","text":"\u52a0\u5bc6 \\(c=m^e\\ {\\rm mod}\\ N\\) \u89e3\u5bc6 \\(m=c^d\\ {\\rm mod}\\ N\\)","title":"\u52a0\u89e3\u5bc6"},{"location":"course/crypto/RSA/#rsa_1","text":"\u52a0\u5bc6\u90ae\u4ef6\u7684\u6b65\u9aa4\uff08\u4fe1\u4ef6L\u7531A\u53d1\u7ed9B\uff09 \u4fe1\u4ef6L\u7528B\u7684\u516c\u94a5\u52a0\u5bc6 \u628a\u5185\u5bb9\u53d1\u7ed9B B\u7528\u79c1\u94a5\u89e3\u5bc6\u4fe1\u4ef6 \u9a8c\u8bc1\u90ae\u4ef6\u7684\u6b65\u9aa4\uff08\u4fe1\u4ef6L\u7531A\u53d1\u7ed9B\uff09 L\u505aMD5\u6458\u8981\uff0cM=MD5(L) \u7528A\u7684\u79c1\u94a5\u8fdb\u884c\u52a0\u5bc6 M'=RSA(M,A\u7684\u79c1\u94a5) \u628aL\u3001M'\u548cA\u7684\u516c\u94a5\u53d1\u9001\u7ed9B B\u7528A\u7684\u79c1\u94a5\u89e3\u5bc6 m=RSA(M',A\u7684\u516c\u94a5) \u5224\u65adMD5(L)\u662f\u5426\u7b49\u4e8em","title":"RSA\u7b7e\u540d"},{"location":"course/crypto/RSA/#rsa_2","text":"\u5df2\u77e5 \\(c=m^e{\\rm\\ mod}\\ N\\) , \\(ed\\equiv 1 \\mod (p-1)(q-1)\\) , p\u3001q\u4e92\u7d20\uff0c \\(N=p*q\\) \u8bc1\u660e \\(m = c^d{\\rm\\ mod}\\ N\\)","title":"RSA\u6b63\u786e\u6027\u8bc1\u660e"},{"location":"course/crypto/RSA/#step1","text":"\\[ \\begin{aligned} &c^d {\\rm\\ mod}\\ N \\\\ =& (m^e)^d {\\rm\\ mod}\\ N\\\\ =& m^{ed} {\\rm\\ mod}\\ N\\\\ =& m^{k(p-1)(q-1)+1} {\\rm\\ mod}\\ N\\\\ =& m*(m^{(p-1)(q-1)})^k {\\rm\\ mod}\\ N\\\\ \\end{aligned} \\]","title":"Step1 \u516c\u5f0f\u5316\u7b80"},{"location":"course/crypto/RSA/#step2","text":"\uff081\uff09\u82e5 \\(\\gcd(m,N)=1\\) \uff0c\u5219 \\(m^{\\phi(N)}\\equiv 1\\mod N\\) \\[ \\begin{aligned} &\\because gcb(p,q)=1,\\phi(p)=p-1,\\phi(q)=q-1\\\\ &\\therefore \\phi(pq)=\\phi(p)\\phi(q)=(p-1)(q-1)\\\\ &\\therefore m^{(p-1)(q-1)}=m^{\\phi(pq)}=m^{\\phi(N)} \\equiv 1\\mod N\\\\ &\\therefore m*(m^{(p-1)(q-1)})^k \\equiv m\\mod\\ N \\end{aligned} \\] \uff082\uff09\u82e5 \\(\\gcd(m,N)\\ne 1\\) \\[ \\begin{aligned} &\\because m<N, \\gcd(m,N)\\ne1\\\\ &\u5047\u8bbe gcd(m,M)=p\\ (m = cp), \u5219 m \\equiv 1 \\mod q\\\\ & \\therefore m^{k(p-1)(q-1)} \\equiv (m^{q-1})^{k(p-1)} \\equiv 1\\mod q\\\\ &\u4ee4 m^{k(p-1)(q-1)}=sq+1\\\\ & \\therefore m*m^{k(p-1)(q-1)} = m * (s*q + 1) = c*s*p*q + m =c*s*N+m\\equiv m \\mod N\\\\ \\end{aligned} \\] QED","title":"Step2 \u5206\u7c7b\u8ba8\u8bba\u8bc1\u660e"},{"location":"course/crypto/SHA1/","text":"SHA-1 SHA-1\u662f\u5c06\u660e\u6587\u5904\u7406\u621020byte\u7684\u54c8\u5e0c\u6458\u8981(\u6bd4MD5\u591a\u4e864byte) SHA-1\u4f7f\u7528\u5206\u5757\u8ba1\u7b97\uff0c\u6bcf\u5757\u7684\u957f\u5ea6\u4e3a64byte\uff0c\u586b\u5145\u65b9\u5f0f\u4e5f\u548cMD5\u76f8\u540c\u3002","title":"SHA-1"},{"location":"course/crypto/SHA1/#sha-1","text":"SHA-1\u662f\u5c06\u660e\u6587\u5904\u7406\u621020byte\u7684\u54c8\u5e0c\u6458\u8981(\u6bd4MD5\u591a\u4e864byte) SHA-1\u4f7f\u7528\u5206\u5757\u8ba1\u7b97\uff0c\u6bcf\u5757\u7684\u957f\u5ea6\u4e3a64byte\uff0c\u586b\u5145\u65b9\u5f0f\u4e5f\u548cMD5\u76f8\u540c\u3002","title":"SHA-1"},{"location":"course/crypto/final/","text":"Crypto \u8003\u8bd5\u91cd\u70b9 \u9898\u578b \u5355\u9009\u9898(20',10 \u9053) \u7b80\u7b54\u9898(20',4-5\u9053) \u7b80\u5355\u63cf\u8ff0\u67d0\u4e2a\u7b97\u6cd5\u3001\u7b97\u6cd5\u7247\u6bb5\u7684\u539f\u7406 \u7528\u7a0b\u5e8f\u5b9e\u73b0\u67d0\u4e2a\u7b97\u6cd5\u7684\u67d0\u4e2a\u90e8\u5206 \u7b80\u5355\u7684\u8ba1\u7b97 \u8ba1\u7b97\u9898(40') \u590d\u6742\u7684\u8ba1\u7b97\u516c\u5f0f\u4f1a\u5728\u8bd5\u5377\u4e0a\u7ed9\u51fa \u8bc1\u660e\u9898(20',\u56db\u9009\u4e8c) RSA \u4e2d\u56fd\u5269\u4f59\u5b9a\u7406 gcd(x,y)=nx+uy Euler\u51c6\u5219 \u8003\u5bdf\u91cd\u70b9 enigma: \u4e86\u89e3\u52a0\u5bc6\u89e3\u5bc6\u8fc7\u7a0b(\u8003\u7b80\u7b54\u9898)\uff0c\u77e5\u9053\u5168\u8fc7\u7a0b md5, sha: \u590d\u6742\u7684\u79fb\u4f4d\u4e0d\u8003\uff0c\u8003\u5bdf\u70b9\u5728\u4e8e\u5757\u8ba1\u7b97\uff08\u53d6\u591a\u957f\u7684\u5b57\u8282\uff0c\u7ed3\u679c\u591a\u5c11\u5b57\u8282\uff09\uff0c\u4f4d\u8865\u5145 rc4, ecb, cbc, cfb rc4\u4e86\u89e3\u57fa\u672c\u539f\u7406 ecb\u52a0\u5bc6\u8fc7\u7a0b\u3001\u4f18\u70b9\u7f3a\u70b9 cbc\u52a0\u5bc6\u8fc7\u7a0b cfb\u52a0\u5bc6\u8fc7\u7a0b\uff08\u9700\u8981\u4e86\u89e3\u8be6\u7ec6\u8fc7\u7a0b\uff09 des \u52a0\u5bc6\u6d41\u7a0b sbox\u67e5\u8be2\u8fc7\u7a0b aes \u8003\u5bdf\u91cd\u70b9mixcolumn \u5982\u4f55\u505a\u4e24\u4e2a\u516b\u4f4d\u7684\u4e58\u6cd5\uff1f\uff08\u519c\u592b\u7b97\u6cd5\uff09 \u77e9\u9635\u7684\u8ba1\u7b97\uff1f \u4e09\u79cd\u52a0\u5bc6\u89c4\u6a21\uff1a\u5bc6\u94a5\u751f\u6210\u8fc7\u7a0b 128->10\u8f6e 192->12\u8f6e 254->14\u8f6e rsa rsa\u8bc1\u660e \u52a0\u5bc6\u8fc7\u7a0b rsa\u6e90\u4ee3\u7801(openssl\u7528\u6cd5) ecc \u70b9\u52a0\u6cd5\u3001\u70b9\u4e58\u6cd5\uff08\u5faa\u73af\u5b50\u7fa4\uff09 \u4e00\u79cd\u52a0\u89e3\u5bc6\u7b97\u6cd5\u3001\u4e24\u79cd\u7b7e\u540d\u7b97\u6cd5 ecc\u6e90\u4ee3\u7801 \u77e5\u9053openssl\u51fd\u6570\u7684\u7528\u9014\u3001\u53c2\u6570\u7684\u542b\u4e49 RSA \u4e58\u65b9\u3001\u6c42\u6a21 ECC \u70b9\u7684\u8bbe\u7f6e ...","title":"Crypto \u8003\u8bd5\u91cd\u70b9"},{"location":"course/crypto/final/#crypto","text":"","title":"Crypto \u8003\u8bd5\u91cd\u70b9"},{"location":"course/crypto/final/#_1","text":"\u5355\u9009\u9898(20',10 \u9053) \u7b80\u7b54\u9898(20',4-5\u9053) \u7b80\u5355\u63cf\u8ff0\u67d0\u4e2a\u7b97\u6cd5\u3001\u7b97\u6cd5\u7247\u6bb5\u7684\u539f\u7406 \u7528\u7a0b\u5e8f\u5b9e\u73b0\u67d0\u4e2a\u7b97\u6cd5\u7684\u67d0\u4e2a\u90e8\u5206 \u7b80\u5355\u7684\u8ba1\u7b97 \u8ba1\u7b97\u9898(40') \u590d\u6742\u7684\u8ba1\u7b97\u516c\u5f0f\u4f1a\u5728\u8bd5\u5377\u4e0a\u7ed9\u51fa \u8bc1\u660e\u9898(20',\u56db\u9009\u4e8c) RSA \u4e2d\u56fd\u5269\u4f59\u5b9a\u7406 gcd(x,y)=nx+uy Euler\u51c6\u5219","title":"\u9898\u578b"},{"location":"course/crypto/final/#_2","text":"enigma: \u4e86\u89e3\u52a0\u5bc6\u89e3\u5bc6\u8fc7\u7a0b(\u8003\u7b80\u7b54\u9898)\uff0c\u77e5\u9053\u5168\u8fc7\u7a0b md5, sha: \u590d\u6742\u7684\u79fb\u4f4d\u4e0d\u8003\uff0c\u8003\u5bdf\u70b9\u5728\u4e8e\u5757\u8ba1\u7b97\uff08\u53d6\u591a\u957f\u7684\u5b57\u8282\uff0c\u7ed3\u679c\u591a\u5c11\u5b57\u8282\uff09\uff0c\u4f4d\u8865\u5145 rc4, ecb, cbc, cfb rc4\u4e86\u89e3\u57fa\u672c\u539f\u7406 ecb\u52a0\u5bc6\u8fc7\u7a0b\u3001\u4f18\u70b9\u7f3a\u70b9 cbc\u52a0\u5bc6\u8fc7\u7a0b cfb\u52a0\u5bc6\u8fc7\u7a0b\uff08\u9700\u8981\u4e86\u89e3\u8be6\u7ec6\u8fc7\u7a0b\uff09 des \u52a0\u5bc6\u6d41\u7a0b sbox\u67e5\u8be2\u8fc7\u7a0b aes \u8003\u5bdf\u91cd\u70b9mixcolumn \u5982\u4f55\u505a\u4e24\u4e2a\u516b\u4f4d\u7684\u4e58\u6cd5\uff1f\uff08\u519c\u592b\u7b97\u6cd5\uff09 \u77e9\u9635\u7684\u8ba1\u7b97\uff1f \u4e09\u79cd\u52a0\u5bc6\u89c4\u6a21\uff1a\u5bc6\u94a5\u751f\u6210\u8fc7\u7a0b 128->10\u8f6e 192->12\u8f6e 254->14\u8f6e rsa rsa\u8bc1\u660e \u52a0\u5bc6\u8fc7\u7a0b rsa\u6e90\u4ee3\u7801(openssl\u7528\u6cd5) ecc \u70b9\u52a0\u6cd5\u3001\u70b9\u4e58\u6cd5\uff08\u5faa\u73af\u5b50\u7fa4\uff09 \u4e00\u79cd\u52a0\u89e3\u5bc6\u7b97\u6cd5\u3001\u4e24\u79cd\u7b7e\u540d\u7b97\u6cd5 ecc\u6e90\u4ee3\u7801 \u77e5\u9053openssl\u51fd\u6570\u7684\u7528\u9014\u3001\u53c2\u6570\u7684\u542b\u4e49 RSA \u4e58\u65b9\u3001\u6c42\u6a21 ECC \u70b9\u7684\u8bbe\u7f6e ...","title":"\u8003\u5bdf\u91cd\u70b9"},{"location":"course/crypto/md5/","text":"MD5 MD5\u662f\u5c06\u660e\u6587\u5904\u7406\u621016byte\u7684\u54c8\u5e0c\u6458\u8981 \u7528\u9014 md5\u5e38\u4e0e\u5176\u4ed6\u7b97\u6cd5\u7ed3\u5408\uff0c\u7528\u4e8e\u6570\u5b57\u7b7e\u540d\uff0c\u5982\u90ae\u4ef6\u53d1\u9001 \u52a0\u5bc6\u8fc7\u7a0b \\[ \\begin{aligned} \\rm m&={\\rm md5}(letter)\\\\ \\rm m'&={\\rm rsa}(m,\\rm private\\ key) \\end{aligned} \\] \u68c0\u9a8c\u8fc7\u7a0b \\[ \\begin{aligned} \\rm md5(letter) == \\rm rsa(m', public\\ key)\\\\ \\end{aligned} \\] \u5b9e\u73b0 \u7ed3\u6784\u4f53\u5b9a\u4e49 typedef struct _MD5_CTX { unsigned long state [ 4 ]; unsigned long count [ 2 ]; /* \u5df2\u5904\u7406\u7684\u62a5\u6587\u7684\u4e8c\u8fdb\u5236\u4f4d\u6570,\u6700\u5927\u503c=2^64-1 */ unsigned char data [ 4 ]; /* 64\u5b57\u8282message\u5757 */ } Init \u5bf9state\u8d4b\u521d\u59cb\u503c\uff0c\u6e05\u7a7acount Update \u6bcf64\u4e2a\u5b57\u8282\u4e3a\u4e00\u7ec4\uff0c\u8fdb\u884c\u5904\u7406\u66f4\u65b0 Final \u56e0\u4e3a\u4e0d\u662f\u6240\u6709\u7684\u660e\u6587\u90fd\u662f64\u5b57\u8282\u7684\u500d\u6570\uff0c\u6240\u4ee5\u9700\u8981\u5bf9\u7f3a\u5931\u7684\u5185\u5bb9\u8fdb\u884c\u8865\u5145\uff0c\u8865\u5145\u7684\u5185\u5bb9\u5305\u62ec \u586b\u5145\u7269 \u548c \u660e\u6587\u957f\u5ea6 \u586b\u5145\u7269 0x80, 0x00, 0x00, ..., 0x00 \u89c4\u5219 \u7834\u89e3 MD5\u7684\u7834\u89e3\u5173\u952e\u5728\u4e8e\u627e\u5230Collision Collision \\({\\rm md5}(x)={\\rm md5}(x') \\ \\ (x\\ne x')\\) rainbow table \u4e00\u79cd\u8f83\u5f31\u7684MD5\u7834\u89e3\u65b9\u6cd5\uff0c\u5173\u952e\u5728\u4e8e \u9884\u8ba1\u7b97 \u627eN\u7ec4\u6570\u636e \u5bf9N\u7ec4\u6570\u636e\u5206\u522b\u4f7f\u7528MD5\u5904\u7406K\u8f6e \u5bf9\u76ee\u6807\u6570X\u8fdb\u884cMD5\u5904\u7406\uff0c\u5e76\u5c06\u7ed3\u679c\u4e0eN\u4e2a(\u5904\u7406K\u8f6e\u540e\u7684)\u7ed3\u679c\u8fdb\u884c\u6bd4\u8f83 \u82e5X\u4e0e\u5176\u4e2d\u67d0\u4e2a\u6570\u76f8\u7b49\uff0c\u5219\u6839\u636eX\u88abMD5\u5904\u7406\u7684\u8f6e\u6570\u5373\u53ef\u5012\u63a8\u51faCollision \u5426\u5219\u7ee7\u7eed\u5bf9X\u8fdb\u884cMD5\u5904\u7406","title":"MD5"},{"location":"course/crypto/md5/#md5","text":"MD5\u662f\u5c06\u660e\u6587\u5904\u7406\u621016byte\u7684\u54c8\u5e0c\u6458\u8981","title":"MD5"},{"location":"course/crypto/md5/#_1","text":"md5\u5e38\u4e0e\u5176\u4ed6\u7b97\u6cd5\u7ed3\u5408\uff0c\u7528\u4e8e\u6570\u5b57\u7b7e\u540d\uff0c\u5982\u90ae\u4ef6\u53d1\u9001","title":"\u7528\u9014"},{"location":"course/crypto/md5/#_2","text":"\\[ \\begin{aligned} \\rm m&={\\rm md5}(letter)\\\\ \\rm m'&={\\rm rsa}(m,\\rm private\\ key) \\end{aligned} \\]","title":"\u52a0\u5bc6\u8fc7\u7a0b"},{"location":"course/crypto/md5/#_3","text":"\\[ \\begin{aligned} \\rm md5(letter) == \\rm rsa(m', public\\ key)\\\\ \\end{aligned} \\]","title":"\u68c0\u9a8c\u8fc7\u7a0b"},{"location":"course/crypto/md5/#_4","text":"","title":"\u5b9e\u73b0"},{"location":"course/crypto/md5/#_5","text":"typedef struct _MD5_CTX { unsigned long state [ 4 ]; unsigned long count [ 2 ]; /* \u5df2\u5904\u7406\u7684\u62a5\u6587\u7684\u4e8c\u8fdb\u5236\u4f4d\u6570,\u6700\u5927\u503c=2^64-1 */ unsigned char data [ 4 ]; /* 64\u5b57\u8282message\u5757 */ }","title":"\u7ed3\u6784\u4f53\u5b9a\u4e49"},{"location":"course/crypto/md5/#init","text":"\u5bf9state\u8d4b\u521d\u59cb\u503c\uff0c\u6e05\u7a7acount","title":"Init"},{"location":"course/crypto/md5/#update","text":"\u6bcf64\u4e2a\u5b57\u8282\u4e3a\u4e00\u7ec4\uff0c\u8fdb\u884c\u5904\u7406\u66f4\u65b0","title":"Update"},{"location":"course/crypto/md5/#final","text":"\u56e0\u4e3a\u4e0d\u662f\u6240\u6709\u7684\u660e\u6587\u90fd\u662f64\u5b57\u8282\u7684\u500d\u6570\uff0c\u6240\u4ee5\u9700\u8981\u5bf9\u7f3a\u5931\u7684\u5185\u5bb9\u8fdb\u884c\u8865\u5145\uff0c\u8865\u5145\u7684\u5185\u5bb9\u5305\u62ec \u586b\u5145\u7269 \u548c \u660e\u6587\u957f\u5ea6 \u586b\u5145\u7269 0x80, 0x00, 0x00, ..., 0x00 \u89c4\u5219","title":"Final"},{"location":"course/crypto/md5/#_6","text":"MD5\u7684\u7834\u89e3\u5173\u952e\u5728\u4e8e\u627e\u5230Collision","title":"\u7834\u89e3"},{"location":"course/crypto/md5/#collision","text":"\\({\\rm md5}(x)={\\rm md5}(x') \\ \\ (x\\ne x')\\)","title":"Collision"},{"location":"course/crypto/md5/#rainbow-table","text":"\u4e00\u79cd\u8f83\u5f31\u7684MD5\u7834\u89e3\u65b9\u6cd5\uff0c\u5173\u952e\u5728\u4e8e \u9884\u8ba1\u7b97 \u627eN\u7ec4\u6570\u636e \u5bf9N\u7ec4\u6570\u636e\u5206\u522b\u4f7f\u7528MD5\u5904\u7406K\u8f6e \u5bf9\u76ee\u6807\u6570X\u8fdb\u884cMD5\u5904\u7406\uff0c\u5e76\u5c06\u7ed3\u679c\u4e0eN\u4e2a(\u5904\u7406K\u8f6e\u540e\u7684)\u7ed3\u679c\u8fdb\u884c\u6bd4\u8f83 \u82e5X\u4e0e\u5176\u4e2d\u67d0\u4e2a\u6570\u76f8\u7b49\uff0c\u5219\u6839\u636eX\u88abMD5\u5904\u7406\u7684\u8f6e\u6570\u5373\u53ef\u5012\u63a8\u51faCollision \u5426\u5219\u7ee7\u7eed\u5bf9X\u8fdb\u884cMD5\u5904\u7406","title":"rainbow table"},{"location":"course/crypto/old/","text":"\u53e4\u5178\u5bc6\u7801 Info 2022/6/14 \u4fee\u6539Enigma\u52a0\u5bc6\u6d41\u7a0b\u56fe 2022/6/14 \u6dfb\u52a0double stepping\u793a\u610f\u56fe \u5355\u8868\u5bc6\u7801 \u4f7f\u7528\u660e\u6587\u5bc6\u6587\u5bf9\u7167\u8868 \u4eff\u5c04\u5bc6\u7801 \\(x = (y \\times k_1+k_2 )\\%n\\) \\(y = (x-k_2)\\times k^{-1} \\%n\\) \u591a\u8868\u5bc6\u7801 \u6bcf\u4e2a\u660e\u6587\u5b57\u6bcd\u91c7\u7528\u4e0d\u540c\u7684\u5355\u8868\u66ff\u6362\uff08\u540c\u4e00\u660e\u6587\u5b57\u6bcd\u5bf9\u5e94\u591a\u4e2a\u5bc6\u6587\u5b57\u7b26\uff09 Vigenere Algorithm \u660e\u6587: this cryptto system is not secure \u5bc6\u94a5: cipher cipher cipher cipher cipher \u5bc6\u6587: VPXZGIA... t+c = v t+p = i Enigma Date: \u6bcf\u4e00\u5929\u7684\u5bc6\u7801\u8bbe\u8ba1 Ringstellung (delta)\u6dfb\u52a0\u589e\u91cf Steckerverbindungen: \u5341\u5bf9\u5b57\u6bcd\u7684\u76f8\u4e92\u8f6c\u5316 Kenngrunppen: \u548c\u65e5\u671f\u5bf9\u5e94 \u65b9\u4fbf\u60c5\u62a5\u5f52\u7c7b \u90e8\u4ef6\u4e0e\u6982\u5ff5 rotor1\uff0c\u5b57\u6bcd\u88681 rotor2\uff0c\u5b57\u6bcd\u88682 rotor3\uff0c\u5b57\u6bcd\u88683 reflactor\uff0c\u5b57\u6bcd\u4e24\u4e24\u5bf9\u5e94 wiring board\uff0c\u8fde\u63a5\u5bf9\u5e94\u5b57\u6bcd message key\uff0c\u4e09\u4e2arotor \u5916\u9762 \u7684\u663e\u793a\uff0c\u5916\u90e8delta ring setting\uff0c\u4e09\u4e2arotor \u5185\u90e8 \u7684\u8bbe\u7f6e\uff0c\u5185\u90e8delta delta = message key - ring setting \u5177\u4f53\u52a0\u5bc6\u6d41\u7a0b plaintext -> wiring board -> +delta1 -> rotor1 -> -delta1 -> +delta2 -> rotor2 -> -delta2 -> +delta3 -> rotor3 -> -delta3 -> reflactor -> +delta3 -> rotor3 -> -delta3 -> +delta2 -> rotor2 -> -delta2 -> +delta1 -> rotor3 -> -delta1 -> wiring board -> cripertext \u540c\u7406\u53ef\u77e5\u52a0\u5bc6\u3001\u89e3\u5bc6\u662f\u5b8c\u5168\u53ef\u9006\u7684\u8fc7\u7a0b \u9f7f\u8f6e\u8df3\u8f6c\u89c4\u5219 QEVJZ RFWKA \u5e38\u89c4\u8df3\u8f6c \u6bcf\u6309\u4e00\u4e0b\uff0c\u9f7f\u8f6eI\u8df3\u8f6c\u4e00\u4e0b \u5f53\u9f7f\u8f6eI\u4ece\u4f4d\u7f6eQ\u8f6c\u5230R\u65f6\uff0c\u9f7f\u8f6e\u2161\u88ab\u5e26\u52a8\u8df3\u8f6c\u4e00\u4e0b double stepping \u5f53\u9f7f\u8f6eI\u4ece\u4f4d\u7f6eQ\u8f6c\u5230R\u65f6\uff0c\u9f7f\u8f6e\u2161\u88ab\u5e26\u52a8\u8df3\u8f6c \u82e5\u6b64\u65f6\u9f7f\u8f6e\u2161\u662f\u4eceD\u8df3\u8f6c\u5230E\uff0c\u5219\u4e0b\u4e00\u6b21\u9f7f\u8f6e\u2161\u4eceE\u8df3\u8f6c\u5230F\uff0c\u5e76\u5e26\u52a8\u9f7f\u8f6e\u2162\u8df3\u8f6c \u53ef\u4ee5\u7406\u89e3\u4e3a I=Q,\u2161=D,\u2162=X -> I=R,\u2161=E,\u2162=X -> I=S,\u2161=F,\u2162=X+1","title":"\u53e4\u5178\u5bc6\u7801"},{"location":"course/crypto/old/#_1","text":"Info 2022/6/14 \u4fee\u6539Enigma\u52a0\u5bc6\u6d41\u7a0b\u56fe 2022/6/14 \u6dfb\u52a0double stepping\u793a\u610f\u56fe","title":"\u53e4\u5178\u5bc6\u7801"},{"location":"course/crypto/old/#_2","text":"\u4f7f\u7528\u660e\u6587\u5bc6\u6587\u5bf9\u7167\u8868","title":"\u5355\u8868\u5bc6\u7801"},{"location":"course/crypto/old/#_3","text":"\\(x = (y \\times k_1+k_2 )\\%n\\) \\(y = (x-k_2)\\times k^{-1} \\%n\\)","title":"\u4eff\u5c04\u5bc6\u7801"},{"location":"course/crypto/old/#_4","text":"\u6bcf\u4e2a\u660e\u6587\u5b57\u6bcd\u91c7\u7528\u4e0d\u540c\u7684\u5355\u8868\u66ff\u6362\uff08\u540c\u4e00\u660e\u6587\u5b57\u6bcd\u5bf9\u5e94\u591a\u4e2a\u5bc6\u6587\u5b57\u7b26\uff09","title":"\u591a\u8868\u5bc6\u7801"},{"location":"course/crypto/old/#vigenere-algorithm","text":"\u660e\u6587: this cryptto system is not secure \u5bc6\u94a5: cipher cipher cipher cipher cipher \u5bc6\u6587: VPXZGIA... t+c = v t+p = i","title":"Vigenere Algorithm"},{"location":"course/crypto/old/#enigma","text":"Date: \u6bcf\u4e00\u5929\u7684\u5bc6\u7801\u8bbe\u8ba1 Ringstellung (delta)\u6dfb\u52a0\u589e\u91cf Steckerverbindungen: \u5341\u5bf9\u5b57\u6bcd\u7684\u76f8\u4e92\u8f6c\u5316 Kenngrunppen: \u548c\u65e5\u671f\u5bf9\u5e94 \u65b9\u4fbf\u60c5\u62a5\u5f52\u7c7b","title":"Enigma"},{"location":"course/crypto/old/#_5","text":"rotor1\uff0c\u5b57\u6bcd\u88681 rotor2\uff0c\u5b57\u6bcd\u88682 rotor3\uff0c\u5b57\u6bcd\u88683 reflactor\uff0c\u5b57\u6bcd\u4e24\u4e24\u5bf9\u5e94 wiring board\uff0c\u8fde\u63a5\u5bf9\u5e94\u5b57\u6bcd message key\uff0c\u4e09\u4e2arotor \u5916\u9762 \u7684\u663e\u793a\uff0c\u5916\u90e8delta ring setting\uff0c\u4e09\u4e2arotor \u5185\u90e8 \u7684\u8bbe\u7f6e\uff0c\u5185\u90e8delta delta = message key - ring setting","title":"\u90e8\u4ef6\u4e0e\u6982\u5ff5"},{"location":"course/crypto/old/#_6","text":"plaintext -> wiring board -> +delta1 -> rotor1 -> -delta1 -> +delta2 -> rotor2 -> -delta2 -> +delta3 -> rotor3 -> -delta3 -> reflactor -> +delta3 -> rotor3 -> -delta3 -> +delta2 -> rotor2 -> -delta2 -> +delta1 -> rotor3 -> -delta1 -> wiring board -> cripertext \u540c\u7406\u53ef\u77e5\u52a0\u5bc6\u3001\u89e3\u5bc6\u662f\u5b8c\u5168\u53ef\u9006\u7684\u8fc7\u7a0b","title":"\u5177\u4f53\u52a0\u5bc6\u6d41\u7a0b"},{"location":"course/crypto/old/#_7","text":"QEVJZ RFWKA \u5e38\u89c4\u8df3\u8f6c \u6bcf\u6309\u4e00\u4e0b\uff0c\u9f7f\u8f6eI\u8df3\u8f6c\u4e00\u4e0b \u5f53\u9f7f\u8f6eI\u4ece\u4f4d\u7f6eQ\u8f6c\u5230R\u65f6\uff0c\u9f7f\u8f6e\u2161\u88ab\u5e26\u52a8\u8df3\u8f6c\u4e00\u4e0b double stepping \u5f53\u9f7f\u8f6eI\u4ece\u4f4d\u7f6eQ\u8f6c\u5230R\u65f6\uff0c\u9f7f\u8f6e\u2161\u88ab\u5e26\u52a8\u8df3\u8f6c \u82e5\u6b64\u65f6\u9f7f\u8f6e\u2161\u662f\u4eceD\u8df3\u8f6c\u5230E\uff0c\u5219\u4e0b\u4e00\u6b21\u9f7f\u8f6e\u2161\u4eceE\u8df3\u8f6c\u5230F\uff0c\u5e76\u5e26\u52a8\u9f7f\u8f6e\u2162\u8df3\u8f6c \u53ef\u4ee5\u7406\u89e3\u4e3a I=Q,\u2161=D,\u2162=X -> I=R,\u2161=E,\u2162=X -> I=S,\u2161=F,\u2162=X+1","title":"\u9f7f\u8f6e\u8df3\u8f6c\u89c4\u5219"},{"location":"course/crypto/rc4/","text":"\u5206\u7ec4\u5bc6\u7801\u5de5\u4f5c\u6a21\u5f0f\u4e0e\u6d41\u5bc6\u7801 1. \u7535\u5b50\u5bc6\u7801\u7c3f\u6a21\u5f0f ECB Electronic codebook mode\uff0c\u5c06\u660e\u6587\u62c6\u5206\u6210\u82e5\u5e72\u6bb5\uff0c\u5206\u522b\u52a0\u5bc6\u3002 ECB\u7684\u52a0\u5bc6\u8fc7\u7a0b\uff1a \\(C_j = E_k(P_j)\\) ECB\u7684\u89e3\u5bc6\u8fc7\u7a0b\uff1a \\(P_j = D_k(C_j)\\) ECB\u7684\u7f3a\u70b9\uff1a\u540c\u6837\u5185\u5bb9\u7684\u660e\u6587\u6bb5\uff0c\u52a0\u5bc6\u7ed3\u679c\u603b\u662f\u76f8\u540c\uff0c\u5bb9\u6613\u88ab\u653b\u7834 ECB\u7684\u4f18\u70b9\uff1a\u52a0\u5bc6\u548c\u89e3\u5bc6\u8fc7\u7a0b\u5747\u53ef\u5e76\u884c 2. \u5bc6\u6587\u5757\u94fe\u63a5\u6a21\u5f0f CBC Cipher Block Chaining Mode\uff0c\u52a0\u5bc6\u8fc7\u7a0b\u5982\u4e0b\uff0c\u6bcf\u6b21\u52a0\u5bc6\u90fd\u4f9d\u8d56\u4e0a\u4e00\u6b21\u7684\u5bc6\u6587\u3002\u52a0\u5bc6\u6d41\u7a0b\u5982\u4e0b\u56fe\u6240\u793a\u3002 CBC\u7f3a\u70b9\uff1a\u52a0\u5bc6\u8fc7\u7a0b\u53ea\u80fd\u4e32\u884c CBC\u4f18\u70b9\uff1a\u76f8\u8f83ECB\u66f4\u4e3a\u5b89\u5168\uff0c\u4e14\u89e3\u5bc6\u8fc7\u7a0b\u53ef\u4ee5\u5e76\u884c 3. \u5bc6\u6587\u53cd\u9988\u6a21\u5f0f CFB Cipher feedback mode \u53ef\u4ee5\u8bbe\u7f6e\u4f4d\u79fb\u6b65\u957f\uff08\u5f53\u6b65\u957f\u4e3a\u4e00\u7ec4\u7684\u957f\u5ea6\u65f6\uff0c\u7b97\u6cd5\u7ea6\u7b49\u4e8eCBC\uff09\uff0c\u7ec4\u4e0e\u7ec4\u4e4b\u95f4\u7406\u8bba\u4e0a\u5b58\u5728\u76f8\u4e92\u5370\u8bc1\u5173\u7cfb\uff0c\u4f7f\u5f97\u5176\u5728\u5bc6\u6587\u4f20\u8f93\u4e2d\u82e5\u4ea7\u751f\u9519\u8bef\uff0c\u4e5f\u53ea\u4f1a\u5f71\u54cd\u90e8\u5206\u6570\u636e\u3002 \u4e00\u822c\u60c5\u51b5\u4e0b\uff0cECB\u7684\u52a0\u5bc6\u5757\u5927\u5c0f\u4e3a8byte\uff0c\u800cCFB\u91c7\u75281byte\u3002\u52a0\u5bc6\u6d41\u7a0b\u5982\u4e0b\u56fe\u6240\u793a\u3002\u5176\u4e2dP\u4e3a\u660e\u6587(P1,P2...Pn)\uff0cC\u4e3a\u5bc6\u6587\uff0cEk\u4e3a\u4ee5k\u4e3a\u5bc6\u94a5\u7684\u52a0\u5bc6\u7b97\u6cd5\uff0cX1\u4e3a\u521d\u59cb CFB\u4f18\u70b9\uff1a\u76f8\u8f83ECB\u66f4\u4e3a\u5b89\u5168\uff0c\u53ef\u4ee5\u4ece\u4f20\u8f93\u7684\u5bc6\u6587\u9519\u8bef\u4e2d\u6062\u590d\u3002 4. \u6d41\u5bc6\u7801\u7b97\u6cd5 RC4","title":"\u5206\u7ec4\u5bc6\u7801\u5de5\u4f5c\u6a21\u5f0f\u4e0e\u6d41\u5bc6\u7801"},{"location":"course/crypto/rc4/#_1","text":"","title":"\u5206\u7ec4\u5bc6\u7801\u5de5\u4f5c\u6a21\u5f0f\u4e0e\u6d41\u5bc6\u7801"},{"location":"course/crypto/rc4/#1-ecb","text":"Electronic codebook mode\uff0c\u5c06\u660e\u6587\u62c6\u5206\u6210\u82e5\u5e72\u6bb5\uff0c\u5206\u522b\u52a0\u5bc6\u3002 ECB\u7684\u52a0\u5bc6\u8fc7\u7a0b\uff1a \\(C_j = E_k(P_j)\\) ECB\u7684\u89e3\u5bc6\u8fc7\u7a0b\uff1a \\(P_j = D_k(C_j)\\) ECB\u7684\u7f3a\u70b9\uff1a\u540c\u6837\u5185\u5bb9\u7684\u660e\u6587\u6bb5\uff0c\u52a0\u5bc6\u7ed3\u679c\u603b\u662f\u76f8\u540c\uff0c\u5bb9\u6613\u88ab\u653b\u7834 ECB\u7684\u4f18\u70b9\uff1a\u52a0\u5bc6\u548c\u89e3\u5bc6\u8fc7\u7a0b\u5747\u53ef\u5e76\u884c","title":"1. \u7535\u5b50\u5bc6\u7801\u7c3f\u6a21\u5f0f ECB"},{"location":"course/crypto/rc4/#2-cbc","text":"Cipher Block Chaining Mode\uff0c\u52a0\u5bc6\u8fc7\u7a0b\u5982\u4e0b\uff0c\u6bcf\u6b21\u52a0\u5bc6\u90fd\u4f9d\u8d56\u4e0a\u4e00\u6b21\u7684\u5bc6\u6587\u3002\u52a0\u5bc6\u6d41\u7a0b\u5982\u4e0b\u56fe\u6240\u793a\u3002 CBC\u7f3a\u70b9\uff1a\u52a0\u5bc6\u8fc7\u7a0b\u53ea\u80fd\u4e32\u884c CBC\u4f18\u70b9\uff1a\u76f8\u8f83ECB\u66f4\u4e3a\u5b89\u5168\uff0c\u4e14\u89e3\u5bc6\u8fc7\u7a0b\u53ef\u4ee5\u5e76\u884c","title":"2. \u5bc6\u6587\u5757\u94fe\u63a5\u6a21\u5f0f CBC"},{"location":"course/crypto/rc4/#3-cfb","text":"Cipher feedback mode \u53ef\u4ee5\u8bbe\u7f6e\u4f4d\u79fb\u6b65\u957f\uff08\u5f53\u6b65\u957f\u4e3a\u4e00\u7ec4\u7684\u957f\u5ea6\u65f6\uff0c\u7b97\u6cd5\u7ea6\u7b49\u4e8eCBC\uff09\uff0c\u7ec4\u4e0e\u7ec4\u4e4b\u95f4\u7406\u8bba\u4e0a\u5b58\u5728\u76f8\u4e92\u5370\u8bc1\u5173\u7cfb\uff0c\u4f7f\u5f97\u5176\u5728\u5bc6\u6587\u4f20\u8f93\u4e2d\u82e5\u4ea7\u751f\u9519\u8bef\uff0c\u4e5f\u53ea\u4f1a\u5f71\u54cd\u90e8\u5206\u6570\u636e\u3002 \u4e00\u822c\u60c5\u51b5\u4e0b\uff0cECB\u7684\u52a0\u5bc6\u5757\u5927\u5c0f\u4e3a8byte\uff0c\u800cCFB\u91c7\u75281byte\u3002\u52a0\u5bc6\u6d41\u7a0b\u5982\u4e0b\u56fe\u6240\u793a\u3002\u5176\u4e2dP\u4e3a\u660e\u6587(P1,P2...Pn)\uff0cC\u4e3a\u5bc6\u6587\uff0cEk\u4e3a\u4ee5k\u4e3a\u5bc6\u94a5\u7684\u52a0\u5bc6\u7b97\u6cd5\uff0cX1\u4e3a\u521d\u59cb CFB\u4f18\u70b9\uff1a\u76f8\u8f83ECB\u66f4\u4e3a\u5b89\u5168\uff0c\u53ef\u4ee5\u4ece\u4f20\u8f93\u7684\u5bc6\u6587\u9519\u8bef\u4e2d\u6062\u590d\u3002","title":"3. \u5bc6\u6587\u53cd\u9988\u6a21\u5f0f CFB"},{"location":"course/crypto/rc4/#4-rc4","text":"","title":"4. \u6d41\u5bc6\u7801\u7b97\u6cd5 RC4"},{"location":"course/db/","text":"\u6570\u636e\u5e93\u7cfb\u7edf(2021-2022\u6625\u590f) Introduction \u4e0a\u7684\u662f\u9ad8\u4e91\u541b\u8001\u5e08\u7684\u6570\u636e\u5e93\u7cfb\u7edf\u8bfe\u7a0b\u3002 \u672c\u8bfe\u7a0b\u5408\u5e76\u4e86\u6570\u636e\u5e93\u7cfb\u7edf\u6982\u5ff5\u53ca\u6570\u636e\u5e93\u7cfb\u7edf\u8bbe\u8ba1\u7684\u5185\u5bb9\u3002 References \u5b59\u5efa\u4f36\u8001\u5e08\u7684\u8bfe\u4ef6 \u5c0f\u89d2\u9f99\u5b66\u957f\u7684\u7b14\u8bb0 RandomStar\u5b66\u957f\u7684\u7b14\u8bb0","title":"\u6570\u636e\u5e93\u7cfb\u7edf(2021-2022\u6625\u590f)"},{"location":"course/db/#2021-2022","text":"","title":"\u6570\u636e\u5e93\u7cfb\u7edf(2021-2022\u6625\u590f)"},{"location":"course/db/#introduction","text":"\u4e0a\u7684\u662f\u9ad8\u4e91\u541b\u8001\u5e08\u7684\u6570\u636e\u5e93\u7cfb\u7edf\u8bfe\u7a0b\u3002 \u672c\u8bfe\u7a0b\u5408\u5e76\u4e86\u6570\u636e\u5e93\u7cfb\u7edf\u6982\u5ff5\u53ca\u6570\u636e\u5e93\u7cfb\u7edf\u8bbe\u8ba1\u7684\u5185\u5bb9\u3002","title":"Introduction"},{"location":"course/db/#references","text":"\u5b59\u5efa\u4f36\u8001\u5e08\u7684\u8bfe\u4ef6 \u5c0f\u89d2\u9f99\u5b66\u957f\u7684\u7b14\u8bb0 RandomStar\u5b66\u957f\u7684\u7b14\u8bb0","title":"References"},{"location":"course/db/query/","text":"Query Processing & Optimization \u67e5\u8be2\u5904\u7406\u5171\u5206\u4e3a\u4e09\u4e2a\u8fc7\u7a0b\uff1a\u6267\u884c(Parsing & Translation)\u3001\u4f18\u5316(Optimization)\u3001\u4f30\u8ba1(Evaluation) Parsing & Translation Measures of Query Cost \\(t_T\\) : time to transfer one block \\(t_S\\) : time for one seek Cost for b block transfers plus S seeks: \\(b*t_T + S*t_S\\) Selection Linear Search(equality on key): \u7ebf\u6027\u641c\u7d22 worst cost: \\(b_r * t_T + t_S\\) \uff08\u5173\u7cfb\u8868\u5b58\u653e\u5728 \\(b_r\\) \u4e2ablock\u4e2d\uff09 average cost: \\((b_r/2)*t_T + t_S\\) Primary B+-Tree index(equality on key): B+\u6811\u4e3b\u7d22\u5f15\u641c\u7d22 Cost: \\((h_i+1)*(t_T+t_S)\\) \uff0c \\(h_i\\) \u662fB+\u6811\u7684\u9ad8\u5ea6\uff0c\u6bcf\u6b21\u9700\u8981\u4eceDisk\u4e2dSeek\u8be5\u5757\u5e76\u8bfb\u5165\uff0c\u800c\u540e\u9762\u76841\u662f\u6307\u6700\u540e\u627e\u5230\u76ee\u6807\u5757\u65f6\uff0c\u9700\u8981\u8fdb\u884cseek+transfer(\u4f7f\u7528Index\u5fc5\u4e0d\u53ef\u5c11\u7684) Primary B+-Tree index(equality on nonkey): B+\u6811\u4e3b\u7d22\u5f15\uff0c\u5355\u503c(\u975e\u552f\u4e00) Cost: \\(h_i*(t_T+t_S)+t_S+b*t_T\\) \uff0c\u5176\u4e2db\u662f\u5305\u542b\u67e5\u627e\u503c\u7684\u6570\u636e\u5757\u4e2a\u6570\u3002 Secondary B+-Tree index(equality on key): B+\u6811\u8f85\u52a9\u7d22\u5f15 Cost: \\((h_i+1)*(t_T+t_S)\\) \uff0c\u548cB+\u6811\u4e3b\u7d22\u5f15\u641c\u7d22\u539f\u7406\u4e00\u6837 Secondary B+-index on nonkey: B+\u6811\u8f85\u52a9\u7d22\u5f15\uff0c\u5355\u503cv(\u975e\u552f\u4e00) Cost: \\((h_i + m+ n) * (t_T + t_S)\\) m\u6307B+\u6811\u4e2d\uff0c\u5bf9\u5e94\u67e5\u627e\u503cv\u7d22\u5f15\u7684\u5757\u7684\u6570\u91cf n\u6307\u5305\u542b\u67e5\u627e\u503cv\u7684\u6570\u636e\u5757\u7684\u6570\u91cf External Merge Sort M: memory size\uff0c\u5185\u5b58\u5171\u53ef\u5b58\u653e\u7684\u9875\u7684\u4e2a\u6570 \u5927\u81f4\u6d41\u7a0b\u53ef\u4ee5\u901a\u8fc7\u4e0b\u56fe\u8868\u793a\uff1a \u7b2c\u4e00\u8f6e\u4f20\u5165M\u5757\u6570\u636e\uff0c\u8fdb\u884c\u539f\u5730\u6392\u5e8f\u3002\uff08\u4f7f\u7528\u5feb\u6392\u3001\u5806\u6392\u5e8f\u7b49\u539f\u5730\u6392\u5e8f\u7b97\u6cd5\uff09 \u7b2c\u4e8c\u8f6e\u53ca\u540e\u9762\u6bcf\u8f6e\uff0c\u5408\u5e76M-1\u4e2a\u6709\u5e8f\u5e8f\u5217\u3002 \u6ce8\u610f\uff0c\u9700\u8981\u5728memory\u5757\u4e2d\u9884\u7559\u4e00\u4e2a\u533a\u57df\u5b58\u653e\u6392\u5e8f\u597d\u7684\u6709\u5e8f\u5e8f\u5217\uff0c\u6240\u4ee5\u6bcf\u8f6e\u5408\u5e76\u540e\uff0c\u6709\u5e8f\u5e8f\u5217\u7684\u6bb5\u6570\u5c31\u5c11\u4e86M-1\u500d\uff08\u9884\u7559\u51fa\u4e00\u4e2a\u8f93\u51fa\u5757\u7684\u539f\u56e0\u662f\uff1a\u53ef\u4ee5\u4ee5\u5757\u4e3a\u5355\u4f4d\u5199\u56de\uff0c\u8282\u7701\u65f6\u95f4\u5f00\u9500\uff09 block transfers Total number of merge passes required: \\(\\lceil \\log_{M-1}(b_r/M)\\rceil\\) (\u7b2c\u4e00\u6b21\u6392\u5e8f\u88ab\u89c6\u4e3a\u521d\u59cb\u5316\uff0c\u4e0d\u8ba1\u5165\u5176\u4e2d\uff0c\u53ef\u5e26\u5165\u68c0\u9a8c \\(b_r=M\\) \u548c \\(b_r=M-1\\) \u7684\u60c5\u51b5) \u56e0\u4e3a\u5728\u4e00\u8f6e\u5f52\u5e76\u6392\u5e8f\u4e2d\uff0c\u4e00\u4e2a\u5757\u9700\u8981\u7ecf\u5386\u5199\u5165\u5185\u5b58\u3001\u7136\u540e\u5199\u56de\u78c1\u76d8\uff0c\u6240\u4ee5\u6bcf\u8f6e\u7684\u5f00\u9500\u662f \\(2b_r\\) \u6700\u540e\u4e00\u8f6e\u6392\u5e8f\uff0c\u4e0d\u8ba1\u7b97\u5199\u56dedisk\u7684\u5f00\u9500\u3002 \u6240\u4ee5\u603b\u6b21\u6570\u662f \\(b_r(2\\lceil \\log_{M-1}(b_r/M)\\rceil + 1)\\) seek times \u7b2c\u4e00\u6b21\u6392\u5e8f\uff1a \\(\\lceil b_r/M\\rceil\\) \u6b21seek \u7b2c\u4e8c\u6b21\u6392\u5e8f\u53ca\u540e\u9762\u7684\u6392\u5e8f\uff1a\u5047\u8bbe\u6bcf\u6b21\u8bfb\u5165/\u5199\u51fa\u7684\u5757\u6570\u4e3a \\(\\lceil b_b \\rceil\\) \u5219\u9700\u8981 \\(\\lceil b_r/b_b\\rceil\\) \u6b21\u8bfb\u51fa\u548c\u5199\u5165\uff0c\u6b64\u5904\u5171\u7ecf\u5386 \\(\\lceil \\log_{M-1}{(b_r/M)} \\rceil\\) \u8f6e\u6392\u5e8f\uff0c\u6700\u540e\u4e00\u8f6e\u4e0d\u7528\u5199\u5165\uff0c\u6545\u4e00\u5171\u4e3a \\(\\lceil b_r/b_b\\rceil(2\\lceil \\log_{M-1}{(b_r/M)} \\rceil -1)\\) \u6b21seek \u603b\u8ba1\u4e3a \\(2\\lceil b_r/M \\rceil + \\lceil b_r/b_b\\rceil(2\\lceil \\log_{M-1}{(b_r/M)} \\rceil -1)\\) Join (1) Nested-Loop Join \\(r\\bowtie_\\theta s\\) \uff0c\u4f2a\u4ee3\u7801\u5982\u4e0b\uff1a for each tuple tr in r do begin for each tuple ts in s do begin test pair (tr, ts) to see if they satisfy the join condition if they do, add tr\u00b7ts to the result end end \u6700\u574f\u60c5\u51b5\uff08\u53ea\u80fd\u8f7d\u5165\u4e24\u4e2ablock\uff0cr/s\u5404\u4e00\u4e2a\uff09 block transfers: \\(b_r+n_r*b_s\\) r\u5171\u8981\u8f7d\u5165 \\(b_r\\) \u6b21\uff0c\u800cs\u5171\u8981\u8f7d\u5165 \\(n_r*b_s\\) \u6b21 seek times: \\(b_r+n_r\\) r\u5171\u8981seek \\(b_r\\) \u6b21\uff0c\u800cs\u5171\u8981seek \\(n_r\\) \u6b21 \u6700\u597d\u60c5\u51b5\uff08\u5168\u90e8\u5143\u7ec4\u90fd\u80fd\u76f4\u63a5\u8f7d\u5165\u5185\u5b58\uff09 block transfers \\(b_r + b_s\\) seek times: \\(2\\) (2) Block Nested-Loop Join for each block Br in r do begin for each block Bs in s do begin for each tuple tr in Br do begin for each tuple ts in Bs do begin test pair (tr, ts) to see if they satisfy the join condition if they do, add tr\u00b7ts to the result end end end end \u6700\u574f\u60c5\u51b5\uff08\u53ea\u80fd\u8f7d\u5165\u4e24\u4e2ablock\uff0cr/s\u5404\u4e00\u4e2a\uff09 block transfers: \\(b_r+b_r*b_s\\) r\u5171\u8981\u8f7d\u5165 \\(b_r\\) \u6b21\uff0c\u800cs\u5171\u8981\u8f7d\u5165 \\(b_r*b_s\\) \u6b21 seek times: \\(2b_r\\) r\u5171\u8981seek \\(b_r\\) \u6b21\uff0c\u800cs\u5171\u8981seek \\(b_r\\) \u6b21 \u6700\u597d\u60c5\u51b5\uff08\u5168\u90e8\u5143\u7ec4\u90fd\u80fd\u76f4\u63a5\u8f7d\u5165\u5185\u5b58\uff09 block transfers \\(b_r + b_s\\) seek times: \\(2\\) (3) Indexed Nested-Loop Join \u539f\u7406\uff1a\u5916\u5c42\u904d\u5386tuple\uff0c\u5185\u5c42\u4f7f\u7528\u7d22\u5f15\u5339\u914d\uff08\u5982B+\u6811\u7d22\u5f15\u7b49\uff09 \u6700\u574f\u60c5\u51b5\uff08\u53ea\u80fd\u8f7d\u5165\u4e24\u4e2ablock\uff0cr/s\u5404\u4e00\u4e2a\uff09 \u56e0\u4e3a\u7d22\u5f15\u672c\u8eab\u7684\u590d\u6742\u5ea6\u8f83\u590d\u6742\uff0c\u6545\u53ea\u7ed9\u51fa\u8f83\u7c97\u7565\u7684\u4f30\u7b97 \\(b_r*(t_T+t_S)+n_r*c\\) \u5176\u4e2d \\(c\\) \u6307\u5355\u6b21\u67e5\u8be2\u7684\u5e73\u5747\u5f00\u9500 (4) Merge-Join \u7b97\u6cd5\u6d41\u7a0b \u6839\u636eindex\u7684attributes\u8fdb\u884c\u6392\u5e8f \u8fde\u63a5\u4e24\u4e2a\u6392\u5e8f\u8fc7\u7684\u8868\uff08\u4ece\u5934\u5230\u5c3e\u626b\u63cf\uff09 \u7406\u60f3\u60c5\u51b5\u4e0b\uff08\u6bcf\u4e2a\u5757\u53ea\u9700\u8981\u8bfb\u8fdb\u5185\u5b58\u4e00\u6b21\uff09 block transfers: \\(b_r + b_s\\) +(\u6392\u5e8f) seek times: \\(\\lceil b_r/b_b\\rceil + \\lceil b_s/b_b\\rceil\\) +(\u6392\u5e8f) (5) Hash-Join \u5927\u81f4\u6d41\u7a0b\u5982\u4e0b \u5c06r\u5212\u5206\u6210nh\u4e2a\u5757 \u5c06s\u5212\u5206\u6210nh\u4e2a\u5757 for 0 to nh-1 \u5bf9r\u5bf9\u5e94\u5757\u4e2d\u7684\u5143\u7d20\u5efa\u7acb\u7d22\u5f15Ri for \u904d\u5386s\u5bf9\u5e94\u5757\u4e2d\u7684\u5143\u7d20 \u68c0\u7d22\u7d22\u5f15Ri for \u6240\u6709\u5339\u914d\u7684tuple in r join end end end \u5047\u8bber,s\u5206\u522b\u88ab\u5212\u5206\u4e86 \\(n_r,n_s\\) \u4e2a\u5757\uff0c\u4f46\u5f53 \\(n_r,n_s>M\\) \u8d85\u8fc7\u5185\u5b58\u7684\u5bb9\u7eb3\u7a7a\u95f4\u65f6\uff0c\u5219\u9700\u8981\u8fdb\u884c\u9012\u5f52\u5212\u5206\u3002 \u82e5\u6ca1\u6709\u9012\u5f52\u5212\u5206 block transfer: \\(3(b_r+b_s)+4n_h\\) \u5212\u5206\u8fc7\u7a0b\u9700\u8981\u904d\u5386\u8868\uff0c\u5305\u542b\u8bfb\u51fa\u548c\u5199\u56de \\(2*(b_r+b_s)\\) \u5339\u914d\u8fc7\u7a0b\u9700\u8981\u904d\u5386\u8868\uff0c\u53ea\u5305\u542b\u8bfb\u51fa \\(b_r+b_s\\) \u4f46\u662f\u82e5Hash\u8868\u975e\u6ee1\uff0c\u5219\u81f3\u591a\u5236\u9020\u51fa \\(n_h\\) \u4e2a\u975e\u6ee1\u5757\uff0c\u6d89\u53ca\u5212\u5206\u7684\u5199\u56de\u548c\u5339\u914d\u7684\u8bfb\u51fa\uff0c\u4f5c\u7528\u4e8e\u4e24\u4e2a\u8868\uff0c\u6545\u5171 \\(4n_h\\) (\u5b9e\u9645\u4e2d \\(n_h\\) \u4e00\u822c\u5f88\u5c0f\uff0c\u53ef\u4ee5\u5ffd\u7565\u4e0d\u8ba1) seek times: \\(2(\\lceil b_r/b_b\\rceil +\\lceil b_s/b_b\\rceil)+2n_h\\) \u5212\u5206\u8fc7\u7a0b\u9700\u8981\u904d\u5386\u8868\uff0c\u5047\u8bbe\u6bcf\u6b21\u653e\u5165\u5185\u5b58\u5757\u4e2d \\(b_b\\) \u4e2a\uff0c\u5219\u8bfb\u51fa\u5199\u56de\u5171\u9700 \\(2(\\lceil b_r/b_b\\rceil +\\lceil b_s/b_b\\rceil)\\) \u6b21 \u5339\u914d\u8fc7\u7a0b\u4e2d\u76f4\u63a5\u53d6Hash\u5757\uff0c\u5171 \\(2n_h\\) \u82e5\u6709\u9012\u5f52\u5212\u5206 \u9012\u5f52\u5212\u5206\u7684\u539f\u5219\u662f\uff0c\u6bcf\u6b21\u5c06\u5212\u5206\u7684\u5927\u5c0f\u964d\u4e3a\u539f\u6765\u7684 \\(M-1\\) \uff0c\u76f4\u81f3\u6bcf\u4e2a\u5212\u5206\u7684\u6700\u591a\u5360 \\(M\\) \u5757\u4e3a\u6b62\uff08\u4f7f\u5f97\u5185\u5b58\u80fd\u591f\u5bb9\u7eb3\u4e0b\uff0c\u4ee5\u4fbf\u4e8e\u5efa\u7acb\u7d22\u5f15\uff09 block transfer: \\(2(b_r+b_s)\\lceil log_{M-1}(b_s)-1\\rceil+b_r+b_n\\) \u5171\u8fdb\u884c \\(\\lceil log_{M-1}(b_s)-1\\rceil\\) \u8f6e \u5176\u4f59\u53c2\u7167\u6ca1\u6709\u9012\u5f52\u5212\u5206\u7684\u60c5\u51b5 seek times: \\(2(\\lceil b_r/b_b\\rceil +\\lceil b_s/b_b\\rceil)\\lceil log_{M-1}(b_s)-1\\rceil+2n_h\\) \u5171\u8fdb\u884c \\(\\lceil log_{M-1}(b_s)-1\\rceil\\) \u8f6e \u5176\u4f59\u53c2\u7167\u6ca1\u6709\u9012\u5f52\u5212\u5206\u7684\u60c5\u51b5 Evaluation \u5bf9\u4e00\u4e9b\u5355\u64cd\u4f5c\u7684\u590d\u6742\u5ea6\u6709\u4e86\u89e3\u4e4b\u540e\uff0c\u53ef\u4ee5\u4f7f\u7528\u7269\u5316(Materialization)\u548c\u6d41\u6c34(pipelining)\u7684\u65b9\u6cd5\u5c06\u4ed6\u4eec\u4e32\u8d77\u6765 \u5b9e\u4f53\u5316\uff1a\u4f9d\u6b21\u8fdb\u884c\u8868\u8fbe\u5f0f\u7684\u8ba1\u7b97\uff0c\u6784\u5efa\u524d\u7f00\u6811\u9012\u5f52\u8fdb\u884c \u6d41\u6c34\u7ebf\uff1a\u540c\u65f6\u8bc4\u4f30\u591a\u4e2a\u64cd\u4f5c Optimization Equivalence Rule(\u7b49\u4ef7\u5173\u7cfb\u8868\u8fbe\u5f0f) Conjunctive selection operations can be deconstructed into a sequence of indicidual selections \\(\\sigma_{\\theta_1\\land\\theta_2}(E)=\\sigma_{\\theta_1}(\\sigma_{\\theta_2}(E))\\) Selection operations are commutative \\(\\sigma_{\\theta_1}(\\sigma_{\\theta_2}(E)) = \\sigma_{\\theta_2}(\\sigma_{\\theta_1}(E))\\) Only the last in a sequence of projection operations is needed, the others can be ommitted. \\(\\Pi_{L_1}(\\Pi_{L_2}(...(\\Pi_{L_n}(E))...))=\\Pi_{L_1}(E)\\) Selections can be combined with Cartesian products and theta joins. (1) \\(\\sigma_{\\theta}(E_1\\times E_2) = E_1 \\bowtie_\\theta E_2\\) (2) \\(\\sigma_{\\theta_1}(E_1\\bowtie_{\\theta_2} E_2)=E_1\\bowtie_{\\theta_1\\land\\theta_2}E_2\\) Theta-join operations (and natural joins) are commutative. \\(E_1\\bowtie_\\theta E_2 = E_2\\bowtie_\\theta E_1\\) Natural join operatins are associative \\((E_1\\bowtie E_2)\\bowtie E_3 = E_1\\bowtie(E_2\\bowtie E_3)\\) , Theta joins are associative in the following manner \\((E_1\\bowtie_{\\theta_1} E_2)\\bowtie_{\\theta_2\\land\\theta_3} E_3 = E_1\\bowtie_{\\theta_1\\land \\theta_3}(E_2\\bowtie_{\\theta_2} E_3)\\) , where \\(theta_2\\) involves attributes from only \\(E_2\\) and \\(E_3\\) . The selection operation distributes over the theta join operation under the following two conditions: (1) When all the attributes in \\(\\theta_0\\) involve only the attributes of one of the expressions ( \\(E_1\\) ) being joined \\(\\sigma_{\\theta_0}(E_1\\bowtie_{\\theta}E_2)=(\\sigma_{\\theta_0}(E_1))\\bowtie_\\theta E_2\\) (2) When \\(\\theta_1\\) involves only the attributes of \\(E_1\\) and \\(\\theta_2\\) involves only the attributes of \\(E_2\\) . \\(\\sigma_{\\theta_1\\land \\theta_2}(E_1\\bowtie_{\\theta}E_2)=(\\sigma_{\\theta_1}(E_1))\\bowtie_{\\theta}(\\sigma_{\\theta_2}(E_2))\\) The projetion operation distributes over the theta join operation as follows: (1) if \\(\\theta\\) involves only attributes from \\(L_1 \\cup L2\\) : \\(\\Pi_{L1\\cup L_2}(E_1\\bowtie_{\\theta}E_2)=(\\Pi_{L_1}(E_1))\\bowtie_{\\theta}(\\Pi_{L_2}(E_2))\\) (2) Consider a join \\(E_1\\bowtie_\\theta E_2\\) . (3) Let \\(L_1\\) and \\(L_2\\) be sets of attributes from \\(E_1\\) and \\(E_2\\) respectively (4) Let \\(L_3\\) be attributes of \\(E_1\\) that are involved in join condition \\(\\theta\\) , but are not in \\(L_1 \\cup L_2\\) (5) Let \\(L_4\\) be attributes of \\(E_2\\) that are involved in join condition \\(\\theta\\) , but are not in \\(L_1\\cup L_2\\) \\(\\Pi_{L_1\\cup L_2}(E_1\\bowtie_\\theta E_2)=\\Pi_{L_1\\cup L_2}((\\Pi_{L_1\\cup L_3}(E_1))\\bowtie_\\theta(\\Pi_{L2\\cup L_4}(E_2)))\\) The set operations union and intersection are commutative \\(E_1 \\cup E_2 = E_2 \\cup E_1\\) , \\(E_1\\cap E_2 = E_2 \\cap E_1\\) Set union and intersection are assocative \\((E_1\\cup E_2)\\cup E_3 = E_1 \\cup (E_2\\cup E_3)\\) , \\((E_1\\cap E_2)\\cap E_3=E_1\\cap(E_2\\cap E_3)\\) The selection operation distributes over \\(\\cap\\) , \\(\\cup\\) and \\(-\\) \\(\\sigma_\\theta(E_1-E_2)=\\sigma_\\theta(E_1)-\\sigma_\\theta(E_2)\\) The projection operation distributes over union \\(\\Pi_{L}(E_1\\cup E_2)=(\\Pi_L(E_1))\\cup (\\Pi_{L}(E_2))\\) Cost Estimation(\u7ed3\u679c\u96c6\u5927\u5c0f\u4f30\u8ba1) \u57fa\u672c\u6982\u5ff5 \\(n_r\\) : number of tuples in a relation \\(r\\) \\(b_r\\) : number of blocks containing tuples of \\(r\\) \\(l_r\\) : size of a tuple of \\(r\\) \\(f_r\\) : blocking factor of \\(r\\) \\(V(A,r)\\) : number of distinct values that appear in \\(r\\) for attribute \\(A\\) ; same as the size of \\(\\Pi_A(r)\\) \\(b_r=\\lceil \\frac{n_r}{f_r} \\rceil\\) \u7b97\u6cd5\u4f30\u8ba1 \u9009\u62e9\u4f30\u8ba1 \\(\\sigma_{A=v}(r)\\) \u4e00\u822c\u5047\u8bbe\u4e3a\u5747\u5300\u5206\u5e03 \\(n_r/V(A,r)\\) \u590d\u6742\u9009\u62e9\u4f30\u8ba1 \u5408\u53d6 \\(\\sigma_{\\theta_1\\land \\theta_2\\land\\dots\\land\\theta_n(r)}\\) : \\(n_r\\cdot\\frac{s_1\\cdot s_2\\dots s_n}{n_r^n}\\) \u6790\u53d6 \\(\\sigma_{\\theta_1\\lor \\theta_2\\lor\\dots\\lor\\theta_n(r)}\\) : \\(n_r\\cdot(1-(1-\\frac{s_1}{n_r})(1-\\frac{s_2}{n_r})\\dots(1-\\frac{s_n}{n_r}))\\) \u8fde\u63a5\u4f30\u8ba1 \\(r\\bowtie s\\) \u82e5\u4e24\u4e2a\u5173\u7cfb\u65e0\u5171\u540c\u5c5e\u6027: \\(n_r \u00b7 n_s\\) \u82e5\u5171\u540c\u5c5e\u6027\u662fr\u7684key: \\({\\rm size} \\le n_s\\) \u82e5\u5171\u540c\u5c5e\u6027\u662fs\u5230r\u7684foregin key: \\(n_r\\) \u82e5\u5171\u540c\u5c5e\u6027\u4e0d\u662fkey: \\(\\min(\\frac{n_s\\cdot n_r}{V(A,s)}, \\frac{n_s\\cdot n_r}{V(A,r)})\\) \u6295\u5f71: \\(\\Pi(s)\\) : \\(V(A,r)\\) \u805a\u5408: \\(\\mathcal{G}(s)\\) : \\(V(A,r)\\) \u96c6\u5408\uff1a\u8f6c\u6362\u4e3a\u5408\u53d6\u548c\u6790\u53d6 Heuristic Optimization \u63a2\u7d22\u5f0f\u7684\u4f18\u5316 \u5c3d\u65e9\u8fdb\u884cselection \u5c3d\u65e9\u8fdb\u884cprojection \u9009\u62e9\u6700\u4e25\u683c\u7684selection\u548coperations\u64cd\u4f5c","title":"Query Processing & Optimization"},{"location":"course/db/query/#query-processing-optimization","text":"\u67e5\u8be2\u5904\u7406\u5171\u5206\u4e3a\u4e09\u4e2a\u8fc7\u7a0b\uff1a\u6267\u884c(Parsing & Translation)\u3001\u4f18\u5316(Optimization)\u3001\u4f30\u8ba1(Evaluation)","title":"Query Processing &amp; Optimization"},{"location":"course/db/query/#parsing-translation","text":"","title":"Parsing &amp; Translation"},{"location":"course/db/query/#measures-of-query-cost","text":"\\(t_T\\) : time to transfer one block \\(t_S\\) : time for one seek Cost for b block transfers plus S seeks: \\(b*t_T + S*t_S\\)","title":"Measures of Query Cost"},{"location":"course/db/query/#selection","text":"Linear Search(equality on key): \u7ebf\u6027\u641c\u7d22 worst cost: \\(b_r * t_T + t_S\\) \uff08\u5173\u7cfb\u8868\u5b58\u653e\u5728 \\(b_r\\) \u4e2ablock\u4e2d\uff09 average cost: \\((b_r/2)*t_T + t_S\\) Primary B+-Tree index(equality on key): B+\u6811\u4e3b\u7d22\u5f15\u641c\u7d22 Cost: \\((h_i+1)*(t_T+t_S)\\) \uff0c \\(h_i\\) \u662fB+\u6811\u7684\u9ad8\u5ea6\uff0c\u6bcf\u6b21\u9700\u8981\u4eceDisk\u4e2dSeek\u8be5\u5757\u5e76\u8bfb\u5165\uff0c\u800c\u540e\u9762\u76841\u662f\u6307\u6700\u540e\u627e\u5230\u76ee\u6807\u5757\u65f6\uff0c\u9700\u8981\u8fdb\u884cseek+transfer(\u4f7f\u7528Index\u5fc5\u4e0d\u53ef\u5c11\u7684) Primary B+-Tree index(equality on nonkey): B+\u6811\u4e3b\u7d22\u5f15\uff0c\u5355\u503c(\u975e\u552f\u4e00) Cost: \\(h_i*(t_T+t_S)+t_S+b*t_T\\) \uff0c\u5176\u4e2db\u662f\u5305\u542b\u67e5\u627e\u503c\u7684\u6570\u636e\u5757\u4e2a\u6570\u3002 Secondary B+-Tree index(equality on key): B+\u6811\u8f85\u52a9\u7d22\u5f15 Cost: \\((h_i+1)*(t_T+t_S)\\) \uff0c\u548cB+\u6811\u4e3b\u7d22\u5f15\u641c\u7d22\u539f\u7406\u4e00\u6837 Secondary B+-index on nonkey: B+\u6811\u8f85\u52a9\u7d22\u5f15\uff0c\u5355\u503cv(\u975e\u552f\u4e00) Cost: \\((h_i + m+ n) * (t_T + t_S)\\) m\u6307B+\u6811\u4e2d\uff0c\u5bf9\u5e94\u67e5\u627e\u503cv\u7d22\u5f15\u7684\u5757\u7684\u6570\u91cf n\u6307\u5305\u542b\u67e5\u627e\u503cv\u7684\u6570\u636e\u5757\u7684\u6570\u91cf","title":"Selection"},{"location":"course/db/query/#external-merge-sort","text":"M: memory size\uff0c\u5185\u5b58\u5171\u53ef\u5b58\u653e\u7684\u9875\u7684\u4e2a\u6570 \u5927\u81f4\u6d41\u7a0b\u53ef\u4ee5\u901a\u8fc7\u4e0b\u56fe\u8868\u793a\uff1a \u7b2c\u4e00\u8f6e\u4f20\u5165M\u5757\u6570\u636e\uff0c\u8fdb\u884c\u539f\u5730\u6392\u5e8f\u3002\uff08\u4f7f\u7528\u5feb\u6392\u3001\u5806\u6392\u5e8f\u7b49\u539f\u5730\u6392\u5e8f\u7b97\u6cd5\uff09 \u7b2c\u4e8c\u8f6e\u53ca\u540e\u9762\u6bcf\u8f6e\uff0c\u5408\u5e76M-1\u4e2a\u6709\u5e8f\u5e8f\u5217\u3002 \u6ce8\u610f\uff0c\u9700\u8981\u5728memory\u5757\u4e2d\u9884\u7559\u4e00\u4e2a\u533a\u57df\u5b58\u653e\u6392\u5e8f\u597d\u7684\u6709\u5e8f\u5e8f\u5217\uff0c\u6240\u4ee5\u6bcf\u8f6e\u5408\u5e76\u540e\uff0c\u6709\u5e8f\u5e8f\u5217\u7684\u6bb5\u6570\u5c31\u5c11\u4e86M-1\u500d\uff08\u9884\u7559\u51fa\u4e00\u4e2a\u8f93\u51fa\u5757\u7684\u539f\u56e0\u662f\uff1a\u53ef\u4ee5\u4ee5\u5757\u4e3a\u5355\u4f4d\u5199\u56de\uff0c\u8282\u7701\u65f6\u95f4\u5f00\u9500\uff09 block transfers Total number of merge passes required: \\(\\lceil \\log_{M-1}(b_r/M)\\rceil\\) (\u7b2c\u4e00\u6b21\u6392\u5e8f\u88ab\u89c6\u4e3a\u521d\u59cb\u5316\uff0c\u4e0d\u8ba1\u5165\u5176\u4e2d\uff0c\u53ef\u5e26\u5165\u68c0\u9a8c \\(b_r=M\\) \u548c \\(b_r=M-1\\) \u7684\u60c5\u51b5) \u56e0\u4e3a\u5728\u4e00\u8f6e\u5f52\u5e76\u6392\u5e8f\u4e2d\uff0c\u4e00\u4e2a\u5757\u9700\u8981\u7ecf\u5386\u5199\u5165\u5185\u5b58\u3001\u7136\u540e\u5199\u56de\u78c1\u76d8\uff0c\u6240\u4ee5\u6bcf\u8f6e\u7684\u5f00\u9500\u662f \\(2b_r\\) \u6700\u540e\u4e00\u8f6e\u6392\u5e8f\uff0c\u4e0d\u8ba1\u7b97\u5199\u56dedisk\u7684\u5f00\u9500\u3002 \u6240\u4ee5\u603b\u6b21\u6570\u662f \\(b_r(2\\lceil \\log_{M-1}(b_r/M)\\rceil + 1)\\) seek times \u7b2c\u4e00\u6b21\u6392\u5e8f\uff1a \\(\\lceil b_r/M\\rceil\\) \u6b21seek \u7b2c\u4e8c\u6b21\u6392\u5e8f\u53ca\u540e\u9762\u7684\u6392\u5e8f\uff1a\u5047\u8bbe\u6bcf\u6b21\u8bfb\u5165/\u5199\u51fa\u7684\u5757\u6570\u4e3a \\(\\lceil b_b \\rceil\\) \u5219\u9700\u8981 \\(\\lceil b_r/b_b\\rceil\\) \u6b21\u8bfb\u51fa\u548c\u5199\u5165\uff0c\u6b64\u5904\u5171\u7ecf\u5386 \\(\\lceil \\log_{M-1}{(b_r/M)} \\rceil\\) \u8f6e\u6392\u5e8f\uff0c\u6700\u540e\u4e00\u8f6e\u4e0d\u7528\u5199\u5165\uff0c\u6545\u4e00\u5171\u4e3a \\(\\lceil b_r/b_b\\rceil(2\\lceil \\log_{M-1}{(b_r/M)} \\rceil -1)\\) \u6b21seek \u603b\u8ba1\u4e3a \\(2\\lceil b_r/M \\rceil + \\lceil b_r/b_b\\rceil(2\\lceil \\log_{M-1}{(b_r/M)} \\rceil -1)\\)","title":"External Merge Sort"},{"location":"course/db/query/#join","text":"(1) Nested-Loop Join \\(r\\bowtie_\\theta s\\) \uff0c\u4f2a\u4ee3\u7801\u5982\u4e0b\uff1a for each tuple tr in r do begin for each tuple ts in s do begin test pair (tr, ts) to see if they satisfy the join condition if they do, add tr\u00b7ts to the result end end \u6700\u574f\u60c5\u51b5\uff08\u53ea\u80fd\u8f7d\u5165\u4e24\u4e2ablock\uff0cr/s\u5404\u4e00\u4e2a\uff09 block transfers: \\(b_r+n_r*b_s\\) r\u5171\u8981\u8f7d\u5165 \\(b_r\\) \u6b21\uff0c\u800cs\u5171\u8981\u8f7d\u5165 \\(n_r*b_s\\) \u6b21 seek times: \\(b_r+n_r\\) r\u5171\u8981seek \\(b_r\\) \u6b21\uff0c\u800cs\u5171\u8981seek \\(n_r\\) \u6b21 \u6700\u597d\u60c5\u51b5\uff08\u5168\u90e8\u5143\u7ec4\u90fd\u80fd\u76f4\u63a5\u8f7d\u5165\u5185\u5b58\uff09 block transfers \\(b_r + b_s\\) seek times: \\(2\\) (2) Block Nested-Loop Join for each block Br in r do begin for each block Bs in s do begin for each tuple tr in Br do begin for each tuple ts in Bs do begin test pair (tr, ts) to see if they satisfy the join condition if they do, add tr\u00b7ts to the result end end end end \u6700\u574f\u60c5\u51b5\uff08\u53ea\u80fd\u8f7d\u5165\u4e24\u4e2ablock\uff0cr/s\u5404\u4e00\u4e2a\uff09 block transfers: \\(b_r+b_r*b_s\\) r\u5171\u8981\u8f7d\u5165 \\(b_r\\) \u6b21\uff0c\u800cs\u5171\u8981\u8f7d\u5165 \\(b_r*b_s\\) \u6b21 seek times: \\(2b_r\\) r\u5171\u8981seek \\(b_r\\) \u6b21\uff0c\u800cs\u5171\u8981seek \\(b_r\\) \u6b21 \u6700\u597d\u60c5\u51b5\uff08\u5168\u90e8\u5143\u7ec4\u90fd\u80fd\u76f4\u63a5\u8f7d\u5165\u5185\u5b58\uff09 block transfers \\(b_r + b_s\\) seek times: \\(2\\) (3) Indexed Nested-Loop Join \u539f\u7406\uff1a\u5916\u5c42\u904d\u5386tuple\uff0c\u5185\u5c42\u4f7f\u7528\u7d22\u5f15\u5339\u914d\uff08\u5982B+\u6811\u7d22\u5f15\u7b49\uff09 \u6700\u574f\u60c5\u51b5\uff08\u53ea\u80fd\u8f7d\u5165\u4e24\u4e2ablock\uff0cr/s\u5404\u4e00\u4e2a\uff09 \u56e0\u4e3a\u7d22\u5f15\u672c\u8eab\u7684\u590d\u6742\u5ea6\u8f83\u590d\u6742\uff0c\u6545\u53ea\u7ed9\u51fa\u8f83\u7c97\u7565\u7684\u4f30\u7b97 \\(b_r*(t_T+t_S)+n_r*c\\) \u5176\u4e2d \\(c\\) \u6307\u5355\u6b21\u67e5\u8be2\u7684\u5e73\u5747\u5f00\u9500 (4) Merge-Join \u7b97\u6cd5\u6d41\u7a0b \u6839\u636eindex\u7684attributes\u8fdb\u884c\u6392\u5e8f \u8fde\u63a5\u4e24\u4e2a\u6392\u5e8f\u8fc7\u7684\u8868\uff08\u4ece\u5934\u5230\u5c3e\u626b\u63cf\uff09 \u7406\u60f3\u60c5\u51b5\u4e0b\uff08\u6bcf\u4e2a\u5757\u53ea\u9700\u8981\u8bfb\u8fdb\u5185\u5b58\u4e00\u6b21\uff09 block transfers: \\(b_r + b_s\\) +(\u6392\u5e8f) seek times: \\(\\lceil b_r/b_b\\rceil + \\lceil b_s/b_b\\rceil\\) +(\u6392\u5e8f) (5) Hash-Join \u5927\u81f4\u6d41\u7a0b\u5982\u4e0b \u5c06r\u5212\u5206\u6210nh\u4e2a\u5757 \u5c06s\u5212\u5206\u6210nh\u4e2a\u5757 for 0 to nh-1 \u5bf9r\u5bf9\u5e94\u5757\u4e2d\u7684\u5143\u7d20\u5efa\u7acb\u7d22\u5f15Ri for \u904d\u5386s\u5bf9\u5e94\u5757\u4e2d\u7684\u5143\u7d20 \u68c0\u7d22\u7d22\u5f15Ri for \u6240\u6709\u5339\u914d\u7684tuple in r join end end end \u5047\u8bber,s\u5206\u522b\u88ab\u5212\u5206\u4e86 \\(n_r,n_s\\) \u4e2a\u5757\uff0c\u4f46\u5f53 \\(n_r,n_s>M\\) \u8d85\u8fc7\u5185\u5b58\u7684\u5bb9\u7eb3\u7a7a\u95f4\u65f6\uff0c\u5219\u9700\u8981\u8fdb\u884c\u9012\u5f52\u5212\u5206\u3002 \u82e5\u6ca1\u6709\u9012\u5f52\u5212\u5206 block transfer: \\(3(b_r+b_s)+4n_h\\) \u5212\u5206\u8fc7\u7a0b\u9700\u8981\u904d\u5386\u8868\uff0c\u5305\u542b\u8bfb\u51fa\u548c\u5199\u56de \\(2*(b_r+b_s)\\) \u5339\u914d\u8fc7\u7a0b\u9700\u8981\u904d\u5386\u8868\uff0c\u53ea\u5305\u542b\u8bfb\u51fa \\(b_r+b_s\\) \u4f46\u662f\u82e5Hash\u8868\u975e\u6ee1\uff0c\u5219\u81f3\u591a\u5236\u9020\u51fa \\(n_h\\) \u4e2a\u975e\u6ee1\u5757\uff0c\u6d89\u53ca\u5212\u5206\u7684\u5199\u56de\u548c\u5339\u914d\u7684\u8bfb\u51fa\uff0c\u4f5c\u7528\u4e8e\u4e24\u4e2a\u8868\uff0c\u6545\u5171 \\(4n_h\\) (\u5b9e\u9645\u4e2d \\(n_h\\) \u4e00\u822c\u5f88\u5c0f\uff0c\u53ef\u4ee5\u5ffd\u7565\u4e0d\u8ba1) seek times: \\(2(\\lceil b_r/b_b\\rceil +\\lceil b_s/b_b\\rceil)+2n_h\\) \u5212\u5206\u8fc7\u7a0b\u9700\u8981\u904d\u5386\u8868\uff0c\u5047\u8bbe\u6bcf\u6b21\u653e\u5165\u5185\u5b58\u5757\u4e2d \\(b_b\\) \u4e2a\uff0c\u5219\u8bfb\u51fa\u5199\u56de\u5171\u9700 \\(2(\\lceil b_r/b_b\\rceil +\\lceil b_s/b_b\\rceil)\\) \u6b21 \u5339\u914d\u8fc7\u7a0b\u4e2d\u76f4\u63a5\u53d6Hash\u5757\uff0c\u5171 \\(2n_h\\) \u82e5\u6709\u9012\u5f52\u5212\u5206 \u9012\u5f52\u5212\u5206\u7684\u539f\u5219\u662f\uff0c\u6bcf\u6b21\u5c06\u5212\u5206\u7684\u5927\u5c0f\u964d\u4e3a\u539f\u6765\u7684 \\(M-1\\) \uff0c\u76f4\u81f3\u6bcf\u4e2a\u5212\u5206\u7684\u6700\u591a\u5360 \\(M\\) \u5757\u4e3a\u6b62\uff08\u4f7f\u5f97\u5185\u5b58\u80fd\u591f\u5bb9\u7eb3\u4e0b\uff0c\u4ee5\u4fbf\u4e8e\u5efa\u7acb\u7d22\u5f15\uff09 block transfer: \\(2(b_r+b_s)\\lceil log_{M-1}(b_s)-1\\rceil+b_r+b_n\\) \u5171\u8fdb\u884c \\(\\lceil log_{M-1}(b_s)-1\\rceil\\) \u8f6e \u5176\u4f59\u53c2\u7167\u6ca1\u6709\u9012\u5f52\u5212\u5206\u7684\u60c5\u51b5 seek times: \\(2(\\lceil b_r/b_b\\rceil +\\lceil b_s/b_b\\rceil)\\lceil log_{M-1}(b_s)-1\\rceil+2n_h\\) \u5171\u8fdb\u884c \\(\\lceil log_{M-1}(b_s)-1\\rceil\\) \u8f6e \u5176\u4f59\u53c2\u7167\u6ca1\u6709\u9012\u5f52\u5212\u5206\u7684\u60c5\u51b5","title":"Join"},{"location":"course/db/query/#evaluation","text":"\u5bf9\u4e00\u4e9b\u5355\u64cd\u4f5c\u7684\u590d\u6742\u5ea6\u6709\u4e86\u89e3\u4e4b\u540e\uff0c\u53ef\u4ee5\u4f7f\u7528\u7269\u5316(Materialization)\u548c\u6d41\u6c34(pipelining)\u7684\u65b9\u6cd5\u5c06\u4ed6\u4eec\u4e32\u8d77\u6765 \u5b9e\u4f53\u5316\uff1a\u4f9d\u6b21\u8fdb\u884c\u8868\u8fbe\u5f0f\u7684\u8ba1\u7b97\uff0c\u6784\u5efa\u524d\u7f00\u6811\u9012\u5f52\u8fdb\u884c \u6d41\u6c34\u7ebf\uff1a\u540c\u65f6\u8bc4\u4f30\u591a\u4e2a\u64cd\u4f5c","title":"Evaluation"},{"location":"course/db/query/#optimization","text":"","title":"Optimization"},{"location":"course/db/query/#equivalence-rule","text":"Conjunctive selection operations can be deconstructed into a sequence of indicidual selections \\(\\sigma_{\\theta_1\\land\\theta_2}(E)=\\sigma_{\\theta_1}(\\sigma_{\\theta_2}(E))\\) Selection operations are commutative \\(\\sigma_{\\theta_1}(\\sigma_{\\theta_2}(E)) = \\sigma_{\\theta_2}(\\sigma_{\\theta_1}(E))\\) Only the last in a sequence of projection operations is needed, the others can be ommitted. \\(\\Pi_{L_1}(\\Pi_{L_2}(...(\\Pi_{L_n}(E))...))=\\Pi_{L_1}(E)\\) Selections can be combined with Cartesian products and theta joins. (1) \\(\\sigma_{\\theta}(E_1\\times E_2) = E_1 \\bowtie_\\theta E_2\\) (2) \\(\\sigma_{\\theta_1}(E_1\\bowtie_{\\theta_2} E_2)=E_1\\bowtie_{\\theta_1\\land\\theta_2}E_2\\) Theta-join operations (and natural joins) are commutative. \\(E_1\\bowtie_\\theta E_2 = E_2\\bowtie_\\theta E_1\\) Natural join operatins are associative \\((E_1\\bowtie E_2)\\bowtie E_3 = E_1\\bowtie(E_2\\bowtie E_3)\\) , Theta joins are associative in the following manner \\((E_1\\bowtie_{\\theta_1} E_2)\\bowtie_{\\theta_2\\land\\theta_3} E_3 = E_1\\bowtie_{\\theta_1\\land \\theta_3}(E_2\\bowtie_{\\theta_2} E_3)\\) , where \\(theta_2\\) involves attributes from only \\(E_2\\) and \\(E_3\\) . The selection operation distributes over the theta join operation under the following two conditions: (1) When all the attributes in \\(\\theta_0\\) involve only the attributes of one of the expressions ( \\(E_1\\) ) being joined \\(\\sigma_{\\theta_0}(E_1\\bowtie_{\\theta}E_2)=(\\sigma_{\\theta_0}(E_1))\\bowtie_\\theta E_2\\) (2) When \\(\\theta_1\\) involves only the attributes of \\(E_1\\) and \\(\\theta_2\\) involves only the attributes of \\(E_2\\) . \\(\\sigma_{\\theta_1\\land \\theta_2}(E_1\\bowtie_{\\theta}E_2)=(\\sigma_{\\theta_1}(E_1))\\bowtie_{\\theta}(\\sigma_{\\theta_2}(E_2))\\) The projetion operation distributes over the theta join operation as follows: (1) if \\(\\theta\\) involves only attributes from \\(L_1 \\cup L2\\) : \\(\\Pi_{L1\\cup L_2}(E_1\\bowtie_{\\theta}E_2)=(\\Pi_{L_1}(E_1))\\bowtie_{\\theta}(\\Pi_{L_2}(E_2))\\) (2) Consider a join \\(E_1\\bowtie_\\theta E_2\\) . (3) Let \\(L_1\\) and \\(L_2\\) be sets of attributes from \\(E_1\\) and \\(E_2\\) respectively (4) Let \\(L_3\\) be attributes of \\(E_1\\) that are involved in join condition \\(\\theta\\) , but are not in \\(L_1 \\cup L_2\\) (5) Let \\(L_4\\) be attributes of \\(E_2\\) that are involved in join condition \\(\\theta\\) , but are not in \\(L_1\\cup L_2\\) \\(\\Pi_{L_1\\cup L_2}(E_1\\bowtie_\\theta E_2)=\\Pi_{L_1\\cup L_2}((\\Pi_{L_1\\cup L_3}(E_1))\\bowtie_\\theta(\\Pi_{L2\\cup L_4}(E_2)))\\) The set operations union and intersection are commutative \\(E_1 \\cup E_2 = E_2 \\cup E_1\\) , \\(E_1\\cap E_2 = E_2 \\cap E_1\\) Set union and intersection are assocative \\((E_1\\cup E_2)\\cup E_3 = E_1 \\cup (E_2\\cup E_3)\\) , \\((E_1\\cap E_2)\\cap E_3=E_1\\cap(E_2\\cap E_3)\\) The selection operation distributes over \\(\\cap\\) , \\(\\cup\\) and \\(-\\) \\(\\sigma_\\theta(E_1-E_2)=\\sigma_\\theta(E_1)-\\sigma_\\theta(E_2)\\) The projection operation distributes over union \\(\\Pi_{L}(E_1\\cup E_2)=(\\Pi_L(E_1))\\cup (\\Pi_{L}(E_2))\\)","title":"Equivalence Rule(\u7b49\u4ef7\u5173\u7cfb\u8868\u8fbe\u5f0f)"},{"location":"course/db/query/#cost-estimation","text":"\u57fa\u672c\u6982\u5ff5 \\(n_r\\) : number of tuples in a relation \\(r\\) \\(b_r\\) : number of blocks containing tuples of \\(r\\) \\(l_r\\) : size of a tuple of \\(r\\) \\(f_r\\) : blocking factor of \\(r\\) \\(V(A,r)\\) : number of distinct values that appear in \\(r\\) for attribute \\(A\\) ; same as the size of \\(\\Pi_A(r)\\) \\(b_r=\\lceil \\frac{n_r}{f_r} \\rceil\\) \u7b97\u6cd5\u4f30\u8ba1 \u9009\u62e9\u4f30\u8ba1 \\(\\sigma_{A=v}(r)\\) \u4e00\u822c\u5047\u8bbe\u4e3a\u5747\u5300\u5206\u5e03 \\(n_r/V(A,r)\\) \u590d\u6742\u9009\u62e9\u4f30\u8ba1 \u5408\u53d6 \\(\\sigma_{\\theta_1\\land \\theta_2\\land\\dots\\land\\theta_n(r)}\\) : \\(n_r\\cdot\\frac{s_1\\cdot s_2\\dots s_n}{n_r^n}\\) \u6790\u53d6 \\(\\sigma_{\\theta_1\\lor \\theta_2\\lor\\dots\\lor\\theta_n(r)}\\) : \\(n_r\\cdot(1-(1-\\frac{s_1}{n_r})(1-\\frac{s_2}{n_r})\\dots(1-\\frac{s_n}{n_r}))\\) \u8fde\u63a5\u4f30\u8ba1 \\(r\\bowtie s\\) \u82e5\u4e24\u4e2a\u5173\u7cfb\u65e0\u5171\u540c\u5c5e\u6027: \\(n_r \u00b7 n_s\\) \u82e5\u5171\u540c\u5c5e\u6027\u662fr\u7684key: \\({\\rm size} \\le n_s\\) \u82e5\u5171\u540c\u5c5e\u6027\u662fs\u5230r\u7684foregin key: \\(n_r\\) \u82e5\u5171\u540c\u5c5e\u6027\u4e0d\u662fkey: \\(\\min(\\frac{n_s\\cdot n_r}{V(A,s)}, \\frac{n_s\\cdot n_r}{V(A,r)})\\) \u6295\u5f71: \\(\\Pi(s)\\) : \\(V(A,r)\\) \u805a\u5408: \\(\\mathcal{G}(s)\\) : \\(V(A,r)\\) \u96c6\u5408\uff1a\u8f6c\u6362\u4e3a\u5408\u53d6\u548c\u6790\u53d6 Heuristic Optimization \u63a2\u7d22\u5f0f\u7684\u4f18\u5316 \u5c3d\u65e9\u8fdb\u884cselection \u5c3d\u65e9\u8fdb\u884cprojection \u9009\u62e9\u6700\u4e25\u683c\u7684selection\u548coperations\u64cd\u4f5c","title":"Cost Estimation(\u7ed3\u679c\u96c6\u5927\u5c0f\u4f30\u8ba1)"},{"location":"course/db/storage/","text":"Database Storage Database\u7684\u5b58\u50a8\u7ed3\u6784\u53ef\u7531\u4e0b\u56fe\u6240\u793a\uff1a Buffer Manager \u901a\u8fc7\u5c06\u6570\u636e\u653e\u5230\u4e3b\u5b58(Memory)\u4e2d\u6765\u63d0\u9ad8\u8bbf\u95ee\u6548\u7387\u3002 buffer manager\uff1a\u7528\u4e8e\u7ba1\u7406\u7f13\u51b2\u533a\u4e2d\u7684\u5185\u5b58\u5206\u914d\u3002 \u6d89\u53ca\u5230buffer\u7684\u66ff\u6362\u7b97\u6cd5\u3002 LRU strategy\uff1a\u66ff\u6362\u6389\u6700\u8fd1\u4f7f\u7528\u9891\u7387\u6700\u4f4e\u7684block FIFO\uff1a\u5148\u8fdb\u5148\u51fa Random\uff1a\u968f\u673a\u66ff\u6362 Clock: LRU\u7684\u7ea6\u7b80\u7248\uff0c\u6709\u4e00\u4e2areference bit(second chance bit) \u5c06\u6570\u636e\u4ece\u4e3b\u5b58\u5199\u5165\u5916\u5b58\u540e\u624d\u7b97\u662f\u7a33\u5b9a\u5b58\u50a8\uff08\u6389\u7535\u4e0d\u5931\uff09\u3002 Column-Oriented Storage \u884c\u5b58\u50a8 (row-oriented representation)\u662f\u6700\u57fa\u672c\u7684\u5b58\u50a8\u65b9\u6cd5\uff0c\u5373\u5c06\u8868\u4e2d\u7684\u6570\u636e\u4e00\u6761\u4e00\u6761\u5b58\u50a8\u3002\u800c \u5217\u5b58\u50a8 (column-oriented Storage)\u5728\u6709\u65f6\u53ef\u4ee5\u53d1\u6325\u66f4\u5927\u7684\u529f\u6548\u3002\u5f53\u7136\u6709\u65f6\u5019\u53ef\u80fd\u4e5f\u4f1a\u91c7\u53d6\u884c\u5217\u6df7\u5408\u5b58\u50a8\u7684\u65b9\u5f0f\uff08hybrid row/column stores\uff09\u3002\u5217\u5b58\u50a8\u65b9\u5f0f\u5982\u4e0b\u56fe\u6240\u793a\uff1a Benefit Reduced IO if only some attributes are accessed Improved CPU cache performance Improved compression Vector processing on modern CPU architectures Drawbacks Cost of tuple reconstruction from columnar representation Cost of tuple deletion and update Cost of decompression \u884c\u5b58\u50a8&\u5217\u5b58\u50a8\u5bf9\u6bd4","title":"Database Storage"},{"location":"course/db/storage/#database-storage","text":"Database\u7684\u5b58\u50a8\u7ed3\u6784\u53ef\u7531\u4e0b\u56fe\u6240\u793a\uff1a","title":"Database Storage"},{"location":"course/db/storage/#buffer-manager","text":"\u901a\u8fc7\u5c06\u6570\u636e\u653e\u5230\u4e3b\u5b58(Memory)\u4e2d\u6765\u63d0\u9ad8\u8bbf\u95ee\u6548\u7387\u3002 buffer manager\uff1a\u7528\u4e8e\u7ba1\u7406\u7f13\u51b2\u533a\u4e2d\u7684\u5185\u5b58\u5206\u914d\u3002 \u6d89\u53ca\u5230buffer\u7684\u66ff\u6362\u7b97\u6cd5\u3002 LRU strategy\uff1a\u66ff\u6362\u6389\u6700\u8fd1\u4f7f\u7528\u9891\u7387\u6700\u4f4e\u7684block FIFO\uff1a\u5148\u8fdb\u5148\u51fa Random\uff1a\u968f\u673a\u66ff\u6362 Clock: LRU\u7684\u7ea6\u7b80\u7248\uff0c\u6709\u4e00\u4e2areference bit(second chance bit) \u5c06\u6570\u636e\u4ece\u4e3b\u5b58\u5199\u5165\u5916\u5b58\u540e\u624d\u7b97\u662f\u7a33\u5b9a\u5b58\u50a8\uff08\u6389\u7535\u4e0d\u5931\uff09\u3002","title":"Buffer Manager"},{"location":"course/db/storage/#column-oriented-storage","text":"\u884c\u5b58\u50a8 (row-oriented representation)\u662f\u6700\u57fa\u672c\u7684\u5b58\u50a8\u65b9\u6cd5\uff0c\u5373\u5c06\u8868\u4e2d\u7684\u6570\u636e\u4e00\u6761\u4e00\u6761\u5b58\u50a8\u3002\u800c \u5217\u5b58\u50a8 (column-oriented Storage)\u5728\u6709\u65f6\u53ef\u4ee5\u53d1\u6325\u66f4\u5927\u7684\u529f\u6548\u3002\u5f53\u7136\u6709\u65f6\u5019\u53ef\u80fd\u4e5f\u4f1a\u91c7\u53d6\u884c\u5217\u6df7\u5408\u5b58\u50a8\u7684\u65b9\u5f0f\uff08hybrid row/column stores\uff09\u3002\u5217\u5b58\u50a8\u65b9\u5f0f\u5982\u4e0b\u56fe\u6240\u793a\uff1a","title":"Column-Oriented Storage"},{"location":"course/db/storage/#benefit","text":"Reduced IO if only some attributes are accessed Improved CPU cache performance Improved compression Vector processing on modern CPU architectures","title":"Benefit"},{"location":"course/db/storage/#drawbacks","text":"Cost of tuple reconstruction from columnar representation Cost of tuple deletion and update Cost of decompression","title":"Drawbacks"},{"location":"course/db/storage/#_1","text":"","title":"\u884c\u5b58\u50a8&amp;\u5217\u5b58\u50a8\u5bf9\u6bd4"},{"location":"course/db/index/","text":"db Database Index \u6982\u8ff0 \u6570\u636e\u5e93\u7d22\u5f15\u662f\u4e3a\u4e86\u4fbf\u4e8e\u5728\u5404\u6837\u7684\u64cd\u4f5c\u4e2d\u5b9a\u4f4d\u6240\u9700\u7684\u6570\u636e\u9879\u3002\u6839\u636e\u7d22\u5f15\u65b9\u5f0f\u53ef\u5206\u4e3a\u987a\u5e8f\u7d22\u5f15\u3001\u6563\u5217\u7d22\u5f15\u7b49\u3002 \u987a\u5e8f\u7d22\u5f15(ordered indices) \u987e\u540d\u601d\u4e49\uff0c\u5c31\u662f\u5bf9\u6570\u636e\u8fdb\u884c\u987a\u5e8f\u7684\u7d22\u5f15\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u4e0a\u9762\u8fd9\u6837\u7684\u4e00\u4e00\u5bf9\u5e94\u5173\u7cfb\uff0c\u53c8\u88ab\u79f0\u4e3a \u7a20\u5bc6\u7d22\u5f15 (Cluster Index)\u3002 \u5982\u679c\u6070\u597d\u6570\u636e\u672c\u8eab\u5c31\u662f\u4f9d\u7167\u8fd9\u4e2a\u7d22\u5f15\u987a\u5e8f\u6392\u5217\u7684\uff0c\u90a3\u4e48\u8fd9\u4e2a\u7d22\u5f15\u4e5f\u88ab\u79f0\u4e3a \u4e3b\u7d22\u5f15 (\u805a\u96c6\u7d22\u5f15)(Primary Index)\uff1b\u53cd\u4e4b\uff0c\u5219\u4e3a \u8f85\u52a9\u7d22\u5f15 (\u975e\u805a\u96c6\u7d22\u5f15)(Secondary Index)\uff0c\u6bd4\u5982\u4e0b\u56fe\uff1a \u5bf9\u4e8e \u4e3b\u7d22\u5f15 \uff0c\u6211\u4eec\u53ef\u4ee5\u91c7\u53d6 \u7a00\u758f\u7d22\u5f15 (Dense Index)\u7684\u65b9\u5f0f\u8282\u7701\u7d22\u5f15\u7a7a\u95f4\uff1a \u4f46\u6709\u65f6\uff0c\u76f4\u63a5\u7a20\u5bc6\u7d22\u5f15\u4e0d\u80fd\u88ab\u76f4\u63a5\u653e\u5728Memory\u4e2d\uff08\u56e0\u4e3a\u592a\u5927\u4e86\uff09\uff0c\u6240\u4ee5\u9700\u8981\u91c7\u7528 \u591a\u7ea7\u7d22\u5f15 *(Multilevel Index)\u7684\u65b9\u5f0f\u3002\u5206\u4e3aouter index\u548cinner index\u3002 B+\u6811\u7d22\u5f15 \u5b9e\u9645\u4e0aB+\u6811\u7d22\u5f15\u4e5f\u5c5e\u4e8e\u987a\u5e8f\u7d22\u5f15\u3002\u987e\u540d\u601d\u4e49\uff0c\u5c31\u662f\u5229\u7528B+\u6811\u5efa\u7acb\u7d22\u5f15\uff0cB+\u6811\u7684\u5185\u5bb9\u53ef\u4ee5\u53c2\u8003 B+ Tree \u3002 \u5728\u5b9e\u9645\u7684\u5de5\u4e1a\u5e94\u7528\u4e2d\uff0c B+ Tree \u5f80\u5f80\u4f1a\u548c LSM Tree \u7ed3\u5408\u4f7f\u7528\uff0c\u4ee5\u51cf\u5c11\u5728Disk\u4e2d\u53cd\u590d\u64cd\u4f5c\u7684overhead\uff08\u5199\u4f18\u5316\uff09\u3002 \u6563\u5217\u7d22\u5f15 \u4f7f\u7528Hash\u8868\u8fdb\u884c\u7d22\u5f15\u3002","title":"Index"},{"location":"course/db/index/#db","text":"","title":"db"},{"location":"course/db/index/#database-index","text":"","title":"Database Index"},{"location":"course/db/index/#_1","text":"\u6570\u636e\u5e93\u7d22\u5f15\u662f\u4e3a\u4e86\u4fbf\u4e8e\u5728\u5404\u6837\u7684\u64cd\u4f5c\u4e2d\u5b9a\u4f4d\u6240\u9700\u7684\u6570\u636e\u9879\u3002\u6839\u636e\u7d22\u5f15\u65b9\u5f0f\u53ef\u5206\u4e3a\u987a\u5e8f\u7d22\u5f15\u3001\u6563\u5217\u7d22\u5f15\u7b49\u3002","title":"\u6982\u8ff0"},{"location":"course/db/index/#ordered-indices","text":"\u987e\u540d\u601d\u4e49\uff0c\u5c31\u662f\u5bf9\u6570\u636e\u8fdb\u884c\u987a\u5e8f\u7684\u7d22\u5f15\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u4e0a\u9762\u8fd9\u6837\u7684\u4e00\u4e00\u5bf9\u5e94\u5173\u7cfb\uff0c\u53c8\u88ab\u79f0\u4e3a \u7a20\u5bc6\u7d22\u5f15 (Cluster Index)\u3002 \u5982\u679c\u6070\u597d\u6570\u636e\u672c\u8eab\u5c31\u662f\u4f9d\u7167\u8fd9\u4e2a\u7d22\u5f15\u987a\u5e8f\u6392\u5217\u7684\uff0c\u90a3\u4e48\u8fd9\u4e2a\u7d22\u5f15\u4e5f\u88ab\u79f0\u4e3a \u4e3b\u7d22\u5f15 (\u805a\u96c6\u7d22\u5f15)(Primary Index)\uff1b\u53cd\u4e4b\uff0c\u5219\u4e3a \u8f85\u52a9\u7d22\u5f15 (\u975e\u805a\u96c6\u7d22\u5f15)(Secondary Index)\uff0c\u6bd4\u5982\u4e0b\u56fe\uff1a \u5bf9\u4e8e \u4e3b\u7d22\u5f15 \uff0c\u6211\u4eec\u53ef\u4ee5\u91c7\u53d6 \u7a00\u758f\u7d22\u5f15 (Dense Index)\u7684\u65b9\u5f0f\u8282\u7701\u7d22\u5f15\u7a7a\u95f4\uff1a \u4f46\u6709\u65f6\uff0c\u76f4\u63a5\u7a20\u5bc6\u7d22\u5f15\u4e0d\u80fd\u88ab\u76f4\u63a5\u653e\u5728Memory\u4e2d\uff08\u56e0\u4e3a\u592a\u5927\u4e86\uff09\uff0c\u6240\u4ee5\u9700\u8981\u91c7\u7528 \u591a\u7ea7\u7d22\u5f15 *(Multilevel Index)\u7684\u65b9\u5f0f\u3002\u5206\u4e3aouter index\u548cinner index\u3002","title":"\u987a\u5e8f\u7d22\u5f15(ordered indices)"},{"location":"course/db/index/#b","text":"\u5b9e\u9645\u4e0aB+\u6811\u7d22\u5f15\u4e5f\u5c5e\u4e8e\u987a\u5e8f\u7d22\u5f15\u3002\u987e\u540d\u601d\u4e49\uff0c\u5c31\u662f\u5229\u7528B+\u6811\u5efa\u7acb\u7d22\u5f15\uff0cB+\u6811\u7684\u5185\u5bb9\u53ef\u4ee5\u53c2\u8003 B+ Tree \u3002 \u5728\u5b9e\u9645\u7684\u5de5\u4e1a\u5e94\u7528\u4e2d\uff0c B+ Tree \u5f80\u5f80\u4f1a\u548c LSM Tree \u7ed3\u5408\u4f7f\u7528\uff0c\u4ee5\u51cf\u5c11\u5728Disk\u4e2d\u53cd\u590d\u64cd\u4f5c\u7684overhead\uff08\u5199\u4f18\u5316\uff09\u3002","title":"B+\u6811\u7d22\u5f15"},{"location":"course/db/index/#_2","text":"\u4f7f\u7528Hash\u8868\u8fdb\u884c\u7d22\u5f15\u3002","title":"\u6563\u5217\u7d22\u5f15"},{"location":"course/db/index/Bplus/","text":"B+ Tree \u57fa\u672c\u6982\u5ff5 \u975e\u9875\u8282\u70b9\u6709 \\(\\lceil n/2\\rceil \\sim n\\) \u4e2a\u5b50\u8282\u70b9\uff0c\u53f6\u8282\u70b9\u6709 \\(\\lceil(n-1)/2\\rceil \\sim n-1\\) \u4e2a\u503c\u3002 \u652f\u6301\u64cd\u4f5c\uff1a\u589e\u5220\u67e5\u6539\uff08\u5177\u4f53\u89c1ADS\u4e2dB+\u6811\u7684\u5404\u79cd\u64cd\u4f5c\uff09\uff0c\u590d\u6742\u5ea6\u4e3a \\(\\log{N}\\) Bottom up B+ tree Build \u5bf9\u4e8e\u4e00\u4e2a\u5e8f\u5217\uff0c\u82e5\u8981\u5c06\u5176\u6784\u5efa\u6210B+\u6811\uff0c\u9700\u8981\u7ecf\u8fc7\u4ee5\u4e0b\u6d41\u7a0b \u5bf9\u5e8f\u5217\u8fdb\u884c\u6392\u5e8f \u5bf9\u5e8f\u5217\u8fdb\u884c\u5212\u5206\uff08\u6839\u636eB+\u6811\u7684\u652f\u6301\u5757\u5927\u5c0f\u8fdb\u884c\u5212\u5206\uff09\u6bd4\u5982\u5bf9\u4e8e\u652f\u6301n=4\u7684B+\u6811\uff0c\u6392\u5e8f\u957f\u5ea6\u4e3a13\u7684\u5e8f\u5217\uff0c\u5219\u5212\u5206\u4e3a4+4+3+2(\u6700\u540e\u4e24\u5757\u4e0d\u80fd\u662f4+1\uff0c\u56e0\u4e3a \\(1<\\lceil (4-1)/2\\rceil\\) ) \u6784\u5efa\u5b8c\u6700\u5e95\u5c42\u4e4b\u540e\uff0c\u518d\u4ece\u4e0b\u81f3\u4e0a\u6784\u5efa \u5199\u5165\u78c1\u76d8\uff08seek\u4e00\u6b21\uff0c\u7136\u540e\u987a\u5e8f\u5199\u5165\uff09 \u5408\u5e76B+\u6811 \u5982\u679c\u8981\u5408\u5e76\u4e24\u4e2aB+\u6811\uff0c\u6d41\u7a0b\u5982\u4e0b \u4ece\u78c1\u76d8\u4e2d\u8bfb\u53d6B+\u6811\u7684\u53f6\u5b50\u8282\u70b9\uff08seek\u4e00\u6b21\uff0c\u7136\u540e\u987a\u5e8f\u8bfb\u51fa\uff0c\u56e0\u4e3a\u53f6\u5b50\u8282\u70b9\u662f\u8fde\u7eed\u5b58\u50a8\u7684\uff09 \u5408\u5e76\u6709\u5e8f\u5e8f\u5217 \u91cd\u590dBottom up B+ tree build\u7684\u64cd\u4f5c","title":"B+ Tree"},{"location":"course/db/index/Bplus/#b-tree","text":"","title":"B+ Tree"},{"location":"course/db/index/Bplus/#_1","text":"\u975e\u9875\u8282\u70b9\u6709 \\(\\lceil n/2\\rceil \\sim n\\) \u4e2a\u5b50\u8282\u70b9\uff0c\u53f6\u8282\u70b9\u6709 \\(\\lceil(n-1)/2\\rceil \\sim n-1\\) \u4e2a\u503c\u3002 \u652f\u6301\u64cd\u4f5c\uff1a\u589e\u5220\u67e5\u6539\uff08\u5177\u4f53\u89c1ADS\u4e2dB+\u6811\u7684\u5404\u79cd\u64cd\u4f5c\uff09\uff0c\u590d\u6742\u5ea6\u4e3a \\(\\log{N}\\)","title":"\u57fa\u672c\u6982\u5ff5"},{"location":"course/db/index/Bplus/#bottom-up-b-tree-build","text":"\u5bf9\u4e8e\u4e00\u4e2a\u5e8f\u5217\uff0c\u82e5\u8981\u5c06\u5176\u6784\u5efa\u6210B+\u6811\uff0c\u9700\u8981\u7ecf\u8fc7\u4ee5\u4e0b\u6d41\u7a0b \u5bf9\u5e8f\u5217\u8fdb\u884c\u6392\u5e8f \u5bf9\u5e8f\u5217\u8fdb\u884c\u5212\u5206\uff08\u6839\u636eB+\u6811\u7684\u652f\u6301\u5757\u5927\u5c0f\u8fdb\u884c\u5212\u5206\uff09\u6bd4\u5982\u5bf9\u4e8e\u652f\u6301n=4\u7684B+\u6811\uff0c\u6392\u5e8f\u957f\u5ea6\u4e3a13\u7684\u5e8f\u5217\uff0c\u5219\u5212\u5206\u4e3a4+4+3+2(\u6700\u540e\u4e24\u5757\u4e0d\u80fd\u662f4+1\uff0c\u56e0\u4e3a \\(1<\\lceil (4-1)/2\\rceil\\) ) \u6784\u5efa\u5b8c\u6700\u5e95\u5c42\u4e4b\u540e\uff0c\u518d\u4ece\u4e0b\u81f3\u4e0a\u6784\u5efa \u5199\u5165\u78c1\u76d8\uff08seek\u4e00\u6b21\uff0c\u7136\u540e\u987a\u5e8f\u5199\u5165\uff09","title":"Bottom up B+ tree Build"},{"location":"course/db/index/Bplus/#b","text":"\u5982\u679c\u8981\u5408\u5e76\u4e24\u4e2aB+\u6811\uff0c\u6d41\u7a0b\u5982\u4e0b \u4ece\u78c1\u76d8\u4e2d\u8bfb\u53d6B+\u6811\u7684\u53f6\u5b50\u8282\u70b9\uff08seek\u4e00\u6b21\uff0c\u7136\u540e\u987a\u5e8f\u8bfb\u51fa\uff0c\u56e0\u4e3a\u53f6\u5b50\u8282\u70b9\u662f\u8fde\u7eed\u5b58\u50a8\u7684\uff09 \u5408\u5e76\u6709\u5e8f\u5e8f\u5217 \u91cd\u590dBottom up B+ tree build\u7684\u64cd\u4f5c","title":"\u5408\u5e76B+\u6811"},{"location":"course/db/index/lsm/","text":"LSM Tree \u57fa\u672c\u6982\u5ff5 \u4e00\u79cd\u5199\u4f18\u5316\u7684\u5b58\u50a8\u7ed3\u6784 \u91c7\u53d6\u5206\u5c42\u5b58\u50a8\u7684\u7ed3\u6784 \u76f8\u6bd4\u4e8eB+\u6811\uff0c\u5b83\u5728\u603b\u80fd\u4fdd\u6301\u5728\u5185\u5b58\u4e2d\u5199 \u5177\u4f53\u7b56\u7565 Memory\u7684 \\(L_0\\) \u5c42\u6ee1\u4e4b\u540e\uff0c\u76f4\u63a5\u5199\u5165Disk\u4e2d\u7684 \\(L_0^1\\) \u5c42\uff08\u53ea\u9700\u8981\u4e00\u6b21\u7684seek\u5373\u53ef\uff09\uff1b \u5f53Disk\u7684 \\(L_0\\) \u5c42\u6ee1\u65f6\uff0c\u9700\u8981\u5408\u5e76(Compaction) \\(L_0\\) \u5c42\u6240\u6709\u7684\u6811\uff0c\u7136\u540e\u518d\u5199\u5165 \\(L_1\\) \u5c42\uff1b \u5f53\u6d89\u53ca\u66f4\u65b0/\u5220\u9664\u64cd\u4f5c\u65f6\uff0c\u540c\u6837\u5316\u4e3a\u63d2\u5165\u64cd\u4f5c\u6267\u884c\u63d2\u5165\u3002\u5e76\u5728Compaction\u65f6\u6b63\u5f0f\u6267\u884c\u3002","title":"LSM Tree"},{"location":"course/db/index/lsm/#lsm-tree","text":"","title":"LSM Tree"},{"location":"course/db/index/lsm/#_1","text":"\u4e00\u79cd\u5199\u4f18\u5316\u7684\u5b58\u50a8\u7ed3\u6784 \u91c7\u53d6\u5206\u5c42\u5b58\u50a8\u7684\u7ed3\u6784 \u76f8\u6bd4\u4e8eB+\u6811\uff0c\u5b83\u5728\u603b\u80fd\u4fdd\u6301\u5728\u5185\u5b58\u4e2d\u5199","title":"\u57fa\u672c\u6982\u5ff5"},{"location":"course/db/index/lsm/#_2","text":"Memory\u7684 \\(L_0\\) \u5c42\u6ee1\u4e4b\u540e\uff0c\u76f4\u63a5\u5199\u5165Disk\u4e2d\u7684 \\(L_0^1\\) \u5c42\uff08\u53ea\u9700\u8981\u4e00\u6b21\u7684seek\u5373\u53ef\uff09\uff1b \u5f53Disk\u7684 \\(L_0\\) \u5c42\u6ee1\u65f6\uff0c\u9700\u8981\u5408\u5e76(Compaction) \\(L_0\\) \u5c42\u6240\u6709\u7684\u6811\uff0c\u7136\u540e\u518d\u5199\u5165 \\(L_1\\) \u5c42\uff1b \u5f53\u6d89\u53ca\u66f4\u65b0/\u5220\u9664\u64cd\u4f5c\u65f6\uff0c\u540c\u6837\u5316\u4e3a\u63d2\u5165\u64cd\u4f5c\u6267\u884c\u63d2\u5165\u3002\u5e76\u5728Compaction\u65f6\u6b63\u5f0f\u6267\u884c\u3002","title":"\u5177\u4f53\u7b56\u7565"},{"location":"course/db/sql/","text":"db Relational Model \u57fa\u672c\u7ed3\u6784 \u4e00\u5f20\u8868\u5bf9\u5e94\u4e00\u4e2a\u5173\u7cfb(relation)\uff0c\u884c\u5bf9\u5e94\u5143\u7ec4(tuple)\uff0c\u5217\u5bf9\u5e94\u5c5e\u6027(attribute) \u7801 key Let \\(K \\subseteq R\\) \\(K\\) is a superkey of \\(R\\) is values for \\(K\\) are sufficient to identify a unique tuple of each possible relation \\(K\\) is a condidate key is \\(K\\) is minial superkey \\(K\\) is a primary key , if K is a candidate key and is defined by user explicitly Foreign key Assume there exists relations \\(r\\) and \\(s\\) : \\(r(A,B,C)\\) , \\(s(B,D)\\) , we can say that attribute \\(B\\) in relation \\(r\\) is foreign key referencing \\(s\\) , and \\(r\\) is a referencing relation, and \\(s\\) is a referenced relation. \u5173\u7cfb\u4ee3\u6570 \u5173\u7cfb\u4ee3\u6570\u662fRelational Model\u7684\u6570\u5b66\u57fa\u7840\uff0c\u8be6\u89c1 Relational algebra SQL SQL\uff1a\u7ed3\u6784\u5316\u67e5\u8be2\u8bed\u8a00\uff0c\u5206\u4e3aDDL,DML,DCL\u51e0\u79cd\u7c7b\u578b\uff0c\u8be6\u89c1 SQL","title":"Index"},{"location":"course/db/sql/#db","text":"","title":"db"},{"location":"course/db/sql/#relational-model","text":"","title":"Relational Model"},{"location":"course/db/sql/#_1","text":"\u4e00\u5f20\u8868\u5bf9\u5e94\u4e00\u4e2a\u5173\u7cfb(relation)\uff0c\u884c\u5bf9\u5e94\u5143\u7ec4(tuple)\uff0c\u5217\u5bf9\u5e94\u5c5e\u6027(attribute) \u7801 key Let \\(K \\subseteq R\\) \\(K\\) is a superkey of \\(R\\) is values for \\(K\\) are sufficient to identify a unique tuple of each possible relation \\(K\\) is a condidate key is \\(K\\) is minial superkey \\(K\\) is a primary key , if K is a candidate key and is defined by user explicitly Foreign key Assume there exists relations \\(r\\) and \\(s\\) : \\(r(A,B,C)\\) , \\(s(B,D)\\) , we can say that attribute \\(B\\) in relation \\(r\\) is foreign key referencing \\(s\\) , and \\(r\\) is a referencing relation, and \\(s\\) is a referenced relation.","title":"\u57fa\u672c\u7ed3\u6784"},{"location":"course/db/sql/#_2","text":"\u5173\u7cfb\u4ee3\u6570\u662fRelational Model\u7684\u6570\u5b66\u57fa\u7840\uff0c\u8be6\u89c1 Relational algebra","title":"\u5173\u7cfb\u4ee3\u6570"},{"location":"course/db/sql/#sql","text":"SQL\uff1a\u7ed3\u6784\u5316\u67e5\u8be2\u8bed\u8a00\uff0c\u5206\u4e3aDDL,DML,DCL\u51e0\u79cd\u7c7b\u578b\uff0c\u8be6\u89c1 SQL","title":"SQL"},{"location":"course/db/sql/algebra/","text":"Relational Algebra \u57fa\u672c\u64cd\u4f5c \u64cd\u4f5c \u8868\u8fbe\u5f0f \u542b\u4e49 \u9009\u62e9 \\(\\sigma_p(r)\\) \u8fd4\u56de\u5173\u7cfb \\(r\\) \u4e2d\u6ee1\u8db3\u5173\u7cfb\u5f0f \\(p\\) \u7684\u5143\u7ec4\u7684\u5173\u7cfb \u6295\u5f71 \\(\\Pi_{A_1,A_2,\\dots,A_k(r)}\\) \u8fd4\u56de\u5173\u7cfb \\(r\\) \u4e2d\u5c5e\u6027\u4e3a \\(A_1,A_2,\\dots,A_k\\) \u7684\u5217\u5e76 \u53bb\u91cd \u96c6\u5408\u5e76 \\(r\\cup s\\) \u5c06\u4e24\u4e2a\u5c5e\u6027\u6570\u76f8\u7b49\u4e14\u6240\u6709\u5c5e\u6027\u7684\u57df\u76f8\u540c\u7684\u4e24\u4e2a\u5173\u7cfb\u5408\u5e76\u4e3a\u540c\u4e00\u4e2a\u5173\u7cfb\uff0c\u5e76 \u53bb\u91cd \u96c6\u5408\u5dee \\(r-s\\) \u8fd4\u56de\u5c5e\u4e8e\u5173\u7cfb \\(r\\) \u5374\u4e0d\u51fa\u73b0\u5728\u5173\u7cfb \\(s\\) \u4e2d\u7684\u5143\u7ec4\u7684\u5173\u7cfb \u7b1b\u5361\u5c14\u79ef \\(r\\times s\\) \u8fd4\u56de\u4efb\u610f\u4e24\u4e2a\u5173\u7cfb\u7684\u5143\u7ec4\u7ec4\u5408\uff08\u4e24\u4e2a\u5173\u7cfb\u7684\u5c5e\u6027\u5e94\u4e0d\u76f8\u4ea4\uff0c\u5426\u5219\u5e94\u91cd\u547d\u540d\uff09 \u91cd\u547d\u540d \\(\\rho_{x}(E)\\) \u5c06 \\(E\\) \u91cd\u547d\u540d\u4e3a \\(x\\) \u5e76\u8fd4\u56de \u62d3\u5c55\u64cd\u4f5c \u64cd\u4f5c \u8868\u8fbe\u5f0f \u542b\u4e49 \u96c6\u5408\u4ea4 \\(r\\cap s\\) \u53d6\u540c\u65f6\u51fa\u73b0\u5728\u4e24\u4e2a\u5173\u7cfb\u4e2d\u7684\u5143\u7ec4\uff0c\u53ef\u8f6c\u5316\u4e3a \\(r-(r-s)\\) \u81ea\u7136\u8fde\u63a5 \\(r\\bowtie s\\) \u53d6\u4e24\u4e2a\u5173\u7cfb\u516c\u5171\u5c5e\u6027\u4e2d\u5177\u6709 \u76f8\u540c\u5c5e\u6027\u503c \u7684\u5143\u7ec4\u8fdb\u884c\u62fc\u63a5 theta\u8fde\u63a5 \\(r\\bowtie_\\theta s\\) \u8fd4\u56de\u6ee1\u8db3\u5173\u7cfb\u5f0f \\(\\theta\\) \u7684\u81ea\u7136\u8fde\u63a5\u7ed3\u679c \u9664 \\(r\\div s\\) \\(r\\div s =\\{t \\vert t\\in\\Pi_{R-S}(r)\\cap \\forall u \\in s(tu\\in r)\\}\\) \u805a\u96c6 \\(_{G_1,G_2,\\dots, G_n}\\ \\mathcal{G}_{F_1(A_1),F_2(A_2),\\dots,F_n(A_n)}(r)\\) \\(G_i\\) \u662f\u7528\u4e8e\u5206\u7ec4\u7684\u5c5e\u6027\uff0c \\(F_i\\) \u662f\u805a\u96c6\u51fd\u6570\uff0c \\(A_i\\) \u662f\u5c5e\u6027\u540d \u8d4b\u503c \\(r\\leftarrow s\\) \u5c06\u53f3\u8fb9\u7684\u8ba1\u7b97\u7ed3\u679c\u8d4b\u503c\u7ed9\u5de6\u8fb9\u7684\u8868","title":"Relational Algebra"},{"location":"course/db/sql/algebra/#relational-algebra","text":"","title":"Relational Algebra"},{"location":"course/db/sql/algebra/#_1","text":"\u64cd\u4f5c \u8868\u8fbe\u5f0f \u542b\u4e49 \u9009\u62e9 \\(\\sigma_p(r)\\) \u8fd4\u56de\u5173\u7cfb \\(r\\) \u4e2d\u6ee1\u8db3\u5173\u7cfb\u5f0f \\(p\\) \u7684\u5143\u7ec4\u7684\u5173\u7cfb \u6295\u5f71 \\(\\Pi_{A_1,A_2,\\dots,A_k(r)}\\) \u8fd4\u56de\u5173\u7cfb \\(r\\) \u4e2d\u5c5e\u6027\u4e3a \\(A_1,A_2,\\dots,A_k\\) \u7684\u5217\u5e76 \u53bb\u91cd \u96c6\u5408\u5e76 \\(r\\cup s\\) \u5c06\u4e24\u4e2a\u5c5e\u6027\u6570\u76f8\u7b49\u4e14\u6240\u6709\u5c5e\u6027\u7684\u57df\u76f8\u540c\u7684\u4e24\u4e2a\u5173\u7cfb\u5408\u5e76\u4e3a\u540c\u4e00\u4e2a\u5173\u7cfb\uff0c\u5e76 \u53bb\u91cd \u96c6\u5408\u5dee \\(r-s\\) \u8fd4\u56de\u5c5e\u4e8e\u5173\u7cfb \\(r\\) \u5374\u4e0d\u51fa\u73b0\u5728\u5173\u7cfb \\(s\\) \u4e2d\u7684\u5143\u7ec4\u7684\u5173\u7cfb \u7b1b\u5361\u5c14\u79ef \\(r\\times s\\) \u8fd4\u56de\u4efb\u610f\u4e24\u4e2a\u5173\u7cfb\u7684\u5143\u7ec4\u7ec4\u5408\uff08\u4e24\u4e2a\u5173\u7cfb\u7684\u5c5e\u6027\u5e94\u4e0d\u76f8\u4ea4\uff0c\u5426\u5219\u5e94\u91cd\u547d\u540d\uff09 \u91cd\u547d\u540d \\(\\rho_{x}(E)\\) \u5c06 \\(E\\) \u91cd\u547d\u540d\u4e3a \\(x\\) \u5e76\u8fd4\u56de","title":"\u57fa\u672c\u64cd\u4f5c"},{"location":"course/db/sql/algebra/#_2","text":"\u64cd\u4f5c \u8868\u8fbe\u5f0f \u542b\u4e49 \u96c6\u5408\u4ea4 \\(r\\cap s\\) \u53d6\u540c\u65f6\u51fa\u73b0\u5728\u4e24\u4e2a\u5173\u7cfb\u4e2d\u7684\u5143\u7ec4\uff0c\u53ef\u8f6c\u5316\u4e3a \\(r-(r-s)\\) \u81ea\u7136\u8fde\u63a5 \\(r\\bowtie s\\) \u53d6\u4e24\u4e2a\u5173\u7cfb\u516c\u5171\u5c5e\u6027\u4e2d\u5177\u6709 \u76f8\u540c\u5c5e\u6027\u503c \u7684\u5143\u7ec4\u8fdb\u884c\u62fc\u63a5 theta\u8fde\u63a5 \\(r\\bowtie_\\theta s\\) \u8fd4\u56de\u6ee1\u8db3\u5173\u7cfb\u5f0f \\(\\theta\\) \u7684\u81ea\u7136\u8fde\u63a5\u7ed3\u679c \u9664 \\(r\\div s\\) \\(r\\div s =\\{t \\vert t\\in\\Pi_{R-S}(r)\\cap \\forall u \\in s(tu\\in r)\\}\\) \u805a\u96c6 \\(_{G_1,G_2,\\dots, G_n}\\ \\mathcal{G}_{F_1(A_1),F_2(A_2),\\dots,F_n(A_n)}(r)\\) \\(G_i\\) \u662f\u7528\u4e8e\u5206\u7ec4\u7684\u5c5e\u6027\uff0c \\(F_i\\) \u662f\u805a\u96c6\u51fd\u6570\uff0c \\(A_i\\) \u662f\u5c5e\u6027\u540d \u8d4b\u503c \\(r\\leftarrow s\\) \u5c06\u53f3\u8fb9\u7684\u8ba1\u7b97\u7ed3\u679c\u8d4b\u503c\u7ed9\u5de6\u8fb9\u7684\u8868","title":"\u62d3\u5c55\u64cd\u4f5c"},{"location":"course/db/sql/sql/","text":"SQL Note title: \u5b66\u4e60\u63d0\u793a SQL\u8fd9\u4e00\u5757\u7684\u77e5\u8bc6\uff0c\u8bb2\u7a76\u719f\u80fd\u751f\u5de7\uff0c\u6d89\u53ca\u7684\u8bed\u6cd5\u5f88\u591a\uff0c\u4f46\u4e0d\u9700\u8981\u5168\u90e8\u638c\u63e1\uff0c\u80fd\u89e3\u51b3\u5b9e\u9645\u9700\u6c42\u5c31\u884c\u3002 Data-Definition Language \u63d0\u4f9b\u5b9a\u4e49\u5173\u7cfb\u6a21\u5f0f\u3001\u5220\u9664\u5173\u7cfb\u4ee5\u53ca\u4fee\u6539\u5173\u7cfb\u6a21\u5f0f\u7684\u547d\u4ee4 create table table_name1 ( ID char ( 5 ), name varchar ( 5 ) not null , # \u7ea6\u675f\u975e\u7a7a\uff0c\u4e5f\u6709\u50cf unique\u8fd9\u6837\u7684\u9650\u5236 dept_name varchar ( 20 ), salary numeric ( 8 , 2 ), primary key ( ID ), # \u8bbe\u7f6e\u4e3b\u7801 foreign key ( dept_name ) references table_name2 , # \u8bbe\u7f6e\u5916\u7801 check ( salary >= 0 ) # check ( P ) \u786e\u4fdd\u8868\u8fbe\u5f0f P \u5728\u8be5\u5173\u7cfb\u4e2d\u7684\u5b58\u5728 ) drop table table_names; # \u5220\u9664\u8868\u53ca\u5185\u5bb9 delete table table_names; # \u4ec5\u5220\u9664\u8868\u7684\u5185\u5bb9 alter table table_names add extra_attribute int; # \u6dfb\u52a0\u5c5e\u6027 alter table table_names drop extra_attribute; # \u5220\u9664\u5c5e\u6027 Data-Manipulation Language(DML) \u67e5\u8be2 \u63d0\u4f9b\u67e5\u8be2\u4fe1\u606f\uff0c\u5728\u6570\u636e\u5e93\u4e2d\u63d2\u5165\u5143\u7ec4\u3001\u5220\u9664\u5143\u7ec4\u3001\u4fee\u6539\u5143\u7ec4\u7684\u80fd\u529b\u3002 \u67e5\u8be2\u8bed\u53e5\u7684\u6267\u884c\u987a\u5e8f\u4e3a\uff1a \\(from\\to where\\to group(aggregate)\\to having \\to select \\to order by\\) \u67e5\u8be2\u51fd\u6570\u7684\u8303\u5f0f\uff1a \\[ \\begin{aligned} &{\\rm SELECT\\ <[DISTINCT]}\\ c_1, c_2, ...>\\\\ &{\\rm FROM}\\ <r_1, ...>\\\\ &{\\rm [WHERE\\ <}condition>]\\\\ &{\\rm [GROUP\\ BY }<c_1,c_2,...>[{\\rm HAVING}\\ <cond_2>]]\\\\ &{\\rm [ORDER\\ BY\\ <c_1\\ [DESC][,c_2[DESC|ASC],...]>]} \\end{aligned} \\] group\u64cd\u4f5c having\u76f8\u5f53\u4e8ewhere\u7684\u4f5c\u7528 \u805a\u5408\u51fd\u6570 avg/min/max/sum/count select cno from detail natural join pos where year ( detail . cdate ) = 2018 group by cno having count ( distinct campus ) = 1 ; Warning \u9700\u4fdd\u8bc1\u4efb\u4f55\u6ca1\u6709\u51fa\u73b0\u5728 group by \u5b50\u53e5\u4e2d\u7684\u5c5e\u6027\uff0c\u5982\u679c\u51fa\u73b0\u5728 select/having \u8bed\u53e5\u4e2d\uff0c\u5219\u5fc5\u987b\u5728\u805a\u96c6\u51fd\u6570\u4e2d\u3002 \u96c6\u5408\u8fd0\u7b97 except/union/intersect \u5dee\u96c6/\u5e76\u96c6/\u4ea4\u96c6 select title from movie except select title from movie where exists ( select * from comment A , comment B where A . title = movie . title and A . user_name = B . user_name and B . title = \u2019 the avenger \u2019 and A . grade <= B . grade ) \u5d4c\u5957\u5b50\u67e5\u8be2 in/not in: \u662f\u5426\u5728\u5b50\u67e5\u8be2\u4e2d exists: \u5b50\u67e5\u8be2\u662f\u5426\u4e3a\u7a7a all/some\uff1a \u6bd4\u8f83\u5927\u5c0f \u63d2\u5165/\u5220\u9664/\u4fee\u6539 # \u63d2\u5165 insert into table_name values (); # \u5220\u9664 delete from table_name where P ; # \u4fee\u6539 update r set attribute = ... where P # \u4fee\u6539 ( case ) update r set attributes = case when ... then ... when ... then ... ... else result end with\u5b50\u53e5 with max_budget ( value ) as ( select max ( budget ) from department ) select budget from department , max_budget where department , budget = max_budget . value \u521b\u5efa\u7d22\u5f15/\u89c6\u56fe # \u521b\u5efa\u7d22\u5f15 create index student_ID on student ( ID ); # \u521b\u5efa\u89c6\u56fe create view as < query expression > ; \u4e8b\u52a1 \u4e8b\u52a1\u7531\u67e5\u8be2\u548c\u66f4\u65b0\u8bed\u53e5\u7684\u5e8f\u5217\u7ec4\u6210 \u6388\u6743 grant / revoke < \u6743\u9650\u5217\u8868 > # \u5305\u62ec select , insert , update , delete on < \u5173\u7cfb\u540d\u6216\u89c6\u56fe\u540d > to < \u7528\u6237 / \u89d2\u8272\u5217\u8868 > ; \u6570\u636e\u7c7b\u578b \u5927\u5bf9\u8c61\u7c7b\u578b clob: \u5b57\u7b26\u6570\u636e\u7684\u5927\u5bf9\u8c61\u6570\u636e\u7c7b book_review clob (10KB) blob: \u4e8c\u8fdb\u5236\u6570\u636e\u7684\u5927\u5bf9\u8c61\u6570\u636e\u7c7b image blob (10MB) \u7528\u6237\u5b9a\u4e49\u65b0\u7c7b\u578b create type person_name as varchar(20) \u57df create domain dollars as numberic(12,2) not null \u53ef\u4ee5\u52a0\u5165\u7ea6\u675f\u6027\u6761\u4ef6","title":"SQL"},{"location":"course/db/sql/sql/#sql","text":"Note title: \u5b66\u4e60\u63d0\u793a SQL\u8fd9\u4e00\u5757\u7684\u77e5\u8bc6\uff0c\u8bb2\u7a76\u719f\u80fd\u751f\u5de7\uff0c\u6d89\u53ca\u7684\u8bed\u6cd5\u5f88\u591a\uff0c\u4f46\u4e0d\u9700\u8981\u5168\u90e8\u638c\u63e1\uff0c\u80fd\u89e3\u51b3\u5b9e\u9645\u9700\u6c42\u5c31\u884c\u3002","title":"SQL"},{"location":"course/db/sql/sql/#data-definition-language","text":"\u63d0\u4f9b\u5b9a\u4e49\u5173\u7cfb\u6a21\u5f0f\u3001\u5220\u9664\u5173\u7cfb\u4ee5\u53ca\u4fee\u6539\u5173\u7cfb\u6a21\u5f0f\u7684\u547d\u4ee4 create table table_name1 ( ID char ( 5 ), name varchar ( 5 ) not null , # \u7ea6\u675f\u975e\u7a7a\uff0c\u4e5f\u6709\u50cf unique\u8fd9\u6837\u7684\u9650\u5236 dept_name varchar ( 20 ), salary numeric ( 8 , 2 ), primary key ( ID ), # \u8bbe\u7f6e\u4e3b\u7801 foreign key ( dept_name ) references table_name2 , # \u8bbe\u7f6e\u5916\u7801 check ( salary >= 0 ) # check ( P ) \u786e\u4fdd\u8868\u8fbe\u5f0f P \u5728\u8be5\u5173\u7cfb\u4e2d\u7684\u5b58\u5728 ) drop table table_names; # \u5220\u9664\u8868\u53ca\u5185\u5bb9 delete table table_names; # \u4ec5\u5220\u9664\u8868\u7684\u5185\u5bb9 alter table table_names add extra_attribute int; # \u6dfb\u52a0\u5c5e\u6027 alter table table_names drop extra_attribute; # \u5220\u9664\u5c5e\u6027","title":"Data-Definition Language"},{"location":"course/db/sql/sql/#data-manipulation-languagedml","text":"","title":"Data-Manipulation Language(DML)"},{"location":"course/db/sql/sql/#_1","text":"\u63d0\u4f9b\u67e5\u8be2\u4fe1\u606f\uff0c\u5728\u6570\u636e\u5e93\u4e2d\u63d2\u5165\u5143\u7ec4\u3001\u5220\u9664\u5143\u7ec4\u3001\u4fee\u6539\u5143\u7ec4\u7684\u80fd\u529b\u3002 \u67e5\u8be2\u8bed\u53e5\u7684\u6267\u884c\u987a\u5e8f\u4e3a\uff1a \\(from\\to where\\to group(aggregate)\\to having \\to select \\to order by\\) \u67e5\u8be2\u51fd\u6570\u7684\u8303\u5f0f\uff1a \\[ \\begin{aligned} &{\\rm SELECT\\ <[DISTINCT]}\\ c_1, c_2, ...>\\\\ &{\\rm FROM}\\ <r_1, ...>\\\\ &{\\rm [WHERE\\ <}condition>]\\\\ &{\\rm [GROUP\\ BY }<c_1,c_2,...>[{\\rm HAVING}\\ <cond_2>]]\\\\ &{\\rm [ORDER\\ BY\\ <c_1\\ [DESC][,c_2[DESC|ASC],...]>]} \\end{aligned} \\]","title":"\u67e5\u8be2"},{"location":"course/db/sql/sql/#group","text":"having\u76f8\u5f53\u4e8ewhere\u7684\u4f5c\u7528 \u805a\u5408\u51fd\u6570 avg/min/max/sum/count select cno from detail natural join pos where year ( detail . cdate ) = 2018 group by cno having count ( distinct campus ) = 1 ; Warning \u9700\u4fdd\u8bc1\u4efb\u4f55\u6ca1\u6709\u51fa\u73b0\u5728 group by \u5b50\u53e5\u4e2d\u7684\u5c5e\u6027\uff0c\u5982\u679c\u51fa\u73b0\u5728 select/having \u8bed\u53e5\u4e2d\uff0c\u5219\u5fc5\u987b\u5728\u805a\u96c6\u51fd\u6570\u4e2d\u3002","title":"group\u64cd\u4f5c"},{"location":"course/db/sql/sql/#_2","text":"except/union/intersect \u5dee\u96c6/\u5e76\u96c6/\u4ea4\u96c6 select title from movie except select title from movie where exists ( select * from comment A , comment B where A . title = movie . title and A . user_name = B . user_name and B . title = \u2019 the avenger \u2019 and A . grade <= B . grade )","title":"\u96c6\u5408\u8fd0\u7b97"},{"location":"course/db/sql/sql/#_3","text":"in/not in: \u662f\u5426\u5728\u5b50\u67e5\u8be2\u4e2d exists: \u5b50\u67e5\u8be2\u662f\u5426\u4e3a\u7a7a all/some\uff1a \u6bd4\u8f83\u5927\u5c0f","title":"\u5d4c\u5957\u5b50\u67e5\u8be2"},{"location":"course/db/sql/sql/#_4","text":"# \u63d2\u5165 insert into table_name values (); # \u5220\u9664 delete from table_name where P ; # \u4fee\u6539 update r set attribute = ... where P # \u4fee\u6539 ( case ) update r set attributes = case when ... then ... when ... then ... ... else result end","title":"\u63d2\u5165/\u5220\u9664/\u4fee\u6539"},{"location":"course/db/sql/sql/#with","text":"with max_budget ( value ) as ( select max ( budget ) from department ) select budget from department , max_budget where department , budget = max_budget . value","title":"with\u5b50\u53e5"},{"location":"course/db/sql/sql/#_5","text":"# \u521b\u5efa\u7d22\u5f15 create index student_ID on student ( ID ); # \u521b\u5efa\u89c6\u56fe create view as < query expression > ;","title":"\u521b\u5efa\u7d22\u5f15/\u89c6\u56fe"},{"location":"course/db/sql/sql/#_6","text":"\u4e8b\u52a1\u7531\u67e5\u8be2\u548c\u66f4\u65b0\u8bed\u53e5\u7684\u5e8f\u5217\u7ec4\u6210","title":"\u4e8b\u52a1"},{"location":"course/db/sql/sql/#_7","text":"grant / revoke < \u6743\u9650\u5217\u8868 > # \u5305\u62ec select , insert , update , delete on < \u5173\u7cfb\u540d\u6216\u89c6\u56fe\u540d > to < \u7528\u6237 / \u89d2\u8272\u5217\u8868 > ;","title":"\u6388\u6743"},{"location":"course/db/sql/sql/#_8","text":"\u5927\u5bf9\u8c61\u7c7b\u578b clob: \u5b57\u7b26\u6570\u636e\u7684\u5927\u5bf9\u8c61\u6570\u636e\u7c7b book_review clob (10KB) blob: \u4e8c\u8fdb\u5236\u6570\u636e\u7684\u5927\u5bf9\u8c61\u6570\u636e\u7c7b image blob (10MB) \u7528\u6237\u5b9a\u4e49\u65b0\u7c7b\u578b create type person_name as varchar(20) \u57df create domain dollars as numberic(12,2) not null \u53ef\u4ee5\u52a0\u5165\u7ea6\u675f\u6027\u6761\u4ef6","title":"\u6570\u636e\u7c7b\u578b"},{"location":"misc/","text":"Introduction \u5728\u8fd9\u91cc\u4f1a\u653e\u4e00\u4e9b\u6742\u4e03\u6742\u516b\u7684\u4e1c\u897f\u3002","title":"Introduction"},{"location":"misc/#introduction","text":"\u5728\u8fd9\u91cc\u4f1a\u653e\u4e00\u4e9b\u6742\u4e03\u6742\u516b\u7684\u4e1c\u897f\u3002","title":"Introduction"},{"location":"rec/","text":"\u4e00\u4e9b\u63a8\u8350 \u63a8\u8350\u9605\u8bfb \u63d0\u95ee\u7684\u667a\u6167 The illustrated guide to a Ph.D. \u7cbe\u901a\u4e00\u4ef6\u4e8b\u9700\u898110000\u5c0f\u65f6\uff0c\u4f46\u5b66\u4f1a\u4e00\u4ef6\u4e8b\uff0c\u53ea\u9700\u898120\u5c0f\u65f6 \u5b66\u4e60\u8d44\u6e90 CS\u81ea\u5b66\u6307\u5357|\u81ea\u5b66\u6307\u5357 \u9b3c\u8c37\u5927\u5b66|\u81ea\u5b66\u6307\u5357/\u56fd\u5916\u8d44\u6e90\u7ffb\u8bd1 \u6d59\u6c5f\u5927\u5b66\u8bfe\u7a0b\u8d44\u6e90\u5171\u4eab\u8ba1\u5212 The Missing Semester of Your CS Education|CS\u524d\u7f6e\u77e5\u8bc6 \u54d4\u54e9\u54d4\u54e9\u848b\u708e\u5ca9|\u64cd\u4f5c\u7cfb\u7edf/\u8ba1\u7b97\u673a\u7cfb\u7edf\u57fa\u7840 Learn X in Y minutes|\u5feb\u901f\u5165\u95e8\u4e00\u95e8\u7f16\u7a0b\u8bed\u8a00 \u63a8\u8350\u8f6f\u4ef6 Notion|All in one\u5728\u7ebf\u7b14\u8bb0/\u4e2a\u4eba\u535a\u5ba2/\u534f\u4f5c\u8f6f\u4ef6 Obsidian|\u79bb\u7ebfmarkdown\u7f16\u8f91\u5668/\u77e5\u8bc6\u5e93 Listary|\u672c\u5730\u6587\u4ef6\u67e5\u627e/\u8f6f\u4ef6\u52a0\u8f7d \u63a8\u8350\u8ba2\u9605 \u962e\u4e00\u5cf0\u7684\u7f51\u7edc\u65e5\u5fd7-\u79d1\u6280\u7231\u597d\u8005\u5468\u520a \u54b8\u9c7c\u8086 \u5c0f\u5de5\u5177\u63a8\u8350 Excalidraw|\u5728\u7ebf\u65e0\u9650\u753b\u5e03 carbon|\u4ee3\u7801\u5757\u56fe\u7247\u751f\u6210 Zlibrary|\u4e16\u754c\u6700\u5927\u7684\u514d\u8d39\u7535\u5b50\u4e66\u5e93","title":"\u4e00\u4e9b\u63a8\u8350"},{"location":"rec/#_1","text":"","title":"\u4e00\u4e9b\u63a8\u8350"},{"location":"rec/#_2","text":"\u63d0\u95ee\u7684\u667a\u6167 The illustrated guide to a Ph.D. \u7cbe\u901a\u4e00\u4ef6\u4e8b\u9700\u898110000\u5c0f\u65f6\uff0c\u4f46\u5b66\u4f1a\u4e00\u4ef6\u4e8b\uff0c\u53ea\u9700\u898120\u5c0f\u65f6","title":"\u63a8\u8350\u9605\u8bfb"},{"location":"rec/#_3","text":"CS\u81ea\u5b66\u6307\u5357|\u81ea\u5b66\u6307\u5357 \u9b3c\u8c37\u5927\u5b66|\u81ea\u5b66\u6307\u5357/\u56fd\u5916\u8d44\u6e90\u7ffb\u8bd1 \u6d59\u6c5f\u5927\u5b66\u8bfe\u7a0b\u8d44\u6e90\u5171\u4eab\u8ba1\u5212 The Missing Semester of Your CS Education|CS\u524d\u7f6e\u77e5\u8bc6 \u54d4\u54e9\u54d4\u54e9\u848b\u708e\u5ca9|\u64cd\u4f5c\u7cfb\u7edf/\u8ba1\u7b97\u673a\u7cfb\u7edf\u57fa\u7840 Learn X in Y minutes|\u5feb\u901f\u5165\u95e8\u4e00\u95e8\u7f16\u7a0b\u8bed\u8a00","title":"\u5b66\u4e60\u8d44\u6e90"},{"location":"rec/#_4","text":"Notion|All in one\u5728\u7ebf\u7b14\u8bb0/\u4e2a\u4eba\u535a\u5ba2/\u534f\u4f5c\u8f6f\u4ef6 Obsidian|\u79bb\u7ebfmarkdown\u7f16\u8f91\u5668/\u77e5\u8bc6\u5e93 Listary|\u672c\u5730\u6587\u4ef6\u67e5\u627e/\u8f6f\u4ef6\u52a0\u8f7d","title":"\u63a8\u8350\u8f6f\u4ef6"},{"location":"rec/#_5","text":"\u962e\u4e00\u5cf0\u7684\u7f51\u7edc\u65e5\u5fd7-\u79d1\u6280\u7231\u597d\u8005\u5468\u520a \u54b8\u9c7c\u8086","title":"\u63a8\u8350\u8ba2\u9605"},{"location":"rec/#_6","text":"Excalidraw|\u5728\u7ebf\u65e0\u9650\u753b\u5e03 carbon|\u4ee3\u7801\u5757\u56fe\u7247\u751f\u6210 Zlibrary|\u4e16\u754c\u6700\u5927\u7684\u514d\u8d39\u7535\u5b50\u4e66\u5e93","title":"\u5c0f\u5de5\u5177\u63a8\u8350"},{"location":"tutorials/","text":"Introduction \u5728\u8fd9\u91cc\u4f1a\u653e\u7f6e\u5e73\u5e38\u641e\u9879\u76ee/\u6478\u9c7c\u65f6\u9047\u5230\u7684\u4e00\u4e9b\u95ee\u9898\uff0c\u4ee5\u53ca\u5176\u89e3\u51b3\u65b9\u5f0f\u3002\u5e0c\u671b\u5bf9\u4f60\u80fd\u6709\u6240\u5e2e\u52a9\u3002","title":"Introduction"},{"location":"tutorials/#introduction","text":"\u5728\u8fd9\u91cc\u4f1a\u653e\u7f6e\u5e73\u5e38\u641e\u9879\u76ee/\u6478\u9c7c\u65f6\u9047\u5230\u7684\u4e00\u4e9b\u95ee\u9898\uff0c\u4ee5\u53ca\u5176\u89e3\u51b3\u65b9\u5f0f\u3002\u5e0c\u671b\u5bf9\u4f60\u80fd\u6709\u6240\u5e2e\u52a9\u3002","title":"Introduction"},{"location":"tutorials/mkdocs/","text":"mkdocs\u5b89\u88c5\u8bb0\u5f55 \u672c\u5730\u73af\u5883\u914d\u7f6e pip install mkdocs-material mkdocs new . \u4fee\u6539mkdocs.yml \u8bbe\u7f6ematerial\u4e3b\u9898 #\u6dfb\u52a0\u4e0b\u5217\u4ee3\u7801 theme: name: material \u8fdc\u7a0b\u90e8\u7f72 \u91c7\u7528Github\u8fdc\u7a0b\u90e8\u7f72 1. \u521b\u5efagithub\u4ed3\u5e93 2. \u4e0a\u4f20\u672c\u5730\u7684\u4ee3\u7801 3. \u8bbe\u7f6egithub action \u4f7f\u7528\u4e0b\u65b9\u4ee3\u7801\u521b\u5efa\u4e00\u4e2a\u65b0\u7684github action name: ci on: push: branches: - master - main jobs: deploy: runs-on: ubuntu-latest steps: - uses: actions/checkout@v2 - uses: actions/setup-python@v2 with: python-version: 3.x - run: pip install mkdocs-material - run: mkdocs gh-deploy --force 4. \u8bbe\u7f6e\u6e32\u67d3\u5206\u652f \u5728Setting\u9875\u8bbe\u7f6e\u6e32\u67d3\u7684\u5206\u652f 5. \u81ea\u52a8\u6e32\u67d3 \u7b49\u5019\u6e32\u67d3\u6210\u529f\uff0c\u5373\u53ef\u8bbf\u95ee <username>.github.io/repository_name \u53c2\u8003\u8d44\u6599 \u4f7f\u7528MkDocs \u5feb\u901f\u642d\u5efa\u6587\u6863\u7cfb\u7edf MkDocs Material Github\u591a\u57df\u540d\u90e8\u7f72","title":"mkdocs\u5b89\u88c5\u8bb0\u5f55"},{"location":"tutorials/mkdocs/#mkdocs","text":"","title":"mkdocs\u5b89\u88c5\u8bb0\u5f55"},{"location":"tutorials/mkdocs/#_1","text":"pip install mkdocs-material mkdocs new .","title":"\u672c\u5730\u73af\u5883\u914d\u7f6e"},{"location":"tutorials/mkdocs/#mkdocsyml","text":"\u8bbe\u7f6ematerial\u4e3b\u9898 #\u6dfb\u52a0\u4e0b\u5217\u4ee3\u7801 theme: name: material","title":"\u4fee\u6539mkdocs.yml"},{"location":"tutorials/mkdocs/#_2","text":"\u91c7\u7528Github\u8fdc\u7a0b\u90e8\u7f72","title":"\u8fdc\u7a0b\u90e8\u7f72"},{"location":"tutorials/mkdocs/#1-github","text":"","title":"1. \u521b\u5efagithub\u4ed3\u5e93"},{"location":"tutorials/mkdocs/#2","text":"","title":"2. \u4e0a\u4f20\u672c\u5730\u7684\u4ee3\u7801"},{"location":"tutorials/mkdocs/#3-github-action","text":"\u4f7f\u7528\u4e0b\u65b9\u4ee3\u7801\u521b\u5efa\u4e00\u4e2a\u65b0\u7684github action name: ci on: push: branches: - master - main jobs: deploy: runs-on: ubuntu-latest steps: - uses: actions/checkout@v2 - uses: actions/setup-python@v2 with: python-version: 3.x - run: pip install mkdocs-material - run: mkdocs gh-deploy --force","title":"3. \u8bbe\u7f6egithub action"},{"location":"tutorials/mkdocs/#4","text":"\u5728Setting\u9875\u8bbe\u7f6e\u6e32\u67d3\u7684\u5206\u652f","title":"4. \u8bbe\u7f6e\u6e32\u67d3\u5206\u652f"},{"location":"tutorials/mkdocs/#5","text":"\u7b49\u5019\u6e32\u67d3\u6210\u529f\uff0c\u5373\u53ef\u8bbf\u95ee <username>.github.io/repository_name","title":"5. \u81ea\u52a8\u6e32\u67d3"},{"location":"tutorials/mkdocs/#_3","text":"\u4f7f\u7528MkDocs \u5feb\u901f\u642d\u5efa\u6587\u6863\u7cfb\u7edf MkDocs Material Github\u591a\u57df\u540d\u90e8\u7f72","title":"\u53c2\u8003\u8d44\u6599"}]}